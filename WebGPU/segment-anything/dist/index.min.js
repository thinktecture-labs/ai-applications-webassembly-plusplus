var e={"../../../onnxruntime/js/web/dist/esm/ort.webgpu.min.js":
/*!**************************************************************!*\
  !*** ../../../onnxruntime/js/web/dist/esm/ort.webgpu.min.js ***!
  \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>O,TRACE:()=>E,TRACE_FUNC_BEGIN:()=>k,TRACE_FUNC_END:()=>T,Tensor:()=>S,TrainingSession:()=>R,default:()=>Il,env:()=>d,registerBackend:()=>a});
/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$,b,x,C,S,E,I,k,T,A,O,z,R,j=Object.defineProperty,M=Object.getOwnPropertyDescriptor,B=Object.getOwnPropertyNames,P=Object.prototype.hasOwnProperty,D=(e,t)=>()=>(e&&(t=e(e=0)),t),N=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),U=(e,t)=>{for(var n in t)j(e,n,{get:t[n],enumerable:!0})},W=e=>((e,t,n,i)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of B(t))!P.call(e,r)&&r!==n&&j(e,r,{get:()=>t[r],enumerable:!(i=M(t,r))||i.enumerable});return e})(j({},"__esModule",{value:!0}),e),L=D((()=>{i=new Map,r=[],a=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{let a=i.get(e);if(void 0===a)i.set(e,{backend:t,priority:n});else{if(a.priority>n)return;if(a.priority===n&&a.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=r.indexOf(e);-1!==t&&r.splice(t,1);for(let t=0;t<r.length;t++)if(i.get(r[t]).priority<=n)return void r.splice(t,0,e);r.push(e)}}},o=async e=>{let t=0===e.length?r:e,n=[];for(let e of t){let t=i.get(e);if(t){if(t.initialized)return t.backend;if(t.aborted)continue;let i=!!t.initPromise;try{return i||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(r){i||n.push({name:e,err:r}),t.aborted=!0}finally{delete t.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`)}})),H=D((()=>{L()})),G=D((()=>{s="1.18.0"})),V=D((()=>{G(),u="warning",l={wasm:{},webgl:{},webgpu:{},versions:{common:s},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);u=e}},get logLevel(){return u}},Object.defineProperty(l,"logLevel",{enumerable:!0})})),F=D((()=>{V(),d=l})),q=D((()=>{c=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let i=n.getContext("2d");if(null!=i){let r,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(r=e.dims[2],a=e.dims[3]):(r=e.dims[3],a=e.dims[2]);let o,s,u=void 0!==t?.format?t.format:"RGB",l=t?.norm;void 0===l||void 0===l.mean?o=[255,255,255,255]:"number"==typeof l.mean?o=[l.mean,l.mean,l.mean,l.mean]:(o=[l.mean[0],l.mean[1],l.mean[2],0],void 0!==l.mean[3]&&(o[3]=l.mean[3])),void 0===l||void 0===l.bias?s=[0,0,0,0]:"number"==typeof l.bias?s=[l.bias,l.bias,l.bias,l.bias]:(s=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(s[3]=l.bias[3]));let d=a*r,c=0,p=d,f=2*d,h=-1;"RGBA"===u?(c=0,p=d,f=2*d,h=3*d):"RGB"===u?(c=0,p=d,f=2*d):"RBG"===u&&(c=0,f=d,p=2*d);for(let t=0;t<a;t++)for(let n=0;n<r;n++){let r=(e.data[c++]-s[0])*o[0],a=(e.data[p++]-s[1])*o[1],u=(e.data[f++]-s[2])*o[2],l=-1===h?255:(e.data[h++]-s[3])*o[3];i.fillStyle="rgba("+r+","+a+","+u+","+l+")",i.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},p=(e,t)=>{let n,i=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==i)throw new Error("Can not access image data");{let r,a,o;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(r=e.dims[2],a=e.dims[1],o=e.dims[3]):(r=e.dims[3],a=e.dims[2],o=e.dims[1]);let s,u,l=void 0!==t&&void 0!==t.format?t.format:"RGB",d=t?.norm;void 0===d||void 0===d.mean?s=[255,255,255,255]:"number"==typeof d.mean?s=[d.mean,d.mean,d.mean,d.mean]:(s=[d.mean[0],d.mean[1],d.mean[2],255],void 0!==d.mean[3]&&(s[3]=d.mean[3])),void 0===d||void 0===d.bias?u=[0,0,0,0]:"number"==typeof d.bias?u=[d.bias,d.bias,d.bias,d.bias]:(u=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(u[3]=d.bias[3]));let c=a*r;if(void 0!==t&&(void 0!==t.format&&4===o&&"RGBA"!==t.format||3===o&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,f=0,h=1,m=2,g=3,y=0,v=c,w=2*c,_=-1;"RGBA"===l?(y=0,v=c,w=2*c,_=3*c):"RGB"===l?(y=0,v=c,w=2*c):"RBG"===l&&(y=0,w=c,v=2*c),n=i.createImageData(r,a);for(let t=0;t<a*r;f+=p,h+=p,m+=p,g+=p,t++)n.data[f]=(e.data[y++]-u[0])*s[0],n.data[h]=(e.data[v++]-u[1])*s[1],n.data[m]=(e.data[w++]-u[2])*s[2],n.data[g]=-1===_?255:(e.data[_++]-u[3])*s[3]}return n}})),K=D((()=>{Q(),f=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,i,{height:r,width:a}=t,o=t.norm??{mean:255,bias:0};n="number"==typeof o.mean?[o.mean,o.mean,o.mean,o.mean]:[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],i="number"==typeof o.bias?[o.bias,o.bias,o.bias,o.bias]:[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let s=void 0!==t.format?t.format:"RGBA",u=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",l=r*a,d="RGBA"===u?new Float32Array(4*l):new Float32Array(3*l),c=4,p=0,f=1,h=2,m=3,g=0,y=l,v=2*l,w=-1;"RGB"===s&&(c=3,p=0,f=1,h=2,m=-1),"RGBA"===u?w=3*l:"RBG"===u?(g=0,v=l,y=2*l):"BGR"===u&&(v=0,y=l,g=2*l);for(let t=0;t<l;t++,p+=c,h+=c,f+=c,m+=c)d[g++]=(e[p]+i[0])/n[0],d[y++]=(e[f]+i[1])/n[1],d[v++]=(e[h]+i[2])/n[2],-1!==w&&-1!==m&&(d[w++]=(e[m]+i[3])/n[3]);return new C("float32",d,"RGBA"===u?[1,4,r,a]:[1,3,r,a])},h=async(e,t)=>{let n,i=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,r=typeof ImageData<"u"&&e instanceof ImageData,a=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,o="string"==typeof e,s=t??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=e=>e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(i){let i=u();i.width=e.width,i.height=e.height;let r=l(i);if(null==r)throw new Error("Can not access image data");{let i=e.height,a=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(i=t.resizedHeight,a=t.resizedWidth),void 0!==t){if(s=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");s.tensorFormat="RGBA",s.height=i,s.width=a}else s.tensorFormat="RGBA",s.height=i,s.width=a;r.drawImage(e,0,0),n=r.getImageData(0,0,a,i).data}}else{if(!r){if(a){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let i=u();i.width=e.width,i.height=e.height;let r=l(i);if(null!=r){let t=e.height,i=e.width;return r.drawImage(e,0,0,i,t),n=r.getImageData(0,0,i,t).data,s.height=t,s.width=i,f(n,s)}throw new Error("Can not access image data")}if(o)return new Promise(((t,n)=>{let i=u(),r=l(i);if(!e||!r)return n();let a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{i.width=a.width,i.height=a.height,r.drawImage(a,0,0,i.width,i.height);let e=r.getImageData(0,0,i.width,i.height);s.height=i.height,s.width=i.width,t(f(e.data,s))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let i,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(i=t.resizedHeight,r=t.resizedWidth):(i=e.height,r=e.width),void 0!==t&&(s=t),s.format="RGBA",s.height=i,s.width=r,void 0!==t){let t=u();t.width=r,t.height=i;let a=l(t);if(null==a)throw new Error("Can not access image data");a.putImageData(e,0,0),n=a.getImageData(0,0,r,i).data}else n=e.data}}if(void 0!==n)return f(n,s);throw new Error("Input data provided is not supported - aborted tensor creation")},m=(e,t)=>{let{width:n,height:i,download:r,dispose:a}=t;return new C({location:"texture",type:"float32",texture:e,dims:[1,i,n,4],download:r,dispose:a})},g=(e,t)=>{let{dataType:n,dims:i,download:r,dispose:a}=t;return new C({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:i,download:r,dispose:a})},y=(e,t,n)=>new C({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})})),Y=D((()=>{v=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),w=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),_=!1,$=()=>{if(!_){_=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,n=typeof Float16Array<"u"&&Float16Array.from;e&&(v.set("int64",BigInt64Array),w.set(BigInt64Array,"int64")),t&&(v.set("uint64",BigUint64Array),w.set(BigUint64Array,"uint64")),n?(v.set("float16",Float16Array),w.set(Float16Array,"float16")):v.set("float16",Uint16Array)}}})),Z=D((()=>{Q(),b=e=>{let t=1;for(let n=0;n<e.length;n++){let i=e[n];if("number"!=typeof i||!Number.isSafeInteger(i))throw new TypeError(`dims[${n}] must be an integer, got: ${i}`);if(i<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${i}`);t*=i}return t},x=(e,t)=>{switch(e.location){case"cpu":return new C(e.type,e.data,t);case"cpu-pinned":return new C({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new C({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new C({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),Q=D((()=>{q(),K(),Y(),Z(),C=class{constructor(e,t,n){let i,r;if($(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,i=e.type,r=e.dims,e.location){case"cpu-pinned":{let t=v.get(i);if(!t)throw new TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==i)throw new TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==i&&"float16"!==i&&"int32"!==i&&"int64"!==i&&"uint32"!==i&&"uint8"!==i&&"bool"!==i)throw new TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,o;if("string"==typeof e)if(i=e,o=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{let n=v.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");a="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${i} tensor's data must be type of ${n}`);a=t}}else if(o=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)i="string",a=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);i="bool",a=Uint8Array.from(e)}}else{let t=w.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);i=t,a=e}if(void 0===o)o=[a.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");r=o,this.cpuData=a,this.dataLocation="cpu"}let a=b(r);if(this.cpuData&&a!==this.cpuData.length)throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=r,this.size=a}static async fromImage(e,t){return h(e,t)}static fromTexture(e,t){return m(e,t)}static fromGpuBuffer(e,t){return g(e,t)}static fromPinnedBuffer(e,t,n){return y(e,t,n)}toDataURL(e){return c(this,e)}toImageData(e){return p(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return x(this,e)}}})),J=D((()=>{Q(),S=C})),X=D((()=>{V(),E=(e,t)=>{l.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},I=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],i=!1;for(let r=0;r<n.length;r++){if(i&&!n[r].includes("TRACE_FUNC")){let i=`FUNC_${e}::${n[r].trim().split(" ")[1]}`;return t&&(i+=`::${t}`),void E("CPU",i)}n[r].includes("TRACE_FUNC")&&(i=!0)}},k=e=>{l.wasm.trace&&I("BEGIN",e)},T=e=>{l.wasm.trace&&I("END",e)}})),ee=D((()=>{L(),J(),X(),A=class e{constructor(e){this.handler=e}async run(e,t,n){k();let i={},r={};if("object"!=typeof e||null===e||e instanceof S||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof S)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);i[e]=null}if("object"==typeof n&&null!==n)r=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,o=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==o.indexOf(n)){let r=t[n];(null===r||r instanceof S)&&(e=!0,a=!1,i[n]=r)}if(e){if("object"==typeof n&&null!==n)r=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else r=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of this.inputNames)if(typeof e[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(a)for(let e of this.outputNames)i[e]=null;let o=await this.handler.run(e,i,r),s={};for(let e in o)if(Object.hasOwnProperty.call(o,e)){let t=o[e];s[e]=t instanceof S?t:new S(t.type,t.data,t.dims)}return T(),s}async release(){return this.handler.dispose()}static async create(t,n,i,r){k();let a,s={};if("string"==typeof t){if(a=t,"object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(a=t,"object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,o=0,u=t.byteLength;if("object"==typeof n&&null!==n)s=n;else if("number"==typeof n){if(o=n,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(u=t.byteLength-o,"number"==typeof i){if(u=i,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||o+u>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-o}].`);if("object"==typeof r&&null!==r)s=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(typeof i<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");a=new Uint8Array(e,o,u)}}let u=(s.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),l=await(await o(u)).createInferenceSessionHandler(a,s);return T(),new e(l)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}})),te=D((()=>{ee(),O=A})),ne=D((()=>{})),ie=D((()=>{L(),J(),"Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",z=class e{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,n){let i=t.evalModel||"",r=t.optimizerModel||"",a=n||{},s=(a.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),u=await o(s);if(u.createTrainingSessionHandler){let n=await u.createTrainingSessionHandler(t.checkpointState,t.trainModel,i,r,a);return new e(n,!!t.optimizerModel,!!t.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,n,i,r){let a={},o={};if("object"!=typeof n||null===n||n instanceof S||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if("object"==typeof i){if(null===i)throw new TypeError("Unexpected argument[1]: cannot be null.");if(i instanceof S)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(i)){if(0===i.length)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let e of i){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);a[e]=null}if("object"==typeof r&&null!==r)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,n=Object.getOwnPropertyNames(i);for(let r of t)if(-1!==n.indexOf(r)){let t=i[r];(null===t||t instanceof S)&&(e=!0,s=!1,a[r]=t)}if(e){if("object"==typeof r&&null!==r)o=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else o=i}}else if(typeof i<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of e)if(typeof n[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(s)for(let e of t)a[e]=null;return[a,o]}convertHandlerReturnTypeToMapOfTensors(e){let t={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let i=e[n];t[n]=i instanceof S?i:new S(i.type,i.data,i.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){let[i,r]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),a=await this.handler.runTrainStep(e,i,r);return this.convertHandlerReturnTypeToMapOfTensors(a)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){let[i,r]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),a=await this.handler.runEvalStep(e,i,r);return this.convertHandlerReturnTypeToMapOfTensors(a)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){let n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}})),re=D((()=>{ie(),R=z})),ae={};U(ae,{InferenceSession:()=>O,TRACE:()=>E,TRACE_FUNC_BEGIN:()=>k,TRACE_FUNC_END:()=>T,Tensor:()=>S,TrainingSession:()=>R,env:()=>d,registerBackend:()=>a});var oe=D((()=>{H(),F(),te(),J(),X(),ne(),re()})),se={};U(se,{createReadStream:()=>de,readFile:()=>ue,readFileSync:()=>le});var ue,le,de,ce=D((()=>{ue=void 0,le=void 0,de=void 0})),pe={};U(pe,{join:()=>fe});var fe,he=D((()=>{fe=void 0})),me=N(((e,t)=>{var n,i=(n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(n=n||__filename),function(e={}){var t,i,r=e;r.ready=new Promise(((e,n)=>{t=e,i=n})),r.mountExternalData=(e,t)=>{(r.Nh||(r.Nh=new Map)).set(e,t)},r.unmountExternalData=()=>{delete r.Nh},r.jsepInit=(e,t,n,i,a,o,s,u,l,d,c)=>{r.ui=e,r.gi=t,r.ki=n,r.Th=i,r.ji=a,r.he=o,r.li=s,r.ni=u,r.hi=l,r.ii=d,r.mi=c,t=(e,t,n)=>(...i)=>{let r=Pe,a=t?.();i=e(...i);let o=t?.();return a!==o&&(e=o,n(a),t=n=null),Pe!=r?new Promise(((e,t)=>{He={resolve:e,reject:t}})):i},n=t=>async(...n)=>{try{if(r.Kh)throw Error("Session already started");let i=r.Kh={oi:n[0],errors:[]},a=await t(...n);if(r.Kh!==i)throw Error("Session mismatch");e.flush();let o=i.errors;if(0<o.length){let e=await Promise.all(o);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return a}finally{r.Kh=null}},r._OrtCreateSession=t(r._OrtCreateSession,(()=>r._OrtCreateSession),(e=>r._OrtCreateSession=e)),r._OrtRun=n(t(r._OrtRun,(()=>r._OrtRun),(e=>r._OrtRun=e))),r._OrtRunWithBinding=n(t(r._OrtRunWithBinding,(()=>r._OrtRunWithBinding),(e=>r._OrtRunWithBinding=e))),r._OrtBindInput=t(r._OrtBindInput,(()=>r._OrtBindInput),(e=>r._OrtBindInput=e)),r.jsepRegisterBuffer=(t,n,i,r)=>e.registerBuffer(t,n,i,r),r.jsepGetBuffer=t=>e.getBuffer(t),r.jsepCreateDownloader=(t,n,i)=>e.createDownloader(t,n,i),r.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},r.jsepOnRunStart=t=>e.onRunStart(t)};var a,o,s,u=Object.assign({},r),l="./this.program",d=(e,t)=>{throw t},c="object"==typeof window,p="function"==typeof importScripts,f="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h="";if(f){var m=(ce(),W(se)),g=(he(),W(pe));h=p?g.dirname(h)+"/":__dirname+"/",a=(e,t)=>(e=H(e)?new URL(e):g.normalize(e),m.readFileSync(e,t?void 0:"utf8")),s=e=>((e=a(e,!0)).buffer||(e=new Uint8Array(e)),e),o=(e,t,n,i=!0)=>{e=H(e)?new URL(e):g.normalize(e),m.readFile(e,i?void 0:"utf8",((e,r)=>{e?n(e):t(i?r.buffer:r)}))},!r.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),d=(e,t)=>{throw process.exitCode=e,t},r.inspect=()=>"[Emscripten Module object]"}else(c||p)&&(p?h=self.location.href:typeof document<"u"&&document.currentScript&&(h=document.currentScript.src),n&&(h=n),h=0!==h.indexOf("blob:")?h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):"",a=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},p&&(s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=()=>{200==i.status||0==i.status&&i.response?t(i.response):n()},i.onerror=n,i.send(null)});var y=console.log.bind(console),v=console.error.bind(console);Object.assign(r,u),u=null,"object"!=typeof WebAssembly&&N("no native wasm support detected");var w,_,$,b,x,C,S,E,I,k,T,A,O=!1;function z(){var e=w.buffer;r.HEAP8=$=new Int8Array(e),r.HEAP16=x=new Int16Array(e),r.HEAPU8=b=new Uint8Array(e),r.HEAPU16=C=new Uint16Array(e),r.HEAP32=S=new Int32Array(e),r.HEAPU32=E=new Uint32Array(e),r.HEAPF32=I=new Float32Array(e),r.HEAPF64=A=new Float64Array(e),r.HEAP64=k=new BigInt64Array(e),r.HEAPU64=T=new BigUint64Array(e)}var R=[],j=[],M=[],B=0,P=null,D=null;function N(e){throw v(e="Aborted("+e+")"),O=!0,_=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),i(e),e}var U,L=e=>e.startsWith("data:application/octet-stream;base64,"),H=e=>e.startsWith("file://");if(!L(U="ort-wasm-simd.wasm")){var G=U;U=r.locateFile?r.locateFile(G,h):h+G}function V(e){if(s)return s(e);throw"both async and sync fetching of the wasm failed"}function F(e,t,n){return function(e){if(c||p){if("function"==typeof fetch&&!H(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>V(e)));if(o)return new Promise(((t,n)=>{o(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>V(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{v(`failed to asynchronously prepare wasm: ${e}`),N(e)}))}var q={1380064:(e,t,n,i)=>{if(typeof r>"u"||!r.Nh)return 1;if((e=re(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=r.Nh.get(e)))return 2;if((t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{return b.set(e.subarray(t,t+n),i>>>0>>>0),0}catch{return 4}},1380565:(e,t,n)=>{n=re(n);let i=new Uint8Array(t);i.set(b.subarray(e>>>0,e+t>>>0)),"object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node?(ce(),W(se)).writeFileSync(n,i):(e=new File([i],n,{type:"application/octet-stream"}),e=URL.createObjectURL(e),window.open(e,"_blank"))},1381073:()=>{r.hi()},1381104:()=>{r.ii()},1381133:()=>{r.mi()},1381158:e=>r.gi(e),1381191:e=>r.ki(e),1381223:(e,t,n)=>{r.Th(e,t,n,!0)},1381262:(e,t,n)=>{r.Th(e,t,n)},1381295:e=>{r.he("Abs",e,void 0)},1381346:e=>{r.he("Neg",e,void 0)},1381397:e=>{r.he("Floor",e,void 0)},1381450:e=>{r.he("Ceil",e,void 0)},1381502:e=>{r.he("Reciprocal",e,void 0)},1381560:e=>{r.he("Sqrt",e,void 0)},1381612:e=>{r.he("Exp",e,void 0)},1381663:e=>{r.he("Erf",e,void 0)},1381714:e=>{r.he("Sigmoid",e,void 0)},1381769:(e,t,n)=>{r.he("HardSigmoid",e,{alpha:t,beta:n})},1381848:e=>{r.he("Log",e,void 0)},1381899:e=>{r.he("Sin",e,void 0)},1381950:e=>{r.he("Cos",e,void 0)},1382001:e=>{r.he("Tan",e,void 0)},1382052:e=>{r.he("Asin",e,void 0)},1382104:e=>{r.he("Acos",e,void 0)},1382156:e=>{r.he("Atan",e,void 0)},1382208:e=>{r.he("Sinh",e,void 0)},1382260:e=>{r.he("Cosh",e,void 0)},1382312:e=>{r.he("Asinh",e,void 0)},1382365:e=>{r.he("Acosh",e,void 0)},1382418:e=>{r.he("Atanh",e,void 0)},1382471:e=>{r.he("Tanh",e,void 0)},1382523:e=>{r.he("Not",e,void 0)},1382574:(e,t,n)=>{r.he("Clip",e,{min:t,max:n})},1382643:e=>{r.he("Clip",e,void 0)},1382695:(e,t)=>{r.he("Elu",e,{alpha:t})},1382753:e=>{r.he("Relu",e,void 0)},1382805:(e,t)=>{r.he("LeakyRelu",e,{alpha:t})},1382869:(e,t)=>{r.he("ThresholdedRelu",e,{alpha:t})},1382939:(e,t)=>{r.he("Cast",e,{to:t})},1382997:e=>{r.he("Add",e,void 0)},1383048:e=>{r.he("Sub",e,void 0)},1383099:e=>{r.he("Mul",e,void 0)},1383150:e=>{r.he("Div",e,void 0)},1383201:e=>{r.he("Pow",e,void 0)},1383252:e=>{r.he("Equal",e,void 0)},1383305:e=>{r.he("Greater",e,void 0)},1383360:e=>{r.he("GreaterOrEqual",e,void 0)},1383422:e=>{r.he("Less",e,void 0)},1383474:e=>{r.he("LessOrEqual",e,void 0)},1383533:(e,t,n,i,a)=>{r.he("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1383692:(e,t,n,i,a)=>{r.he("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1383850:(e,t,n,i,a)=>{r.he("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1384008:(e,t,n,i,a)=>{r.he("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1384167:(e,t,n,i,a)=>{r.he("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1384325:(e,t,n,i,a)=>{r.he("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1384482:(e,t,n,i,a)=>{r.he("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1384639:(e,t,n,i,a)=>{r.he("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1384800:(e,t,n,i,a)=>{r.he("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1384964:(e,t,n,i,a)=>{r.he("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1385128:e=>{r.he("Where",e,void 0)},1385181:(e,t,n)=>{r.he("Transpose",e,{perm:t?Array.from(S.subarray(t>>>0,n>>>0)):[]})},1385289:(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m)=>{r.he("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:i,kernel_shape:[a],pads:[o,s],strides:[u],wIsConst:()=>!!$[d>>>0],outputPadding:c?Array.from(S.subarray(c>>>0,p>>>0)):[],outputShape:f?Array.from(S.subarray(f>>>0,h>>>0)):[],activation:re(m)})},1385691:(e,t,n,i,a,o,s,u,l,d,c,p,f,h)=>{r.he("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(S.subarray(n>>>0,2+(n>>>0)>>>0)),group:i,kernelShape:Array.from(S.subarray(a>>>0,2+(a>>>0)>>>0)),pads:Array.from(S.subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(S.subarray(s>>>0,2+(s>>>0)>>>0)),wIsConst:()=>!!$[l>>>0],outputPadding:d?Array.from(S.subarray(d>>>0,c>>>0)):[],outputShape:p?Array.from(S.subarray(p>>>0,f>>>0)):[],activation:re(h)})},1386256:(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m)=>{r.he("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:[n],group:i,kernel_shape:[a],pads:[o,s],strides:[u],wIsConst:()=>!!$[d>>>0],outputPadding:c?Array.from(S.subarray(c>>>0,p>>>0)):[],outputShape:f?Array.from(S.subarray(f>>>0,h>>>0)):[],activation:re(m)})},1386658:(e,t,n,i,a,o,s,u,l,d,c,p,f,h)=>{r.he("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:Array.from(S.subarray(n>>>0,2+(n>>>0)>>>0)),group:i,kernelShape:Array.from(S.subarray(a>>>0,2+(a>>>0)>>>0)),pads:Array.from(S.subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(S.subarray(s>>>0,2+(s>>>0)>>>0)),wIsConst:()=>!!$[l>>>0],outputPadding:d?Array.from(S.subarray(d>>>0,c>>>0)):[],outputShape:p?Array.from(S.subarray(p>>>0,f>>>0)):[],activation:re(h)})},1387223:(e,t)=>{r.he("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1387314:(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>{r.he("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[d,c,p,f],strides:[h,m]})},1387598:(e,t)=>{r.he("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1387689:(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>{r.he("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[d,c,p,f],strides:[h,m]})},1387973:(e,t)=>{r.he("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1388060:(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>{r.he("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[d,c,p,f],strides:[h,m]})},1388340:(e,t)=>{r.he("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1388427:(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>{r.he("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:a,dilations:[o,s],kernel_shape:[u,l],pads:[d,c,p,f],strides:[h,m]})},1388707:(e,t,n,i,a)=>{r.he("Gemm",e,{alpha:t,beta:n,transA:i,transB:a})},1388811:e=>{r.he("MatMul",e,void 0)},1388865:(e,t,n,i)=>{r.he("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},1388973:(e,t,n,i)=>{r.he("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},1389081:(e,t)=>{r.he("Softmax",e,{axis:t})},1389144:(e,t)=>{r.he("Concat",e,{axis:t})},1389204:(e,t,n,i,a)=>{r.he("Split",e,{axis:t,numOutputs:n,splitSizes:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1389344:e=>{r.he("Expand",e,void 0)},1389398:(e,t)=>{r.he("Gather",e,{axis:Number(t)})},1389469:(e,t)=>{r.he("GatherElements",e,{axis:Number(t)})},1389548:(e,t,n,i,a,o,s,u,l,d,c)=>{r.he("Resize",e,{antialias:t,axes:n?Array.from(S.subarray(n>>>0,i>>>0)):[],coordinateTransformMode:re(a),cubicCoeffA:o,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:re(l),mode:re(d),nearestMode:re(c)})},1389894:(e,t,n,i,a,o,s)=>{r.he("Slice",e,{starts:t?Array.from(S.subarray(t>>>0,n>>>0)):[],ends:i?Array.from(S.subarray(i>>>0,a>>>0)):[],axes:o?Array.from(S.subarray(o>>>0,s>>>0)):[]})},1390110:e=>{r.he("Tile",e,void 0)},1390162:(e,t,n)=>{r.he("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},1390269:(e,t,n)=>{r.he("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1390383:(e,t,n)=>{r.he("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1390497:e=>{r.he("Range",e,void 0)},1390550:(e,t)=>{r.he("Einsum",e,{equation:re(t)})},1390631:(e,t,n,i,a)=>{r.he("Pad",e,{mode:t,value:n,pads:i?Array.from(S.subarray(i>>>0,a>>>0)):[]})},1390758:(e,t,n,i,a,o)=>{r.he("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!i,format:o?"NHWC":"NCHW"})},1390927:(e,t,n,i,a,o)=>{r.he("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!i,format:o?"NHWC":"NCHW"})},1391096:(e,t,n)=>{r.he("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},1391193:(e,t,n,i,a,o,s,u,l)=>{r.he("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:i,scale:a,doRotary:o,qkvHiddenSizes:s?Array.from(S.subarray(Number(u)>>>0,Number(u)+s>>>0)):[],pastPresentShareBuffer:!!l})},1391465:e=>{r.he("BiasAdd",e,void 0)},1391520:e=>{r.he("BiasSplitGelu",e,void 0)},1391581:e=>{r.he("FastGelu",e,void 0)},1391637:(e,t,n,i,a,o,s,u,l,d,c,p,f)=>{r.he("Conv",e,{format:l?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:i,kernel_shape:[a],pads:o?Array.from(S.subarray(o>>>0,s>>>0)):[],strides:[u],w_is_const:()=>!!$[d>>>0],activation:re(c),activation_params:p?Array.from(I.subarray(p>>>0,f>>>0)):[]})},1392007:(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>{r.he("Conv",e,{format:p?"NHWC":"NCHW",auto_pad:t,dilations:[n,i],group:a,kernel_shape:[o,s],pads:u?Array.from(S.subarray(u>>>0,l>>>0)):[],strides:[d,c],w_is_const:()=>!!$[f>>>0],activation:re(h),activation_params:m?Array.from(I.subarray(m>>>0,g>>>0)):[]})},1392398:e=>{r.he("Gelu",e,void 0)},1392450:(e,t,n,i,a,o)=>{r.he("MatMulNBits",e,{k:t,n,accuracyLevel:i,bits:a,blockSize:o})},1392577:(e,t,n,i,a,o)=>{r.he("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:i,scale:a,doRotary:o})},1392736:(e,t)=>{r.he("SkipLayerNormalization",e,{epsilon:t})},1392817:e=>{r.li(e)},1392851:(e,t)=>r.ni(e,t,r.Kh.oi,r.Kh.errors)};function K(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var Y=[],Z=0,Q=0;function J(e){this.Jh=e,this.Dh=e-24,this.bi=function(e){E[this.Dh+4>>>2>>>0]=e},this.Lh=function(){return E[this.Dh+4>>>2>>>0]},this.ai=function(e){E[this.Dh+8>>>2>>>0]=e},this.Vh=function(e){$[this.Dh+12>>>0>>>0]=e?1:0},this.Yh=function(){return 0!=$[this.Dh+12>>>0>>>0]},this.Wh=function(e){$[this.Dh+13>>>0>>>0]=e?1:0},this.di=function(){return 0!=$[this.Dh+13>>>0>>>0]},this.$h=function(e,t){this.Mh(0),this.bi(e),this.ai(t)},this.Mh=function(e){E[this.Dh+16>>>2>>>0]=e},this.Xh=function(){return E[this.Dh+16>>>2>>>0]},this.Zh=function(){if(kt(this.Lh()))return E[this.Jh>>>2>>>0];var e=this.Xh();return 0!==e?e:this.Jh}}var X,ee,te=e=>{var t=Q;if(!t)return $t(0),0;var n=new J(t);n.Mh(t);var i=n.Lh();if(!i)return $t(0),t;for(var r in e){var a=e[r];if(0===a||a===i)break;if(It(a,i,n.Dh+16))return $t(a),t}return $t(i),t},ne=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ie=(e,t,n)=>{var i=(t>>>=0)+n;for(n=t;e[n]&&!(n>=i);)++n;if(16<n-t&&e.buffer&&ne)return ne.decode(e.subarray(t,n));for(i="";t<n;){var r=e[t++];if(128&r){var a=63&e[t++];if(192==(224&r))i+=String.fromCharCode((31&r)<<6|a);else{var o=63&e[t++];65536>(r=224==(240&r)?(15&r)<<12|a<<6|o:(7&r)<<18|a<<12|o<<6|63&e[t++])?i+=String.fromCharCode(r):(r-=65536,i+=String.fromCharCode(55296|r>>10,56320|1023&r))}}else i+=String.fromCharCode(r)}return i},re=(e,t)=>(e>>>=0)?ie(b,e,t):"",ae=e=>{for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);127>=i?t++:2047>=i?t+=2:55296<=i&&57343>=i?(t+=4,++n):t+=3}return t},oe=(e,t,n,i)=>{if(!(0<i))return 0;var r=n>>>=0;i=n+i-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=i)break;t[n++>>>0]=o}else{if(2047>=o){if(n+1>=i)break;t[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=i)break;t[n++>>>0]=224|o>>12}else{if(n+3>=i)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63}t[n++>>>0]=128|o>>6&63}t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-r},ue=e=>{if(null===e)return"null";var t=typeof e;return"object"===t||"array"===t||"function"===t?e.toString():""+e},le=e=>{for(var t="";b[e>>>0];)t+=X[b[e++>>>0]];return t},de={},fe={},me={};function ge(e,t,n={}){if(!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");!function(e,t,n={}){var i=t.name;if(!e)throw new ee(`type "${i}" must have a positive integer typeid pointer`);if(fe.hasOwnProperty(e)){if(n.ei)return;throw new ee(`Cannot register type '${i}' twice`)}fe[e]=t,delete me[e],de.hasOwnProperty(e)&&(t=de[e],delete de[e],t.forEach((e=>e())))}(e,t,n)}var ye=(e,t,n)=>{switch(t){case 1:return n?e=>$[e>>>0>>>0]:e=>b[e>>>0>>>0];case 2:return n?e=>x[e>>>1>>>0]:e=>C[e>>>1>>>0];case 4:return n?e=>S[e>>>2>>>0]:e=>E[e>>>2>>>0];case 8:return n?e=>k[e>>>3]:e=>T[e>>>3];default:throw new TypeError(`invalid integer width (${t}): ${e}`)}};function ve(){this.Fh=[void 0],this.Sh=[]}var we=new ve;function _e(e){(e>>>=0)>=we.Dh&&0==--we.get(e).Uh&&we.Mh(e)}var $e=e=>{if(!e)throw new ee("Cannot use deleted val. handle = "+e);return we.get(e).value},be=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return we.Lh({Uh:1,value:e})}};function xe(e){return this.fromWireType(S[e>>>2>>>0])}var Ce=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(I[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(A[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function Se(e){return this.fromWireType(E[e>>>2>>>0])}var Ee=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ie=(e,t)=>{for(var n=e>>1,i=n+t/2;!(n>=i)&&C[n>>>0];)++n;if(32<(n<<=1)-e&&Ee)return Ee.decode(b.subarray(e>>>0,n>>>0));for(n="",i=0;!(i>=t/2);++i){var r=x[e+2*i>>>1>>>0];if(0==r)break;n+=String.fromCharCode(r)}return n},ke=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var i=t;n=(n-=2)<2*e.length?n/2:e.length;for(var r=0;r<n;++r)x[t>>>1>>>0]=e.charCodeAt(r),t+=2;return x[t>>>1>>>0]=0,t-i},Te=e=>2*e.length,Ae=(e,t)=>{for(var n=0,i="";!(n>=t/4);){var r=S[e+4*n>>>2>>>0];if(0==r)break;++n,65536<=r?(r-=65536,i+=String.fromCharCode(55296|r>>10,56320|1023&r)):i+=String.fromCharCode(r)}return i},Oe=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var i=t;n=i+n-4;for(var r=0;r<e.length;++r){var a=e.charCodeAt(r);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++r)),S[t>>>2>>>0]=a,(t+=4)+4>n)break}return S[t>>>2>>>0]=0,t-i},ze=e=>{for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);55296<=i&&57343>=i&&++n,t+=4}return t},Re=(e,t)=>{var n=fe[e];if(void 0===n)throw e=wt(e),n=le(e),vt(e),new ee(t+" has unknown type "+n);return n},je=(e,t,n)=>{var i=[];return e=e.toWireType(i,n),i.length&&(E[t>>>2>>>0]=be(i)),e},Me=e=>{try{e()}catch(e){N(e)}},Be=0,Pe=null,De=0,Ne=[],Ue={},We={},Le=0,He=null,Ge=[];function Ve(e){if(!O){if(0===Be){var t=!1,n=!1;e(((e=0)=>{if(!O&&(De=e,t=!0,n)){Be=2,Me((()=>Nr(Pe))),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.resume(),e=!1;try{var i=(0,ht[We[S[Pe+8>>>2>>>0]]])()}catch(t){i=t,e=!0}var r=!1;if(!Pe){var a=He;a&&(He=null,(e?a.reject:a.resolve)(i),r=!0)}if(e&&!r)throw i}})),n=!0,t||(Be=1,Pe=function(){var e=yt(65548),t=e+12;E[e>>>2>>>0]=t,E[e+4>>>2>>>0]=t+65536,t=Ne[0];var n=Ue[t];return void 0===n&&(n=Le++,Ue[t]=n,We[n]=t),S[e+8>>>2>>>0]=n,e}(),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.pause(),Me((()=>Pr(Pe))))}else 2===Be?(Be=0,Me(Ur),vt(Pe),Pe=null,Ge.forEach((e=>{if(!O)try{e();try{_=_=e=_,r.onExit?.(e),O=!0,d(e,new K(e))}catch(e){e instanceof K||"unwind"==e||d(1,e)}}catch(e){e instanceof K||"unwind"==e||d(1,e)}}))):N(`invalid state: ${Be}`);return De}}function Fe(e){return Ve((t=>{e().then(t)}))}var qe,Ke=[],Ye={},Ze=e=>{var t=Ye[e];return void 0===t?le(e):t},Qe=()=>"object"==typeof globalThis?globalThis:Function("return this")(),Je=(e,t)=>Object.defineProperty(t,"name",{value:e}),Xe=e=>e%4==0&&(e%100!=0||e%400==0),et=[0,31,60,91,121,152,182,213,244,274,305,335],tt=[0,31,59,90,120,151,181,212,243,273,304,334],nt=e=>{var t=ae(e)+1,n=yt(t);return n&&oe(e,b,n,t),n},it=[],rt=(e,t)=>{it.length=0;for(var n;n=b[e++>>>0];){var i=105!=n;t+=(i&=112!=n)&&t%8?4:0,it.push(112==n?E[t>>>2>>>0]:106==n?k[t>>>3]:105==n?S[t>>>2>>>0]:A[t>>>3>>>0]),t+=i?8:4}return it},at={},ot=()=>{if(!qe){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"};for(e in at)void 0===at[e]?delete t[e]:t[e]=at[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);qe=n}return qe},st=[null,[],[]],ut=[31,29,31,30,31,30,31,31,30,31,30,31],lt=[31,28,31,30,31,30,31,31,30,31,30,31];function dt(e,t,n,i){function r(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function a(e,t){return r(e,t,"0")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var i;return 0===(i=n(e.getFullYear()-t.getFullYear()))&&0===(i=n(e.getMonth()-t.getMonth()))&&(i=n(e.getDate()-t.getDate())),i}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.Gh;for(e=new Date(new Date(e.Hh+1900,0,1).getTime());0<t;){var n=e.getMonth(),i=(Xe(e.getFullYear())?ut:lt)[n];if(!(t>i-e.getDate())){e.setDate(e.getDate()+t);break}t-=i-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=o(t,e)?0>=o(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var l=E[40+(i>>>=0)>>>2>>>0];for(var d in i={si:S[i>>>2>>>0],ri:S[i+4>>>2>>>0],Oh:S[i+8>>>2>>>0],Rh:S[i+12>>>2>>>0],Ph:S[i+16>>>2>>>0],Hh:S[i+20>>>2>>>0],Eh:S[i+24>>>2>>>0],Gh:S[i+28>>>2>>>0],vi:S[i+32>>>2>>>0],pi:S[i+36>>>2>>>0],ti:l?re(l):""},n=re(n),l={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(d,"g"),l[d]);var c="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(d in l={"%a":e=>c[e.Eh].substring(0,3),"%A":e=>c[e.Eh],"%b":e=>p[e.Ph].substring(0,3),"%B":e=>p[e.Ph],"%C":e=>a((e.Hh+1900)/100|0,2),"%d":e=>a(e.Rh,2),"%e":e=>r(e.Rh,2," "),"%g":e=>u(e).toString().substring(2),"%G":e=>u(e),"%H":e=>a(e.Oh,2),"%I":e=>(0==(e=e.Oh)?e=12:12<e&&(e-=12),a(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Ph-1;t+=(Xe(e.Hh+1900)?ut:lt)[n++]);return a(e.Rh+t,3)},"%m":e=>a(e.Ph+1,2),"%M":e=>a(e.ri,2),"%n":()=>"\n","%p":e=>0<=e.Oh&&12>e.Oh?"AM":"PM","%S":e=>a(e.si,2),"%t":()=>"\t","%u":e=>e.Eh||7,"%U":e=>a(Math.floor((e.Gh+7-e.Eh)/7),2),"%V":e=>{var t=Math.floor((e.Gh+7-(e.Eh+6)%7)/7);if(2>=(e.Eh+371-e.Gh-2)%7&&t++,t)53==t&&(4==(n=(e.Eh+371-e.Gh)%7)||3==n&&Xe(e.Hh)||(t=1));else{t=52;var n=(e.Eh+7-e.Gh-1)%7;(4==n||5==n&&Xe(e.Hh%400-1))&&t++}return a(t,2)},"%w":e=>e.Eh,"%W":e=>a(Math.floor((e.Gh+7-(e.Eh+6)%7)/7),2),"%y":e=>(e.Hh+1900).toString().substring(2),"%Y":e=>e.Hh+1900,"%z":e=>(0<=(e=e.pi)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.ti,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),l)n.includes(d)&&(n=n.replace(new RegExp(d,"g"),l[d](i)));return d=function(e){var t=Array(ae(e)+1);return oe(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),d.length>t?0:($.set(d,e>>>0),d.length-1)}for(var ct=Array(256),pt=0;256>pt;++pt)ct[pt]=String.fromCharCode(pt);X=ct,ee=r.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},r.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},Object.assign(ve.prototype,{get(e){return this.Fh[e]},has(e){return void 0!==this.Fh[e]},Lh(e){var t=this.Sh.pop()||this.Fh.length;return this.Fh[t]=e,t},Mh(e){this.Fh[e]=void 0,this.Sh.push(e)}}),we.Fh.push({value:void 0},{value:null},{value:!0},{value:!1}),we.Dh=we.Fh.length,r.count_emval_handles=()=>{for(var e=0,t=we.Dh;t<we.Fh.length;++t)void 0!==we.Fh[t]&&++e;return e};var ft={ad:function(e,t,n){return Fe((async()=>{await r.ji(e,t,n)}))},u:function(e){return(e=new J(e>>>0)).Yh()||(e.Vh(!0),Z--),e.Wh(!1),Y.push(e),Et(e.Jh),e.Zh()},O:()=>{_t(0,0);var e=Y.pop();St(e.Jh),Q=0},a:function(){return te([])},m:function(e){return te([e>>>0])},x:function(e,t){return te([e>>>0,t>>>0])},q:function(e,t,n){return te([e>>>0,t>>>0,n>>>0])},zb:()=>{var e=Y.pop();e||N("no exception to throw");var t=e.Jh;throw e.di()||(Y.push(e),e.Wh(!0),e.Vh(!1),Z++),Q=t},r:function(e,t,n){throw new J(e>>>=0).$h(t>>>0,n>>>0),Z++,Q=e},eb:()=>Z,g:function(e){throw Q||=e>>>0,Q},Ab:function(){return 0},Xc:function(){},Ic:function(){},Kc:function(){},Bc:function(){return 0},Vc:function(){},Qc:function(){},Uc:function(){},Vb:function(){},Jc:function(){},Gc:function(){},Wc:function(){},Hc:function(){},Yb:function(e,t,n,i,r){var a=-1!=(t=le(t>>>=0)).indexOf("u");a&&(r=(1n<<64n)-1n),ge(e>>>0,{name:t,fromWireType:e=>e,toWireType:function(e,n){if("bigint"!=typeof n&&"number"!=typeof n)throw new TypeError(`Cannot convert "${ue(n)}" to ${this.name}`);if(n<i||n>r)throw new TypeError(`Passing a number "${ue(n)}" from JS side to C/C++ side to an argument of type "${t}", which is outside the valid range [${i}, ${r}]!`);return n},argPackAdvance:8,readValueFromPointer:ye(t,n>>>0,!a),Ih:null})},_c:function(e,t,n,i){ge(e>>>0,{name:t=le(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:i},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType(b[e>>>0])},Ih:null})},Zc:function(e,t){ge(e>>>0,{name:t=le(t>>>0),fromWireType:e=>{var t=$e(e);return _e(e),t},toWireType:(e,t)=>be(t),argPackAdvance:8,readValueFromPointer:xe,Ih:null})},Xb:function(e,t,n){ge(e>>>0,{name:t=le(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:8,readValueFromPointer:Ce(t,n>>>0),Ih:null})},za:function(e,t,n,i,r){if(e>>>=0,n>>>=0,t=le(t>>>0),-1===r&&(r=4294967295),r=e=>e,0===i){var a=32-8*n;r=e=>e<<a>>>a}var o=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};ge(e,{name:t,fromWireType:r,toWireType:o,argPackAdvance:8,readValueFromPointer:ye(t,n,0!==i),Ih:null})},aa:function(e,t,n){function i(e){return new r($.buffer,E[e+4>>>2>>>0],E[e>>>2>>>0])}var r=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][t];ge(e>>>0,{name:n=le(n>>>0),fromWireType:i,argPackAdvance:8,readValueFromPointer:i},{ei:!0})},Zb:function(e,t){var n="std::string"===(t=le(t>>>0));ge(e>>>0,{name:t,fromWireType:function(e){var t=E[e>>>2>>>0],i=e+4;if(n)for(var r=i,a=0;a<=t;++a){var o=i+a;if(a==t||0==b[o>>>0]){if(r=re(r,o-r),void 0===s)var s=r;else s+=String.fromCharCode(0),s+=r;r=o+1}}else{for(s=Array(t),a=0;a<t;++a)s[a]=String.fromCharCode(b[i+a>>>0]);s=s.join("")}return vt(e),s},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var i="string"==typeof t;if(!(i||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new ee("Cannot pass non-string to std::string");var r=n&&i?ae(t):t.length,a=yt(4+r+1),o=a+4;if(E[a>>>2>>>0]=r,n&&i)oe(t,b,o,r+1);else if(i)for(i=0;i<r;++i){var s=t.charCodeAt(i);if(255<s)throw vt(o),new ee("String has UTF-16 code units that do not fit in 8 bits");b[o+i>>>0]=s}else for(i=0;i<r;++i)b[o+i>>>0]=t[i];return null!==e&&e.push(vt,a),a},argPackAdvance:8,readValueFromPointer:Se,Ih(e){vt(e)}})},Cb:function(e,t,n){if(t>>>=0,n=le(n>>>=0),2===t)var i=Ie,r=ke,a=Te,o=()=>C,s=1;else 4===t&&(i=Ae,r=Oe,a=ze,o=()=>E,s=2);ge(e>>>0,{name:n,fromWireType:e=>{for(var n,r=E[e>>>2>>>0],a=o(),u=e+4,l=0;l<=r;++l){var d=e+4+l*t;(l==r||0==a[d>>>s])&&(u=i(u,d-u),void 0===n?n=u:(n+=String.fromCharCode(0),n+=u),u=d+t)}return vt(e),n},toWireType:(e,i)=>{if("string"!=typeof i)throw new ee(`Cannot pass non-string to C++ string type ${n}`);var o=a(i),u=yt(4+o+t);return E[u>>>2]=o>>s,r(i,u+4,o+t),null!==e&&e.push(vt,u),u},argPackAdvance:8,readValueFromPointer:xe,Ih(e){vt(e)}})},$c:function(e,t){ge(e>>>0,{fi:!0,name:t=le(t>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},Yc:()=>1,jd:function(e,t,n){return t>>>=0,n>>>=0,e=$e(e>>>0),t=Re(t,"emval::as"),je(t,n,e)},zd:function(e){return e>>>=0,Fe((()=>(e=$e(e)).then(be)))},rd:function(e,t,n,i){return n>>>=0,i>>>=0,(e=Ke[e>>>0])(null,t=$e(t>>>0),n,i)},fa:function(e,t,n,i,r){return n>>>=0,i>>>=0,r>>>=0,(e=Ke[e>>>0])(t=$e(t>>>0),t[n=Ze(n)],i,r)},Ac:_e,od:function(e,t){return t>>>=0,(e=$e(e>>>0))==(t=$e(t))},wd:function(e){return 0==(e>>>=0)?be(Qe()):(e=Ze(e),be(Qe()[e]))},ea:function(e,t,n){t=((e,t)=>{for(var n=Array(e),i=0;i<e;++i)n[i]=Re(E[t+4*i>>>2>>>0],"parameter "+i);return n})(e,t>>>0);var i=t.shift();e--;var r="return function (obj, func, destructorsRef, args) {\n",a=0,o=[];0===n&&o.push("obj");for(var s=["retType"],u=[i],l=0;l<e;++l)o.push("arg"+l),s.push("argType"+l),u.push(t[l]),r+=`  var arg${l} = argType${l}.readValueFromPointer(args${a?"+"+a:""});\n`,a+=t[l].argPackAdvance;for(r+=`  var rv = ${1===n?"new func":"func.call"}(${o.join(", ")});\n`,l=0;l<e;++l)t[l].deleteObject&&(r+=`  argType${l}.deleteObject(arg${l});\n`);return i.fi||(s.push("emval_returnValue"),u.push(je),r+="  return emval_returnValue(retType, destructorsRef, rv);\n"),s.push(r+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=Je(t.name||"unknownFunctionName",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(s).apply(null,u),n=`methodCaller<(${t.map((e=>e.name)).join(", ")}) => ${i.name}>`,(e=>{var t=Ke.length;return Ke.push(e),t})(Je(n,e))},vd:function(e,t){return t>>>=0,e=$e(e>>>0),t=$e(t),be(e[t])},U:function(e){4<(e>>>=0)&&(we.get(e).Uh+=1)},kc:function(){return be([])},fd:function(e){e=$e(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return be(t)},W:function(e){return be(Ze(e>>>0))},Wa:function(){return be({})},td:function(e){for(var t=$e(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}_e(e)},qd:function(e,t,n){t>>>=0,n>>>=0,e=$e(e>>>0),t=$e(t),n=$e(n),e[t]=n},yb:function(e,t){return t>>>=0,e=(e=Re(e>>>0,"_emval_take_value")).readValueFromPointer(t),be(e)},Nc:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),S[t>>>2>>>0]=e.getUTCSeconds(),S[t+4>>>2>>>0]=e.getUTCMinutes(),S[t+8>>>2>>>0]=e.getUTCHours(),S[t+12>>>2>>>0]=e.getUTCDate(),S[t+16>>>2>>>0]=e.getUTCMonth(),S[t+20>>>2>>>0]=e.getUTCFullYear()-1900,S[t+24>>>2>>>0]=e.getUTCDay(),S[t+28>>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Oc:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),S[t>>>2>>>0]=e.getSeconds(),S[t+4>>>2>>>0]=e.getMinutes(),S[t+8>>>2>>>0]=e.getHours(),S[t+12>>>2>>>0]=e.getDate(),S[t+16>>>2>>>0]=e.getMonth(),S[t+20>>>2>>>0]=e.getFullYear()-1900,S[t+24>>>2>>>0]=e.getDay(),S[t+28>>>2>>>0]=(Xe(e.getFullYear())?et:tt)[e.getMonth()]+e.getDate()-1|0,S[t+36>>>2>>>0]=-60*e.getTimezoneOffset();var n=new Date(e.getFullYear(),6,1).getTimezoneOffset(),i=new Date(e.getFullYear(),0,1).getTimezoneOffset();S[t+32>>>2>>>0]=0|(n!=i&&e.getTimezoneOffset()==Math.min(i,n))},Pc:function(e){e>>>=0;var t=new Date(S[e+20>>>2>>>0]+1900,S[e+16>>>2>>>0],S[e+12>>>2>>>0],S[e+8>>>2>>>0],S[e+4>>>2>>>0],S[e>>>2>>>0],0),n=S[e+32>>>2>>>0],i=t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),a=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(a,r);return 0>n?S[e+32>>>2>>>0]=+(r!=a&&o==i):0<n!=(o==i)&&(r=Math.max(a,r),t.setTime(t.getTime()+6e4*((0<n?o:r)-i))),S[e+24>>>2>>>0]=t.getDay(),S[e+28>>>2>>>0]=(Xe(t.getFullYear())?et:tt)[t.getMonth()]+t.getDate()-1|0,S[e>>>2>>>0]=t.getSeconds(),S[e+4>>>2>>>0]=t.getMinutes(),S[e+8>>>2>>>0]=t.getHours(),S[e+12>>>2>>>0]=t.getDate(),S[e+16>>>2>>>0]=t.getMonth(),S[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),isNaN(e)?(S[gt()>>>2>>>0]=61,e=-1):e/=1e3,BigInt(e)},Lc:function(){return-52},Mc:function(){},Dc:function(e,t,n){function i(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}n>>>=0;var r=(new Date).getFullYear(),a=new Date(r,0,1),o=new Date(r,6,1);r=a.getTimezoneOffset();var s=o.getTimezoneOffset();E[e>>>0>>>2>>>0]=60*Math.max(r,s),S[t>>>0>>>2>>>0]=+(r!=s),e=i(a),t=i(o),e=nt(e),t=nt(t),s<r?(E[n>>>2>>>0]=e,E[n+4>>>2>>>0]=t):(E[n>>>2>>>0]=t,E[n+4>>>2>>>0]=e)},jb:()=>{N("")},A:function(e,t,n){return e>>>=0,t=rt(t>>>0,n>>>0),q[e].apply(null,t)},_b:function(e,t,n){return e>>>=0,t=rt(t>>>0,n>>>0),q[e].apply(null,t)},Wb:()=>Date.now(),Ec:function(){return 4294901760},ha:()=>performance.now(),Cc:function(e){e>>>=0;var t=b.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296);var r=Math;i=Math.max(e,i);e:{r=(r.min.call(r,4294901760,i+(65536-i%65536)%65536)-w.buffer.byteLength+65535)/65536;try{w.grow(r),z();var a=1;break e}catch{}a=void 0}if(a)return!0}return!1},Sc:function(e,t){e>>>=0,t>>>=0;var n=0;return ot().forEach(((i,r)=>{var a=t+n;for(r=E[e+4*r>>>2>>>0]=a,a=0;a<i.length;++a)$[r++>>>0>>>0]=i.charCodeAt(a);$[r>>>0>>>0]=0,n+=i.length+1})),0},Tc:function(e,t){e>>>=0,t>>>=0;var n=ot();E[e>>>2>>>0]=n.length;var i=0;return n.forEach((e=>i+=e.length+1)),E[t>>>2>>>0]=i,0},Bb:()=>52,Ub:function(){return 52},Rc:function(){return 70},Tb:function(e,t,n,i){t>>>=0,n>>>=0,i>>>=0;for(var r=0,a=0;a<n;a++){var o=E[t>>>2>>>0],s=E[t+4>>>2>>>0];t+=8;for(var u=0;u<s;u++){var l=b[o+u>>>0],d=st[e];0===l||10===l?((1===e?y:v)(ie(d,0)),d.length=0):d.push(l)}r+=s}return E[i>>>2>>>0]=r,0},wb:function(e,t){var n=bt();try{return wn(e,t)}catch(e){if(xt(n),e!==e+0)throw e;_t(1,0)}},bd:function(e,t,n){var i=bt();try{return _n(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},la:function(e,t,n,i){var r=bt();try{return Ui(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},Z:function(e,t,n,i,r){var a=bt();try{return Er(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},ka:function(e,t,n,i,r,a){var o=bt();try{return Ir(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},ta:function(e,t,n,i,r,a,o){var s=bt();try{return ti(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},na:function(e,t){var n=bt();try{return yn(e,t)}catch(e){if(xt(n),e!==e+0)throw e;_t(1,0)}},cd:function(e,t,n){var i=bt();try{return vn(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},ob:function(e,t,n,i){var r=bt();try{return Ni(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},N:function(e,t,n,i,r){var a=bt();try{return Rr(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},y:function(e){var t=bt();try{return Zt(e)}catch(e){if(xt(t),e!==e+0)throw e;_t(1,0)}},b:function(e,t){var n=bt();try{return zt(e,t)}catch(e){if(xt(n),e!==e+0)throw e;_t(1,0)}},Sb:function(e,t,n){var i=bt();try{return Kt(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},xa:function(e,t,n){var i=bt();try{return qt(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},f:function(e,t,n){var i=bt();try{return Ot(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},Eb:function(e,t,n,i){var r=bt();try{return xr(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},h:function(e,t,n,i){var r=bt();try{return At(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},_:function(e,t,n,i,r,a){var o=bt();try{return fr(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},i:function(e,t,n,i,r){var a=bt();try{return Dt(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},dd:function(e,t,n,i,r,a){var o=bt();try{return er(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},j:function(e,t,n,i,r,a){var o=bt();try{return Bt(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},t:function(e,t,n,i,r,a,o){var s=bt();try{return Rt(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},s:function(e,t,n,i,r,a,o,s){var u=bt();try{return dn(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},o:function(e,t,n,i,r,a,o,s,u){var l=bt();try{return hn(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},Va:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{return bn(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},Ba:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{return nr(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},oa:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{return tn(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},Pb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g){var y=bt();try{return Kn(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g)}catch(e){if(xt(y),e!==e+0)throw e;_t(1,0)}},bb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w){var _=bt();try{return Zn(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w)}catch(e){if(xt(_),e!==e+0)throw e;_t(1,0)}},Ib:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w){var _=bt();try{return ir(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w)}catch(e){if(xt(_),e!==e+0)throw e;_t(1,0)}},mb:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{return Gi(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},hc:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{return mr(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},wc:function(e,t,n,i,r,a,o,s,u){var l=bt();try{return pn(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},ec:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{return wr(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},fc:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{return yr(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},$b:function(e,t,n,i,r,a){var o=bt();try{return an(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},qa:function(e,t,n,i,r,a,o){var s=bt();try{return _i(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},xb:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{return mn(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},Aa:function(e,t,n,i,r,a,o,s){var u=bt();try{return pr(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},Db:function(e,t,n,i,r){var a=bt();try{return Ar(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},da:function(e,t,n,i,r,a){var o=bt();try{return $i(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},gc:function(e,t,n,i,r,a,o,s){var u=bt();try{return gr(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},Sa:function(e,t,n,i,r,a,o){var s=bt();try{return Jn(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},E:function(e,t,n,i){var r=bt();try{return Pt(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},G:function(e,t,n,i,r){var a=bt();try{return Pn(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},Gb:function(e,t,n,i,r,a){var o=bt();try{return hr(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},id:function(e,t,n,i,r,a,o){var s=bt();try{return vr(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},sa:function(e,t,n,i,r,a,o,s){var u=bt();try{return ji(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},M:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{return Wn(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},X:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f){var h=bt();try{return Dn(e,t,n,i,r,a,o,s,u,l,d,c,p,f)}catch(e){if(xt(h),e!==e+0)throw e;_t(1,0)}},V:function(e,t,n,i,r,a){var o=bt();try{return ei(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},z:function(e,t,n){var i=bt();try{return Ft(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},Fb:function(e,t,n,i){var r=bt();try{return br(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},dc:function(e,t,n,i,r,a,o){var s=bt();try{return _r(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},D:function(e,t,n,i,r){var a=bt();try{return sr(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},Hb:function(e,t,n,i,r,a){var o=bt();try{return lr(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},hd:function(e,t,n,i,r,a,o){var s=bt();try{return $r(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},Ta:function(e,t){var n=bt();try{return rn(e,t)}catch(e){if(xt(n),e!==e+0)throw e;_t(1,0)}},wa:function(e,t,n,i){var r=bt();try{return Ei(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},ic:function(e,t,n,i,r,a){var o=bt();try{return dr(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},ac:function(e){var t=bt();try{return on(e)}catch(e){if(xt(t),e!==e+0)throw e;return _t(1,0),0n}},Mb:function(e,t,n){var i=bt();try{return jr(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;return _t(1,0),0n}},Y:function(e,t){var n=bt();try{return Xt(e,t)}catch(e){if(xt(n),e!==e+0)throw e;return _t(1,0),0n}},I:function(e,t,n){var i=bt();try{return Yt(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;return _t(1,0),0n}},C:function(e,t,n,i){var r=bt();try{return Tn(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;return _t(1,0),0n}},Za:function(e,t,n,i){var r=bt();try{return Br(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;return _t(1,0),0n}},P:function(e,t,n){var i=bt();try{return Un(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;return _t(1,0),0n}},d:function(e){var t=bt();try{Mt(e)}catch(e){if(xt(t),e!==e+0)throw e;_t(1,0)}},$a:function(e,t,n,i,r){var a=bt();try{Ln(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},n:function(e,t){var n=bt();try{jt(e,t)}catch(e){if(xt(n),e!==e+0)throw e;_t(1,0)}},Xa:function(e,t,n,i){var r=bt();try{Cr(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},va:function(e,t,n){var i=bt();try{Pi(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},vb:function(e,t,n,i,r,a,o){var s=bt();try{Sn(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},e:function(e,t,n){var i=bt();try{Tt(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},xc:function(e,t,n,i){var r=bt();try{Cn(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},ca:function(e,t,n,i){var r=bt();try{Di(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},fb:function(e,t,n,i,r){var a=bt();try{Vn(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},Ca:function(e,t,n,i,r){var a=bt();try{yi(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},lb:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{Vi(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},hb:function(e,t,n,i,r,a,o){var s=bt();try{En(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},c:function(e,t,n,i){var r=bt();try{Nt(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},uc:function(e,t,n,i,r){var a=bt();try{On(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},md:function(e,t,n,i,r){var a=bt();try{rr(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},oc:function(e,t,n,i,r,a,o){var s=bt();try{zi(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},k:function(e,t,n,i,r){var a=bt();try{Wt(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},sc:function(e,t,n,i,r,a,o){var s=bt();try{Hn(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},l:function(e,t,n,i,r,a){var o=bt();try{Ut(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},vc:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{In(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},rc:function(e,t,n,i,r,a,o,s){var u=bt();try{Gn(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},pd:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{qi(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},p:function(e,t,n,i,r,a,o){var s=bt();try{Lt(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},Qa:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m){var g=bt();try{oi(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m)}catch(e){if(xt(g),e!==e+0)throw e;_t(1,0)}},tb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g){var y=bt();try{ai(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g)}catch(e){if(xt(y),e!==e+0)throw e;_t(1,0)}},Pa:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h){var m=bt();try{si(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h)}catch(e){if(xt(m),e!==e+0)throw e;_t(1,0)}},Kb:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{Wi(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},B:function(e,t,n,i,r,a,o,s){var u=bt();try{cn(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},K:function(e,t,n,i,r,a,o,s,u){var l=bt();try{Qt(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},T:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{nn(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},_a:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{kn(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},nc:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{Ri(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},gb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f){var h=bt();try{Fn(e,t,n,i,r,a,o,s,u,l,d,c,p,f)}catch(e){if(xt(h),e!==e+0)throw e;_t(1,0)}},ya:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{Xn(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},ja:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{Gt(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},Q:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{Yn(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},cb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f){var h=bt();try{fn(e,t,n,i,r,a,o,s,u,l,d,c,p,f)}catch(e){if(xt(h),e!==e+0)throw e;_t(1,0)}},Ka:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h){var m=bt();try{Mr(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h)}catch(e){if(xt(m),e!==e+0)throw e;_t(1,0)}},kb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m){var g=bt();try{Qi(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m)}catch(e){if(xt(g),e!==e+0)throw e;_t(1,0)}},Fa:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g){var y=bt();try{Ji(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g)}catch(e){if(xt(y),e!==e+0)throw e;_t(1,0)}},lc:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v){var w=bt();try{Yi(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v)}catch(e){if(xt(w),e!==e+0)throw e;_t(1,0)}},Ga:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w){var _=bt();try{Zi(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w)}catch(e){if(xt(_),e!==e+0)throw e;_t(1,0)}},Ha:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_){var $=bt();try{Fi(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_)}catch(e){if(xt($),e!==e+0)throw e;_t(1,0)}},ed:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{zn(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},ud:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{qn(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},ra:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h){var m=bt();try{Bi(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h)}catch(e){if(xt(m),e!==e+0)throw e;_t(1,0)}},nd:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{tr(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},La:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{Ai(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},Ja:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f){var h=bt();try{Mi(e,t,n,i,r,a,o,s,u,l,d,c,p,f)}catch(e){if(xt(h),e!==e+0)throw e;_t(1,0)}},Rb:function(e,t,n,i,r,a,o){var s=bt();try{Jt(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},qc:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{bi(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},Ia:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$,b,x,C,S){var E=bt();try{Li(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$,b,x,C,S)}catch(e){if(xt(E),e!==e+0)throw e;_t(1,0)}},Ma:function(e,t,n,i,r,a,o,s,u){var l=bt();try{Ti(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},pb:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{wi(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},ma:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{Ii(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},Da:function(e,t,n,i,r,a){var o=bt();try{ni(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},jc:function(e,t,n,i,r,a,o){var s=bt();try{ur(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},pc:function(e,t,n,i,r,a,o,s){var u=bt();try{Ci(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},Jb:function(e,t,n,i,r,a,o,s){var u=bt();try{Xi(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},Ea:function(e,t,n,i,r){var a=bt();try{or(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},ia:function(e,t,n,i,r,a){var o=bt();try{Mn(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},xd:function(e,t,n,i,r,a,o){var s=bt();try{Or(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},ld:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{ar(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},S:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{xi(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},db:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{ln(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},Ya:function(e,t,n,i,r,a,o,s,u){var l=bt();try{cr(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},cc:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{kr(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},ib:function(e,t,n,i,r,a,o,s,u){var l=bt();try{Vt(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},F:function(e,t,n,i){var r=bt();try{en(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},R:function(e,t,n,i,r){var a=bt();try{Ht(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},Ua:function(e,t,n,i,r,a,o){var s=bt();try{xn(e,t,n,i,r,a,o)}catch(e){if(xt(s),e!==e+0)throw e;_t(1,0)}},kd:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{zr(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},ba:function(e,t,n,i,r){var a=bt();try{ii(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},nb:function(e,t,n,i,r,a){var o=bt();try{Hi(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},pa:function(e,t,n,i,r,a,o,s){var u=bt();try{Si(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},bc:function(e,t,n,i,r,a,o,s,u,l,d,c,p){var f=bt();try{Tr(e,t,n,i,r,a,o,s,u,l,d,c,p)}catch(e){if(xt(f),e!==e+0)throw e;_t(1,0)}},zc:function(e,t,n,i,r,a,o,s,u,l,d,c){var p=bt();try{un(e,t,n,i,r,a,o,s,u,l,d,c)}catch(e){if(xt(p),e!==e+0)throw e;_t(1,0)}},v:function(e,t,n){var i=bt();try{sn(e,t,n)}catch(e){if(xt(i),e!==e+0)throw e;_t(1,0)}},L:function(e,t,n,i){var r=bt();try{Rn(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},sd:function(e,t,n,i,r,a){var o=bt();try{Oi(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},Nb:function(e,t,n,i,r,a,o,s,u,l,d){var c=bt();try{fi(e,t,n,i,r,a,o,s,u,l,d)}catch(e){if(xt(c),e!==e+0)throw e;_t(1,0)}},mc:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f){var h=bt();try{Ki(e,t,n,i,r,a,o,s,u,l,d,c,p,f)}catch(e){if(xt(h),e!==e+0)throw e;_t(1,0)}},yd:function(e,t,n,i){var r=bt();try{$n(e,t,n,i)}catch(e){if(xt(r),e!==e+0)throw e;_t(1,0)}},Ob:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{pi(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},Lb:function(e,t,n,i,r,a){var o=bt();try{vi(e,t,n,i,r,a)}catch(e){if(xt(o),e!==e+0)throw e;_t(1,0)}},ab:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{Qn(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},yc:function(e,t,n,i,r,a,o,s,u){var l=bt();try{gn(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},Qb:function(e,t,n,i,r,a,o,s,u){var l=bt();try{Bn(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},Na:function(e,t,n,i,r,a,o,s,u){var l=bt();try{ki(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},$:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h){var m=bt();try{hi(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h)}catch(e){if(xt(m),e!==e+0)throw e;_t(1,0)}},tc:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m){var g=bt();try{jn(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m)}catch(e){if(xt(g),e!==e+0)throw e;_t(1,0)}},J:function(e,t){var n=bt();try{Nn(e,t)}catch(e){if(xt(n),e!==e+0)throw e;_t(1,0)}},gd:function(e,t,n,i,r){var a=bt();try{Sr(e,t,n,i,r)}catch(e){if(xt(a),e!==e+0)throw e;_t(1,0)}},ub:function(e,t,n,i,r,a,o,s){var u=bt();try{An(e,t,n,i,r,a,o,s)}catch(e){if(xt(u),e!==e+0)throw e;_t(1,0)}},ua:function(e,t,n,i,r,a,o,s,u){var l=bt();try{gi(e,t,n,i,r,a,o,s,u)}catch(e){if(xt(l),e!==e+0)throw e;_t(1,0)}},H:function(e,t,n,i,r,a,o,s,u,l){var d=bt();try{mi(e,t,n,i,r,a,o,s,u,l)}catch(e){if(xt(d),e!==e+0)throw e;_t(1,0)}},rb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g){var y=bt();try{di(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g)}catch(e){if(xt(y),e!==e+0)throw e;_t(1,0)}},Oa:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v){var w=bt();try{li(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v)}catch(e){if(xt(w),e!==e+0)throw e;_t(1,0)}},Ra:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y){var v=bt();try{ri(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y)}catch(e){if(xt(v),e!==e+0)throw e;_t(1,0)}},qb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w){var _=bt();try{ci(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w)}catch(e){if(xt(_),e!==e+0)throw e;_t(1,0)}},sb:function(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_){var $=bt();try{ui(e,t,n,i,r,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_)}catch(e){if(xt($),e!==e+0)throw e;_t(1,0)}},w:function(e){return e>>>0},Fc:dt,ga:function(e,t,n,i){return dt(e>>>0,t>>>0,n>>>0,i>>>0)}},ht=function(){function e(e){return ht=e.exports,ht=function(){var e=ht,t={};for(let[n,i]of Object.entries(e))t[n]="function"==typeof i?function(){Ne.push(n);try{return i.apply(null,arguments)}finally{O||(Ne.pop(),Pe&&1===Be&&0===Ne.length&&(Be=0,Me(Dr),typeof Fibers<"u"&&Fibers.wi()))}}:i;return t}(),ht=function(){var e=ht;e=Object.assign({},e);var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return e.de=t(e.de),e.ee=n(e.ee),e.ge=n(e.ge),e.ke=t(e.ke),e.me=n(e.me),e}(),w=ht.Ad,z(),j.unshift(ht.Bd),0==--B&&(null!==P&&(clearInterval(P),P=null),D&&(e=D,D=null,e())),ht}var t={a:ft};if(B++,r.instantiateWasm)try{return r.instantiateWasm(t,e)}catch(e){v(`Module.instantiateWasm callback failed with error: ${e}`),i(e)}return function(e,t){var n=U;return"function"!=typeof WebAssembly.instantiateStreaming||L(n)||H(n)||f||"function"!=typeof fetch?F(n,e,t):fetch(n,{credentials:"same-origin"}).then((i=>WebAssembly.instantiateStreaming(i,e).then(t,(function(i){return v(`wasm streaming compile failed: ${i}`),v("falling back to ArrayBuffer instantiation"),F(n,e,t)}))))}(t,(function(t){e(t.instance)})).catch(i),{}}();r._OrtInit=(e,t)=>(r._OrtInit=ht.Cd)(e,t),r._OrtGetLastError=(e,t)=>(r._OrtGetLastError=ht.Dd)(e,t),r._OrtCreateSessionOptions=(e,t,n,i,a,o,s,u,l,d)=>(r._OrtCreateSessionOptions=ht.Ed)(e,t,n,i,a,o,s,u,l,d),r._OrtAppendExecutionProvider=(e,t)=>(r._OrtAppendExecutionProvider=ht.Fd)(e,t),r._OrtAddFreeDimensionOverride=(e,t,n)=>(r._OrtAddFreeDimensionOverride=ht.Gd)(e,t,n),r._OrtAddSessionConfigEntry=(e,t,n)=>(r._OrtAddSessionConfigEntry=ht.Hd)(e,t,n),r._OrtReleaseSessionOptions=e=>(r._OrtReleaseSessionOptions=ht.Id)(e),r._OrtCreateSession=(e,t,n)=>(r._OrtCreateSession=ht.Jd)(e,t,n),r._OrtReleaseSession=e=>(r._OrtReleaseSession=ht.Kd)(e),r._OrtGetInputOutputCount=(e,t,n)=>(r._OrtGetInputOutputCount=ht.Ld)(e,t,n),r._OrtGetInputName=(e,t)=>(r._OrtGetInputName=ht.Md)(e,t),r._OrtGetOutputName=(e,t)=>(r._OrtGetOutputName=ht.Nd)(e,t),r._OrtFree=e=>(r._OrtFree=ht.Od)(e),r._OrtCreateTensor=(e,t,n,i,a,o)=>(r._OrtCreateTensor=ht.Pd)(e,t,n,i,a,o),r._OrtGetTensorData=(e,t,n,i,a)=>(r._OrtGetTensorData=ht.Qd)(e,t,n,i,a),r._OrtReleaseTensor=e=>(r._OrtReleaseTensor=ht.Rd)(e),r._OrtCreateRunOptions=(e,t,n,i)=>(r._OrtCreateRunOptions=ht.Sd)(e,t,n,i),r._OrtAddRunConfigEntry=(e,t,n)=>(r._OrtAddRunConfigEntry=ht.Td)(e,t,n),r._OrtReleaseRunOptions=e=>(r._OrtReleaseRunOptions=ht.Ud)(e),r._OrtCreateBinding=e=>(r._OrtCreateBinding=ht.Vd)(e),r._OrtBindInput=(e,t,n)=>(r._OrtBindInput=ht.Wd)(e,t,n),r._OrtBindOutput=(e,t,n,i)=>(r._OrtBindOutput=ht.Xd)(e,t,n,i),r._OrtClearBoundOutputs=e=>(r._OrtClearBoundOutputs=ht.Yd)(e),r._OrtReleaseBinding=e=>(r._OrtReleaseBinding=ht.Zd)(e),r._OrtRunWithBinding=(e,t,n,i,a)=>(r._OrtRunWithBinding=ht._d)(e,t,n,i,a),r._OrtRun=(e,t,n,i,a,o,s,u)=>(r._OrtRun=ht.$d)(e,t,n,i,a,o,s,u),r._OrtEndProfiling=e=>(r._OrtEndProfiling=ht.ae)(e),r._JsepOutput=(e,t,n)=>(r._JsepOutput=ht.be)(e,t,n),r._JsepGetNodeName=e=>(r._JsepGetNodeName=ht.ce)(e);var mt,gt=()=>(gt=ht.de)(),yt=r._malloc=e=>(yt=r._malloc=ht.ee)(e),vt=r._free=e=>(vt=r._free=ht.fe)(e),wt=e=>(wt=ht.ge)(e),_t=(e,t)=>(_t=ht.ie)(e,t),$t=e=>($t=ht.je)(e),bt=()=>(bt=ht.ke)(),xt=e=>(xt=ht.le)(e),Ct=e=>(Ct=ht.me)(e),St=e=>(St=ht.ne)(e),Et=e=>(Et=ht.oe)(e),It=(e,t,n)=>(It=ht.pe)(e,t,n),kt=e=>(kt=ht.qe)(e),Tt=r.dynCall_vii=(e,t,n)=>(Tt=r.dynCall_vii=ht.re)(e,t,n),At=r.dynCall_iiii=(e,t,n,i)=>(At=r.dynCall_iiii=ht.se)(e,t,n,i),Ot=r.dynCall_iii=(e,t,n)=>(Ot=r.dynCall_iii=ht.te)(e,t,n),zt=r.dynCall_ii=(e,t)=>(zt=r.dynCall_ii=ht.ue)(e,t),Rt=r.dynCall_iiiiiii=(e,t,n,i,a,o,s)=>(Rt=r.dynCall_iiiiiii=ht.ve)(e,t,n,i,a,o,s),jt=r.dynCall_vi=(e,t)=>(jt=r.dynCall_vi=ht.we)(e,t),Mt=r.dynCall_v=e=>(Mt=r.dynCall_v=ht.xe)(e),Bt=r.dynCall_iiiiii=(e,t,n,i,a,o)=>(Bt=r.dynCall_iiiiii=ht.ye)(e,t,n,i,a,o),Pt=r.dynCall_iiij=(e,t,n,i)=>(Pt=r.dynCall_iiij=ht.ze)(e,t,n,i),Dt=r.dynCall_iiiii=(e,t,n,i,a)=>(Dt=r.dynCall_iiiii=ht.Ae)(e,t,n,i,a),Nt=r.dynCall_viii=(e,t,n,i)=>(Nt=r.dynCall_viii=ht.Be)(e,t,n,i),Ut=r.dynCall_viiiii=(e,t,n,i,a,o)=>(Ut=r.dynCall_viiiii=ht.Ce)(e,t,n,i,a,o),Wt=r.dynCall_viiii=(e,t,n,i,a)=>(Wt=r.dynCall_viiii=ht.De)(e,t,n,i,a),Lt=r.dynCall_viiiiii=(e,t,n,i,a,o,s)=>(Lt=r.dynCall_viiiiii=ht.Ee)(e,t,n,i,a,o,s),Ht=r.dynCall_viiji=(e,t,n,i,a)=>(Ht=r.dynCall_viiji=ht.Fe)(e,t,n,i,a),Gt=r.dynCall_viiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p)=>(Gt=r.dynCall_viiiiiiiiiii=ht.Ge)(e,t,n,i,a,o,s,u,l,d,c,p),Vt=r.dynCall_viiijjjii=(e,t,n,i,a,o,s,u,l)=>(Vt=r.dynCall_viiijjjii=ht.He)(e,t,n,i,a,o,s,u,l),Ft=r.dynCall_iij=(e,t,n)=>(Ft=r.dynCall_iij=ht.Ie)(e,t,n),qt=r.dynCall_iif=(e,t,n)=>(qt=r.dynCall_iif=ht.Je)(e,t,n),Kt=r.dynCall_iid=(e,t,n)=>(Kt=r.dynCall_iid=ht.Ke)(e,t,n),Yt=r.dynCall_jii=(e,t,n)=>(Yt=r.dynCall_jii=ht.Le)(e,t,n),Zt=r.dynCall_i=e=>(Zt=r.dynCall_i=ht.Me)(e),Qt=r.dynCall_viiiiiiii=(e,t,n,i,a,o,s,u,l)=>(Qt=r.dynCall_viiiiiiii=ht.Ne)(e,t,n,i,a,o,s,u,l),Jt=r.dynCall_viiiiij=(e,t,n,i,a,o,s)=>(Jt=r.dynCall_viiiiij=ht.Oe)(e,t,n,i,a,o,s),Xt=r.dynCall_ji=(e,t)=>(Xt=r.dynCall_ji=ht.Pe)(e,t),en=r.dynCall_viij=(e,t,n,i)=>(en=r.dynCall_viij=ht.Qe)(e,t,n,i),tn=r.dynCall_iiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p)=>(tn=r.dynCall_iiiiiiiiiiii=ht.Re)(e,t,n,i,a,o,s,u,l,d,c,p),nn=r.dynCall_viiiiiiiii=(e,t,n,i,a,o,s,u,l,d)=>(nn=r.dynCall_viiiiiiiii=ht.Se)(e,t,n,i,a,o,s,u,l,d),rn=r.dynCall_ij=(e,t)=>(rn=r.dynCall_ij=ht.Te)(e,t),an=r.dynCall_iiiiij=(e,t,n,i,a,o)=>(an=r.dynCall_iiiiij=ht.Ue)(e,t,n,i,a,o),on=r.dynCall_j=e=>(on=r.dynCall_j=ht.Ve)(e),sn=r.dynCall_vij=(e,t,n)=>(sn=r.dynCall_vij=ht.We)(e,t,n),un=r.dynCall_viijjjiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p)=>(un=r.dynCall_viijjjiiiiii=ht.Xe)(e,t,n,i,a,o,s,u,l,d,c,p),ln=r.dynCall_viiijiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p)=>(ln=r.dynCall_viiijiiiiiii=ht.Ye)(e,t,n,i,a,o,s,u,l,d,c,p),dn=r.dynCall_iiiiiiii=(e,t,n,i,a,o,s,u)=>(dn=r.dynCall_iiiiiiii=ht.Ze)(e,t,n,i,a,o,s,u),cn=r.dynCall_viiiiiii=(e,t,n,i,a,o,s,u)=>(cn=r.dynCall_viiiiiii=ht._e)(e,t,n,i,a,o,s,u),pn=r.dynCall_iiiiiiiij=(e,t,n,i,a,o,s,u,l)=>(pn=r.dynCall_iiiiiiiij=ht.$e)(e,t,n,i,a,o,s,u,l),fn=r.dynCall_viiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h)=>(fn=r.dynCall_viiiiiiiiiiiii=ht.af)(e,t,n,i,a,o,s,u,l,d,c,p,f,h),hn=r.dynCall_iiiiiiiii=(e,t,n,i,a,o,s,u,l)=>(hn=r.dynCall_iiiiiiiii=ht.bf)(e,t,n,i,a,o,s,u,l),mn=r.dynCall_iiiiijiiiii=(e,t,n,i,a,o,s,u,l,d,c)=>(mn=r.dynCall_iiiiijiiiii=ht.cf)(e,t,n,i,a,o,s,u,l,d,c),gn=r.dynCall_vijjjiiij=(e,t,n,i,a,o,s,u,l)=>(gn=r.dynCall_vijjjiiij=ht.df)(e,t,n,i,a,o,s,u,l),yn=r.dynCall_fi=(e,t)=>(yn=r.dynCall_fi=ht.ef)(e,t),vn=r.dynCall_fii=(e,t,n)=>(vn=r.dynCall_fii=ht.ff)(e,t,n),wn=r.dynCall_di=(e,t)=>(wn=r.dynCall_di=ht.gf)(e,t),_n=r.dynCall_dii=(e,t,n)=>(_n=r.dynCall_dii=ht.hf)(e,t,n),$n=r.dynCall_vijj=(e,t,n,i)=>($n=r.dynCall_vijj=ht.jf)(e,t,n,i),bn=r.dynCall_iiiiiiiiii=(e,t,n,i,a,o,s,u,l,d)=>(bn=r.dynCall_iiiiiiiiii=ht.kf)(e,t,n,i,a,o,s,u,l,d),xn=r.dynCall_viijiii=(e,t,n,i,a,o,s)=>(xn=r.dynCall_viijiii=ht.lf)(e,t,n,i,a,o,s),Cn=r.dynCall_viid=(e,t,n,i)=>(Cn=r.dynCall_viid=ht.mf)(e,t,n,i),Sn=r.dynCall_viffiii=(e,t,n,i,a,o,s)=>(Sn=r.dynCall_viffiii=ht.nf)(e,t,n,i,a,o,s),En=r.dynCall_viifiii=(e,t,n,i,a,o,s)=>(En=r.dynCall_viifiii=ht.of)(e,t,n,i,a,o,s),In=r.dynCall_viiiiidiidi=(e,t,n,i,a,o,s,u,l,d,c)=>(In=r.dynCall_viiiiidiidi=ht.pf)(e,t,n,i,a,o,s,u,l,d,c),kn=r.dynCall_viiiiiiiiidi=(e,t,n,i,a,o,s,u,l,d,c,p)=>(kn=r.dynCall_viiiiiiiiidi=ht.qf)(e,t,n,i,a,o,s,u,l,d,c,p),Tn=r.dynCall_jiii=(e,t,n,i)=>(Tn=r.dynCall_jiii=ht.rf)(e,t,n,i),An=r.dynCall_vjiiiiii=(e,t,n,i,a,o,s,u)=>(An=r.dynCall_vjiiiiii=ht.sf)(e,t,n,i,a,o,s,u),On=r.dynCall_viiid=(e,t,n,i,a)=>(On=r.dynCall_viiid=ht.tf)(e,t,n,i,a),zn=r.dynCall_viiiiiiiiiji=(e,t,n,i,a,o,s,u,l,d,c,p)=>(zn=r.dynCall_viiiiiiiiiji=ht.uf)(e,t,n,i,a,o,s,u,l,d,c,p),Rn=r.dynCall_viji=(e,t,n,i)=>(Rn=r.dynCall_viji=ht.vf)(e,t,n,i),jn=r.dynCall_vijjjjjjjjjjjjji=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>(jn=r.dynCall_vijjjjjjjjjjjjji=ht.wf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g),Mn=r.dynCall_viiiji=(e,t,n,i,a,o)=>(Mn=r.dynCall_viiiji=ht.xf)(e,t,n,i,a,o),Bn=r.dynCall_vijjjiiji=(e,t,n,i,a,o,s,u,l)=>(Bn=r.dynCall_vijjjiiji=ht.yf)(e,t,n,i,a,o,s,u,l),Pn=r.dynCall_iiiji=(e,t,n,i,a)=>(Pn=r.dynCall_iiiji=ht.zf)(e,t,n,i,a),Dn=r.dynCall_iiijiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h)=>(Dn=r.dynCall_iiijiiiiiiiiii=ht.Af)(e,t,n,i,a,o,s,u,l,d,c,p,f,h),Nn=r.dynCall_vj=(e,t)=>(Nn=r.dynCall_vj=ht.Bf)(e,t),Un=r.dynCall_jjj=(e,t,n)=>(Un=r.dynCall_jjj=ht.Cf)(e,t,n),Wn=r.dynCall_iiijiiiiii=(e,t,n,i,a,o,s,u,l,d)=>(Wn=r.dynCall_iiijiiiiii=ht.Df)(e,t,n,i,a,o,s,u,l,d),Ln=r.dynCall_vfiii=(e,t,n,i,a)=>(Ln=r.dynCall_vfiii=ht.Ef)(e,t,n,i,a),Hn=r.dynCall_viiiiff=(e,t,n,i,a,o,s)=>(Hn=r.dynCall_viiiiff=ht.Ff)(e,t,n,i,a,o,s),Gn=r.dynCall_viiiiiff=(e,t,n,i,a,o,s,u)=>(Gn=r.dynCall_viiiiiff=ht.Gf)(e,t,n,i,a,o,s,u),Vn=r.dynCall_viiff=(e,t,n,i,a)=>(Vn=r.dynCall_viiff=ht.Hf)(e,t,n,i,a),Fn=r.dynCall_viiiiiiiiifiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h)=>(Fn=r.dynCall_viiiiiiiiifiii=ht.If)(e,t,n,i,a,o,s,u,l,d,c,p,f,h),qn=r.dynCall_viiiiiiiijj=(e,t,n,i,a,o,s,u,l,d,c)=>(qn=r.dynCall_viiiiiiiijj=ht.Jf)(e,t,n,i,a,o,s,u,l,d,c),Kn=r.dynCall_iiiiiiiiiiiiiifii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y)=>(Kn=r.dynCall_iiiiiiiiiiiiiifii=ht.Kf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y),Yn=r.dynCall_viiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(Yn=r.dynCall_viiiiiiiiiiii=ht.Lf)(e,t,n,i,a,o,s,u,l,d,c,p,f),Zn=r.dynCall_iiiiiiiiiiiiiiiiifii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_)=>(Zn=r.dynCall_iiiiiiiiiiiiiiiiifii=ht.Mf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_),Qn=r.dynCall_vijjiiiiii=(e,t,n,i,a,o,s,u,l,d)=>(Qn=r.dynCall_vijjiiiiii=ht.Nf)(e,t,n,i,a,o,s,u,l,d),Jn=r.dynCall_iiiijjj=(e,t,n,i,a,o,s)=>(Jn=r.dynCall_iiiijjj=ht.Of)(e,t,n,i,a,o,s),Xn=r.dynCall_viiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c)=>(Xn=r.dynCall_viiiiiiiiii=ht.Pf)(e,t,n,i,a,o,s,u,l,d,c),ei=r.dynCall_iiijjj=(e,t,n,i,a,o)=>(ei=r.dynCall_iiijjj=ht.Qf)(e,t,n,i,a,o),ti=r.dynCall_fffffff=(e,t,n,i,a,o,s)=>(ti=r.dynCall_fffffff=ht.Rf)(e,t,n,i,a,o,s),ni=r.dynCall_viiiij=(e,t,n,i,a,o)=>(ni=r.dynCall_viiiij=ht.Sf)(e,t,n,i,a,o),ii=r.dynCall_viijj=(e,t,n,i,a)=>(ii=r.dynCall_viijj=ht.Tf)(e,t,n,i,a),ri=r.dynCall_vjjjjjjffiifiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v)=>(ri=r.dynCall_vjjjjjjffiifiiiiii=ht.Uf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v),ai=r.dynCall_viiiiiiffiifiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y)=>(ai=r.dynCall_viiiiiiffiifiiiii=ht.Vf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y),oi=r.dynCall_viiiiiiffifiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>(oi=r.dynCall_viiiiiiffifiiiii=ht.Wf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g),si=r.dynCall_viiiiiiffiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m)=>(si=r.dynCall_viiiiiiffiiiiii=ht.Xf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m),ui=r.dynCall_vjjjjjjjjfffiifiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$)=>(ui=r.dynCall_vjjjjjjjjfffiifiiiiii=ht.Yf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$),li=r.dynCall_vjjjjjjfffifiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w)=>(li=r.dynCall_vjjjjjjfffifiiiiiii=ht.Zf)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w),di=r.dynCall_vjjjjjjfffifiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y)=>(di=r.dynCall_vjjjjjjfffifiiiii=ht._f)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y),ci=r.dynCall_vjjjjjjjjfffiifiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_)=>(ci=r.dynCall_vjjjjjjjjfffiifiiiii=ht.$f)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_),pi=r.dynCall_vijjfffiii=(e,t,n,i,a,o,s,u,l,d)=>(pi=r.dynCall_vijjfffiii=ht.ag)(e,t,n,i,a,o,s,u,l,d),fi=r.dynCall_vijiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c)=>(fi=r.dynCall_vijiiiiiiii=ht.bg)(e,t,n,i,a,o,s,u,l,d,c),hi=r.dynCall_vijjjjjjifiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m)=>(hi=r.dynCall_vijjjjjjifiiiii=ht.cg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m),mi=r.dynCall_vjjjjjiiii=(e,t,n,i,a,o,s,u,l,d)=>(mi=r.dynCall_vjjjjjiiii=ht.dg)(e,t,n,i,a,o,s,u,l,d),gi=r.dynCall_vjjjjfiii=(e,t,n,i,a,o,s,u,l)=>(gi=r.dynCall_vjjjjfiii=ht.eg)(e,t,n,i,a,o,s,u,l),yi=r.dynCall_viifi=(e,t,n,i,a)=>(yi=r.dynCall_viifi=ht.fg)(e,t,n,i,a),vi=r.dynCall_vijjii=(e,t,n,i,a,o)=>(vi=r.dynCall_vijjii=ht.gg)(e,t,n,i,a,o),wi=r.dynCall_viiiiijjiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(wi=r.dynCall_viiiiijjiiiii=ht.hg)(e,t,n,i,a,o,s,u,l,d,c,p,f),_i=r.dynCall_iiiiiji=(e,t,n,i,a,o,s)=>(_i=r.dynCall_iiiiiji=ht.ig)(e,t,n,i,a,o,s),$i=r.dynCall_iiiiji=(e,t,n,i,a,o)=>($i=r.dynCall_iiiiji=ht.jg)(e,t,n,i,a,o),bi=r.dynCall_viiiiijiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(bi=r.dynCall_viiiiijiiiiii=ht.kg)(e,t,n,i,a,o,s,u,l,d,c,p,f),xi=r.dynCall_viiijiiiiii=(e,t,n,i,a,o,s,u,l,d,c)=>(xi=r.dynCall_viiijiiiiii=ht.lg)(e,t,n,i,a,o,s,u,l,d,c),Ci=r.dynCall_viiiijii=(e,t,n,i,a,o,s,u)=>(Ci=r.dynCall_viiiijii=ht.mg)(e,t,n,i,a,o,s,u),Si=r.dynCall_viijjiii=(e,t,n,i,a,o,s,u)=>(Si=r.dynCall_viijjiii=ht.ng)(e,t,n,i,a,o,s,u),Ei=r.dynCall_ijii=(e,t,n,i)=>(Ei=r.dynCall_ijii=ht.og)(e,t,n,i),Ii=r.dynCall_viiiiijjji=(e,t,n,i,a,o,s,u,l,d)=>(Ii=r.dynCall_viiiiijjji=ht.pg)(e,t,n,i,a,o,s,u,l,d),ki=r.dynCall_vijjjjiij=(e,t,n,i,a,o,s,u,l)=>(ki=r.dynCall_vijjjjiij=ht.qg)(e,t,n,i,a,o,s,u,l),Ti=r.dynCall_viiiiijij=(e,t,n,i,a,o,s,u,l)=>(Ti=r.dynCall_viiiiijij=ht.rg)(e,t,n,i,a,o,s,u,l),Ai=r.dynCall_viiiiiijij=(e,t,n,i,a,o,s,u,l,d)=>(Ai=r.dynCall_viiiiiijij=ht.sg)(e,t,n,i,a,o,s,u,l,d),Oi=r.dynCall_vijiii=(e,t,n,i,a,o)=>(Oi=r.dynCall_vijiii=ht.tg)(e,t,n,i,a,o),zi=r.dynCall_viiifii=(e,t,n,i,a,o,s)=>(zi=r.dynCall_viiifii=ht.ug)(e,t,n,i,a,o,s),Ri=r.dynCall_viiiiiiiiifi=(e,t,n,i,a,o,s,u,l,d,c,p)=>(Ri=r.dynCall_viiiiiiiiifi=ht.vg)(e,t,n,i,a,o,s,u,l,d,c,p),ji=r.dynCall_iiijiiii=(e,t,n,i,a,o,s,u)=>(ji=r.dynCall_iiijiiii=ht.wg)(e,t,n,i,a,o,s,u),Mi=r.dynCall_viiiiiijjiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h)=>(Mi=r.dynCall_viiiiiijjiiiii=ht.xg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h),Bi=r.dynCall_viiiiiiijiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m)=>(Bi=r.dynCall_viiiiiiijiiiiii=ht.yg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m),Pi=r.dynCall_vif=(e,t,n)=>(Pi=r.dynCall_vif=ht.zg)(e,t,n),Di=r.dynCall_viif=(e,t,n,i)=>(Di=r.dynCall_viif=ht.Ag)(e,t,n,i),Ni=r.dynCall_fiii=(e,t,n,i)=>(Ni=r.dynCall_fiii=ht.Bg)(e,t,n,i),Ui=r.dynCall_diii=(e,t,n,i)=>(Ui=r.dynCall_diii=ht.Cg)(e,t,n,i),Wi=r.dynCall_viiiiiifii=(e,t,n,i,a,o,s,u,l,d)=>(Wi=r.dynCall_viiiiiifii=ht.Dg)(e,t,n,i,a,o,s,u,l,d),Li=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$,b,x,C,S,E)=>(Li=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=ht.Eg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$,b,x,C,S,E),Hi=r.dynCall_viijji=(e,t,n,i,a,o)=>(Hi=r.dynCall_viijji=ht.Fg)(e,t,n,i,a,o),Gi=r.dynCall_iiiiiiiiiiiji=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(Gi=r.dynCall_iiiiiiiiiiiji=ht.Gg)(e,t,n,i,a,o,s,u,l,d,c,p,f),Vi=r.dynCall_viifiifijjjii=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(Vi=r.dynCall_viifiifijjjii=ht.Hg)(e,t,n,i,a,o,s,u,l,d,c,p,f),Fi=r.dynCall_viiiiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$)=>(Fi=r.dynCall_viiiiiiiiiiiiiiiiiiii=ht.Ig)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_,$),qi=r.dynCall_viiiiifiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(qi=r.dynCall_viiiiifiiiiii=ht.Jg)(e,t,n,i,a,o,s,u,l,d,c,p,f),Ki=r.dynCall_vijiiiiiiijjii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h)=>(Ki=r.dynCall_vijiiiiiiijjii=ht.Kg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h),Yi=r.dynCall_viiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w)=>(Yi=r.dynCall_viiiiiiiiiiiiiiiiii=ht.Lg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w),Zi=r.dynCall_viiiiiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_)=>(Zi=r.dynCall_viiiiiiiiiiiiiiiiiii=ht.Mg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_),Qi=r.dynCall_viiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g)=>(Qi=r.dynCall_viiiiiiiiiiiiiii=ht.Ng)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g),Ji=r.dynCall_viiiiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y)=>(Ji=r.dynCall_viiiiiiiiiiiiiiii=ht.Og)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y),Xi=r.dynCall_viiiijjj=(e,t,n,i,a,o,s,u)=>(Xi=r.dynCall_viiiijjj=ht.Pg)(e,t,n,i,a,o,s,u),er=r.dynCall_iiiiid=(e,t,n,i,a,o)=>(er=r.dynCall_iiiiid=ht.Qg)(e,t,n,i,a,o),tr=r.dynCall_viiiiiiijjj=(e,t,n,i,a,o,s,u,l,d,c)=>(tr=r.dynCall_viiiiiiijjj=ht.Rg)(e,t,n,i,a,o,s,u,l,d,c),nr=r.dynCall_iiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c)=>(nr=r.dynCall_iiiiiiiiiii=ht.Sg)(e,t,n,i,a,o,s,u,l,d,c),ir=r.dynCall_iiiiiiiiiiiiiiiiiifi=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_)=>(ir=r.dynCall_iiiiiiiiiiiiiiiiiifi=ht.Tg)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m,g,y,v,w,_),rr=r.dynCall_viiif=(e,t,n,i,a)=>(rr=r.dynCall_viiif=ht.Ug)(e,t,n,i,a),ar=r.dynCall_viiijiiiii=(e,t,n,i,a,o,s,u,l,d)=>(ar=r.dynCall_viiijiiiii=ht.Vg)(e,t,n,i,a,o,s,u,l,d),or=r.dynCall_viiij=(e,t,n,i,a)=>(or=r.dynCall_viiij=ht.Wg)(e,t,n,i,a),sr=r.dynCall_iijjj=(e,t,n,i,a)=>(sr=r.dynCall_iijjj=ht.Xg)(e,t,n,i,a),ur=r.dynCall_viiiiji=(e,t,n,i,a,o,s)=>(ur=r.dynCall_viiiiji=ht.Yg)(e,t,n,i,a,o,s),lr=r.dynCall_iijjji=(e,t,n,i,a,o)=>(lr=r.dynCall_iijjji=ht.Zg)(e,t,n,i,a,o),dr=r.dynCall_ijijji=(e,t,n,i,a,o)=>(dr=r.dynCall_ijijji=ht._g)(e,t,n,i,a,o),cr=r.dynCall_viiijjiii=(e,t,n,i,a,o,s,u,l)=>(cr=r.dynCall_viiijjiii=ht.$g)(e,t,n,i,a,o,s,u,l),pr=r.dynCall_iiiiijji=(e,t,n,i,a,o,s,u)=>(pr=r.dynCall_iiiiijji=ht.ah)(e,t,n,i,a,o,s,u),fr=r.dynCall_iiiifi=(e,t,n,i,a,o)=>(fr=r.dynCall_iiiifi=ht.bh)(e,t,n,i,a,o),hr=r.dynCall_iiijii=(e,t,n,i,a,o)=>(hr=r.dynCall_iiijii=ht.ch)(e,t,n,i,a,o),mr=r.dynCall_iiiiiiiiijii=(e,t,n,i,a,o,s,u,l,d,c,p)=>(mr=r.dynCall_iiiiiiiiijii=ht.dh)(e,t,n,i,a,o,s,u,l,d,c,p),gr=r.dynCall_iiiijjii=(e,t,n,i,a,o,s,u)=>(gr=r.dynCall_iiiijjii=ht.eh)(e,t,n,i,a,o,s,u),yr=r.dynCall_iiiiiijjjii=(e,t,n,i,a,o,s,u,l,d,c)=>(yr=r.dynCall_iiiiiijjjii=ht.fh)(e,t,n,i,a,o,s,u,l,d,c),vr=r.dynCall_iiijiii=(e,t,n,i,a,o,s)=>(vr=r.dynCall_iiijiii=ht.gh)(e,t,n,i,a,o,s),wr=r.dynCall_iiiiiiiijjjfi=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(wr=r.dynCall_iiiiiiiijjjfi=ht.hh)(e,t,n,i,a,o,s,u,l,d,c,p,f),_r=r.dynCall_iijiiii=(e,t,n,i,a,o,s)=>(_r=r.dynCall_iijiiii=ht.ih)(e,t,n,i,a,o,s),$r=r.dynCall_iijjjii=(e,t,n,i,a,o,s)=>($r=r.dynCall_iijjjii=ht.jh)(e,t,n,i,a,o,s),br=r.dynCall_iiji=(e,t,n,i)=>(br=r.dynCall_iiji=ht.kh)(e,t,n,i),xr=r.dynCall_iiif=(e,t,n,i)=>(xr=r.dynCall_iiif=ht.lh)(e,t,n,i),Cr=r.dynCall_vidi=(e,t,n,i)=>(Cr=r.dynCall_vidi=ht.mh)(e,t,n,i),Sr=r.dynCall_vjiii=(e,t,n,i,a)=>(Sr=r.dynCall_vjiii=ht.nh)(e,t,n,i,a),Er=r.dynCall_diiii=(e,t,n,i,a)=>(Er=r.dynCall_diiii=ht.oh)(e,t,n,i,a),Ir=r.dynCall_diiiii=(e,t,n,i,a,o)=>(Ir=r.dynCall_diiiii=ht.ph)(e,t,n,i,a,o),kr=r.dynCall_viiijjiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p)=>(kr=r.dynCall_viiijjiiiiii=ht.qh)(e,t,n,i,a,o,s,u,l,d,c,p),Tr=r.dynCall_viijjijjjjiii=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(Tr=r.dynCall_viijjijjjjiii=ht.rh)(e,t,n,i,a,o,s,u,l,d,c,p,f),Ar=r.dynCall_iiiij=(e,t,n,i,a)=>(Ar=r.dynCall_iiiij=ht.sh)(e,t,n,i,a),Or=r.dynCall_viiijii=(e,t,n,i,a,o,s)=>(Or=r.dynCall_viiijii=ht.th)(e,t,n,i,a,o,s),zr=r.dynCall_viijiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f)=>(zr=r.dynCall_viijiiiiiiiii=ht.uh)(e,t,n,i,a,o,s,u,l,d,c,p,f),Rr=r.dynCall_fiiii=(e,t,n,i,a)=>(Rr=r.dynCall_fiiii=ht.vh)(e,t,n,i,a),jr=r.dynCall_jfi=(e,t,n)=>(jr=r.dynCall_jfi=ht.wh)(e,t,n),Mr=r.dynCall_viiiiiiiiiiiiii=(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m)=>(Mr=r.dynCall_viiiiiiiiiiiiii=ht.xh)(e,t,n,i,a,o,s,u,l,d,c,p,f,h,m),Br=r.dynCall_jiij=(e,t,n,i)=>(Br=r.dynCall_jiij=ht.yh)(e,t,n,i),Pr=e=>(Pr=ht.zh)(e),Dr=()=>(Dr=ht.Ah)(),Nr=e=>(Nr=ht.Bh)(e),Ur=()=>(Ur=ht.Ch)();function Wr(){if(!(0<B)){if(r.preRun)for("function"==typeof r.preRun&&(r.preRun=[r.preRun]);r.preRun.length;){var e=r.preRun.shift();R.unshift(e)}for(;0<R.length;)R.shift()(r);if(!(0<B||mt||(mt=!0,r.calledRun=!0,O))){for(;0<j.length;)j.shift()(r);for(t(r);0<M.length;)M.shift()(r)}}}return r.___start_em_js=1392963,r.___stop_em_js=1393124,r.stackAlloc=Ct,r.stackSave=bt,r.stackRestore=xt,r.UTF8ToString=re,r.stringToUTF8=(e,t,n)=>oe(e,b,t,n),r.lengthBytesUTF8=ae,D=function e(){mt||Wr(),mt||(D=e)},Wr(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=i:"function"==typeof define&&define.amd&&define([],(()=>i))})),ge=N((()=>{})),ye=N((()=>{})),ve={};U(ve,{cpus:()=>we});var we,_e,$e,be,xe,Ce,Se,Ee,Ie,ke,Te,Ae,Oe,ze,Re,je,Me,Be,Pe,De,Ne,Ue,We,Le,He,Ge,Ve,Fe,qe,Ke,Ye,Ze,Qe,Je,Xe,et,tt,nt,it,rt,at,ot,st,ut,lt,dt,ct,pt,ft,ht,mt,gt,yt,vt,wt,_t,$t,bt,xt,Ct,St,Et,It,kt,Tt,At,Ot,zt,Rt,jt,Mt,Bt,Pt,Dt,Nt,Ut,Wt,Lt,Ht,Gt,Vt,Ft,qt,Kt,Yt,Zt,Qt,Jt,Xt,en,tn,nn,rn,an,on,sn,un,ln,dn,cn,pn,fn,hn,mn,gn,yn,vn,wn,_n,$n,bn,xn,Cn,Sn,En,In,kn,Tn,An,On,zn,Rn,jn,Mn,Bn,Pn,Dn,Nn,Un,Wn,Ln,Hn,Gn,Vn,Fn,qn,Kn,Yn,Zn,Qn,Jn,Xn,ei,ti,ni,ii,ri,ai,oi,si,ui,li,di,ci,pi,fi,hi,mi,gi,yi,vi,wi,_i,$i,bi,xi,Ci,Si,Ei,Ii,ki,Ti,Ai,Oi,zi,Ri,ji,Mi,Bi,Pi,Di,Ni,Ui,Wi,Li,Hi,Gi,Vi,Fi,qi,Ki,Yi,Zi,Qi,Ji,Xi,er,tr,nr,ir,rr,ar,or,sr,ur,lr,dr,cr,pr,fr,hr,mr,gr,yr,vr,wr,_r,$r,br,xr,Cr,Sr,Er,Ir,kr,Tr,Ar,Or,zr,Rr,jr,Mr,Br,Pr,Dr,Nr,Ur,Wr,Lr,Hr,Gr,Vr,Fr,qr,Kr,Yr,Zr,Qr,Jr,Xr,ea,ta,na,ia,ra,aa,oa,sa,ua,la,da,ca,pa,fa,ha,ma,ga,ya,va,wa,_a,$a,ba,xa,Ca,Sa,Ea,Ia,ka,Ta,Aa,Oa,za,Ra,ja,Ma,Ba,Pa,Da,Na,Ua,Wa,La,Ha,Ga,Va,Fa,qa,Ka,Ya,Za,Qa,Ja,Xa,eo,to,no,io,ro,ao,oo,so,uo,lo,co,po,fo,ho,mo,go,yo,vo,wo,_o,$o,bo,xo,Co,So,Eo,Io,ko,To,Ao,Oo,zo,Ro,jo,Mo,Bo,Po,Do,No,Uo,Wo,Lo,Ho,Go,Vo,Fo,qo,Ko,Yo,Zo,Qo,Jo,Xo,es,ts,ns,is,rs,as,os,ss,us,ls,ds,cs,ps,fs,hs,ms,gs,ys,vs,ws,_s,$s,bs,xs,Cs,Ss=D((()=>{we=void 0})),Es=N(((e,t)=>{var n,i=(n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(n=n||__filename),function(e={}){function t(){return A.buffer!=j.buffer&&U(),j}function i(){return A.buffer!=j.buffer&&U(),M}function r(){return A.buffer!=j.buffer&&U(),B}function a(){return A.buffer!=j.buffer&&U(),P}function o(){return A.buffer!=j.buffer&&U(),D}var s,u,l=e;l.ready=new Promise(((e,t)=>{s=e,u=t})),l.jsepInit=(e,t,n,i,r,a,o,s)=>{l.Qb=e,l.wb=t,l.yb=n,l.jb=i,l.xb=r,l.Ea=a,l.zb=o,l.Ab=s,t=(e,t,n)=>(...i)=>{let r=wt,a=t?.();i=e(...i);let o=t?.();return a!==o&&(e=o,n(a),t=n=null),wt!=r?new Promise(((e,t)=>{St={resolve:e,reject:t}})):i},n=t=>async(...n)=>{try{if(l.bb)throw Error("Session already started");let i=l.bb={Fb:n[0],errors:[]},r=await t(...n);if(l.bb!==i)throw Error("Session mismatch");e.flush();let a=i.errors;if(0<a.length){let e=await Promise.all(a);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return r}finally{l.bb=null}},l._OrtRun=n(t(l._OrtRun,(()=>l._OrtRun),(e=>l._OrtRun=e))),l._OrtRunWithBinding=n(t(l._OrtRunWithBinding,(()=>l._OrtRunWithBinding),(e=>l._OrtRunWithBinding=e))),l._OrtBindInput=t(l._OrtBindInput,(()=>l._OrtBindInput),(e=>l._OrtBindInput=e)),l.jsepRegisterBuffer=(t,n,i,r)=>e.registerBuffer(t,n,i,r),l.jsepUnregisterBuffers=t=>{e.unregisterBuffers(t)},l.jsepGetBuffer=t=>e.getBuffer(t),l.jsepCreateDownloader=(t,n,i)=>e.createDownloader(t,n,i)};var d,c,p,f=Object.assign({},l),h="./this.program",m=(e,t)=>{throw t},g="object"==typeof window,y="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=l.ENVIRONMENT_IS_PTHREAD||!1,_="";function $(e){return l.locateFile?l.locateFile(e,_):_+e}if(v){var b=(ce(),W(se)),x=(he(),W(pe));let e;_=y?x.dirname(_)+"/":__dirname+"/",d=(e,t)=>(e=e.startsWith("file://")?new URL(e):x.normalize(e),b.readFileSync(e,t?void 0:"utf8")),p=e=>((e=d(e,!0)).buffer||(e=new Uint8Array(e)),e),c=(e,t,n,i=!0)=>{e=e.startsWith("file://")?new URL(e):x.normalize(e),b.readFile(e,i?void 0:"utf8",((e,r)=>{e?n(e):t(i?r.buffer:r)}))},!l.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),m=(e,t)=>{throw process.exitCode=e,t},l.inspect=()=>"[Emscripten Module object]";try{e=ge()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(g||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),typeof n<"u"&&n&&(_=n),_=0!==_.indexOf("blob:")?_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),c=(e,t,n)=>{var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=()=>{200==i.status||0==i.status&&i.response?t(i.response):n()},i.onerror=n,i.send(null)}));v&&typeof performance>"u"&&(global.performance=ye().performance);var C=console.log.bind(console),S=console.error.bind(console);v&&(C=(...e)=>b.writeSync(1,e.join(" ")+"\n"),S=(...e)=>b.writeSync(2,e.join(" ")+"\n"));var E,I=l.print||C,k=l.printErr||S;Object.assign(l,f),f=null,l.thisProgram&&(h=l.thisProgram),l.quit&&(m=l.quit),l.wasmBinary&&(E=l.wasmBinary);var T=l.noExitRuntime||!0;"object"!=typeof WebAssembly&&ee("no native wasm support detected");var A,O,z,R,j,M,B,P,D,N=!1;function U(){var e=A.buffer;l.HEAP8=j=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=B=new Int32Array(e),l.HEAPU8=M=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=P=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=D=new Float64Array(e)}var L=l.INITIAL_MEMORY||16777216;if(5242880<=L||ee("INITIAL_MEMORY should be larger than STACK_SIZE, was "+L+"! (STACK_SIZE=5242880)"),w)A=l.wasmMemory;else if(l.wasmMemory)A=l.wasmMemory;else if(!((A=new WebAssembly.Memory({initial:L/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw k("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&k("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");U(),L=A.buffer.byteLength;var H=[],G=[],V=[],F=0;function q(){return T||0<F}var K,Y=0,Z=null,Q=null;function J(){Y++,l.monitorRunDependencies&&l.monitorRunDependencies(Y)}function X(){if(Y--,l.monitorRunDependencies&&l.monitorRunDependencies(Y),0==Y&&(null!==Z&&(clearInterval(Z),Z=null),Q)){var e=Q;Q=null,e()}}function ee(e){throw l.onAbort&&l.onAbort(e),k(e="Aborted("+e+")"),N=!0,R=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),u(e),e}function te(e){return e.startsWith("data:application/octet-stream;base64,")}function ne(e){if(e==K&&E)return new Uint8Array(E);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}function ie(e,t,n){return function(e){if(!E&&(g||y)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>ne(e)));if(c)return new Promise(((t,n)=>{c(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>ne(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{k("failed to asynchronously prepare wasm: "+e),ee(e)}))}te(K="ort-wasm-simd-threaded.wasm")||(K=$(K));var re,ae={906828:e=>{l.Ea("Abs",e,void 0)},906879:e=>{l.Ea("Neg",e,void 0)},906930:e=>{l.Ea("Floor",e,void 0)},906983:e=>{l.Ea("Ceil",e,void 0)},907035:e=>{l.Ea("Reciprocal",e,void 0)},907093:e=>{l.Ea("Sqrt",e,void 0)},907145:e=>{l.Ea("Exp",e,void 0)},907196:e=>{l.Ea("Erf",e,void 0)},907247:e=>{l.Ea("Sigmoid",e,void 0)},907302:e=>{l.Ea("Log",e,void 0)},907353:e=>{l.Ea("Sin",e,void 0)},907404:e=>{l.Ea("Cos",e,void 0)},907455:e=>{l.Ea("Tan",e,void 0)},907506:e=>{l.Ea("Asin",e,void 0)},907558:e=>{l.Ea("Acos",e,void 0)},907610:e=>{l.Ea("Atan",e,void 0)},907662:e=>{l.Ea("Sinh",e,void 0)},907714:e=>{l.Ea("Cosh",e,void 0)},907766:e=>{l.Ea("Asinh",e,void 0)},907819:e=>{l.Ea("Acosh",e,void 0)},907872:e=>{l.Ea("Atanh",e,void 0)},907925:e=>{l.Ea("Tanh",e,void 0)},907977:e=>{l.Ea("Not",e,void 0)},908028:(e,t,n)=>{l.Ea("ClipV10",e,{min:t,max:n})},908100:e=>{l.Ea("Clip",e,void 0)},908152:(e,t)=>{l.Ea("Elu",e,{alpha:t})},908210:e=>{l.Ea("Relu",e,void 0)},908262:(e,t)=>{l.Ea("LeakyRelu",e,{alpha:t})},908326:(e,t)=>{l.Ea("ThresholdedRelu",e,{alpha:t})},908396:(e,t)=>{l.Ea("Cast",e,{to:t})},908454:e=>{l.Ea("Add",e,void 0)},908505:e=>{l.Ea("Sub",e,void 0)},908556:e=>{l.Ea("Mul",e,void 0)},908607:e=>{l.Ea("Div",e,void 0)},908658:e=>{l.Ea("Pow",e,void 0)},908709:e=>{l.Ea("Equal",e,void 0)},908762:e=>{l.Ea("Greater",e,void 0)},908817:e=>{l.Ea("GreaterOrEqual",e,void 0)},908879:e=>{l.Ea("Less",e,void 0)},908931:e=>{l.Ea("LessOrEqual",e,void 0)},908990:(e,t,n,i,a)=>{l.Ea("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},909154:(e,t,n,i,a)=>{l.Ea("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},909317:(e,t,n,i,a)=>{l.Ea("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},909480:(e,t,n,i,a)=>{l.Ea("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},909644:(e,t,n,i,a)=>{l.Ea("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},909807:(e,t,n,i,a)=>{l.Ea("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},909969:(e,t,n,i,a)=>{l.Ea("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},910131:(e,t,n,i,a)=>{l.Ea("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},910297:(e,t,n,i,a)=>{l.Ea("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},910466:(e,t,n,i,a)=>{l.Ea("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},910635:e=>{l.Ea("Where",e,void 0)},910688:(e,t,n)=>{l.Ea("Transpose",e,{perm:t?Array.from(r().subarray(n>>>0,n+t>>>0)):[]})},910801:(e,n,i,r,a,o,s,u,d,c)=>{l.Ea("Conv",e,{format:d?"NHWC":"NCHW",auto_pad:n,dilations:[i],group:r,kernel_shape:[a],pads:[o,s],strides:[u],w_is_const:()=>!!t()[c>>>0]})},911029:(e,n,i,r,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("Conv",e,{format:m?"NHWC":"NCHW",auto_pad:n,dilations:[i,r],group:a,kernel_shape:[o,s],pads:[u,d,c,p],strides:[f,h],w_is_const:()=>!!t()[g>>>0]})},911288:(e,n,i,r,a,o,s,u,d,c)=>{l.Ea("Conv",e,{format:d?"NHWC":"NCHW",auto_pad:n,dilations:[i],group:r,kernel_shape:[a],pads:[o,s],strides:[u],w_is_const:()=>!!t()[c>>>0]})},911516:(e,n,i,r,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("Conv",e,{format:m?"NHWC":"NCHW",auto_pad:n,dilations:[i,r],group:a,kernel_shape:[o,s],pads:[u,d,c,p],strides:[f,h],w_is_const:()=>!!t()[g>>>0]})},911775:(e,n,i,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:[i],group:a,kernel_shape:[o],pads:[s,u],strides:[d],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(r().subarray(h>>>0,h+f>>>0)):[],outputShape:m?Array.from(r().subarray(g>>>0,g+m>>>0)):[]})},912155:(e,n,i,a,o,s,u,d,c,p,f,h,m)=>{l.Ea("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:Array.from(r().subarray(i>>>0,i+2>>>0)),group:a,kernelShape:Array.from(r().subarray(o>>>0,o+2>>>0)),pads:Array.from(r().subarray(s>>>0,s+4>>>0)),strides:Array.from(r().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[c>>>0],outputPadding:0<p?Array.from(r().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(r().subarray(m>>>0,m+h>>>0)):[]})},912678:(e,n,i,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:[i],group:a,kernel_shape:[o],pads:[s,u],strides:[d],wIsConst:()=>!!t()[p>>>0],outputPadding:f?Array.from(r().subarray(h>>>0,h+f>>>0)):[],outputShape:m?Array.from(r().subarray(g>>>0,g+m>>>0)):[]})},913058:(e,n,i,a,o,s,u,d,c,p,f,h,m)=>{l.Ea("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:Array.from(r().subarray(i>>>0,i+2>>>0)),group:a,kernelShape:Array.from(r().subarray(o>>>0,o+2>>>0)),pads:Array.from(r().subarray(s>>>0,s+4>>>0)),strides:Array.from(r().subarray(u>>>0,u+2>>>0)),wIsConst:()=>!!t()[c>>>0],outputPadding:0<p?Array.from(r().subarray(f>>>0,f+p>>>0)):[],outputShape:0<h?Array.from(r().subarray(m>>>0,m+h>>>0)):[]})},913581:(e,t)=>{l.Ea("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},913672:(e,t,n,i,r,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[d,c,p,f],strides:[h,m]})},913956:(e,t)=>{l.Ea("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},914047:(e,t,n,i,r,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[d,c,p,f],strides:[h,m]})},914331:(e,t)=>{l.Ea("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},914418:(e,t,n,i,r,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[d,c,p,f],strides:[h,m]})},914698:(e,t)=>{l.Ea("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},914785:(e,t,n,i,r,a,o,s,u,d,c,p,f,h,m,g)=>{l.Ea("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:i,storage_order:r,dilations:[a,o],kernel_shape:[s,u],pads:[d,c,p,f],strides:[h,m]})},915065:(e,t,n,i,r)=>{l.Ea("Gemm",e,{alpha:t,beta:n,transA:i,transB:r})},915169:e=>{l.Ea("MatMul",e,void 0)},915223:(e,t,n,i)=>{l.Ea("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},915331:(e,t,n,i)=>{l.Ea("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:i})},915439:(e,t)=>{l.Ea("Softmax",e,{axis:t})},915502:(e,t)=>{l.Ea("Concat",e,{axis:t})},915562:(e,t,n,i,a)=>{l.Ea("Split",e,{axis:t,numOutputs:n,splitSizes:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},915707:e=>{l.Ea("Expand",e,void 0)},915761:(e,t)=>{l.Ea("Gather",e,{axis:Number(t)})},915832:(e,t)=>{l.Ea("GatherElements",e,{axis:Number(t)})},915911:(e,t,n,i,a,o,s,u,d,c,p)=>{l.Ea("Resize",e,{antialias:t,axes:n?Array.from(r().subarray(i>>>0,i+n>>>0)):[],coordinateTransformMode:we(a),cubicCoeffA:o,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:we(d),mode:we(c),nearestMode:we(p)})},916262:(e,t,n,i,a,o,s)=>{l.Ea("Slice",e,{starts:t?Array.from(r().subarray(n>>>0,n+t>>>0)):[],ends:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[],axes:o?Array.from(r().subarray(s>>>0,s+o>>>0)):[]})},916493:e=>{l.Ea("Tile",e,void 0)},916545:(e,t,n)=>{l.Ea("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},916652:(e,t,n)=>{l.Ea("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},916766:(e,t,n)=>{l.Ea("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},916880:e=>{l.Ea("Range",e,void 0)},916933:(e,t)=>{l.Ea("Einsum",e,{equation:we(t)})},917014:(e,t,n,i,a)=>{l.Ea("Pad",e,{mode:t,value:n,pads:i?Array.from(r().subarray(a>>>0,a+i>>>0)):[]})},917146:e=>{l.Ea("Gelu",e,void 0)},917198:e=>{l.Ea("BiasAdd",e,void 0)},917253:e=>{l.Ea("BiasSplitGelu",e,void 0)},917314:(e,t)=>{l.Ea("SkipLayerNormalization",e,{epsilon:t})},917395:e=>{l.zb(e)},917429:(e,t)=>l.Ab(e,t,l.bb.Fb,l.bb.errors),917541:e=>l.wb(e),917574:e=>l.yb(e),917606:(e,t,n)=>{l.jb(e,t,n,!0)},917645:(e,t,n)=>{l.jb(e,t,n)}};function oe(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function ue(e){e.terminate(),e.onmessage=()=>{}}function le(e){(e=be.Qa[e])||ee(),be.Eb(e)}function de(e){var t=be.tb();if(!t)return 6;be.Ya.push(t),be.Qa[e.Xa]=t,t.Xa=e.Xa;var n={cmd:"run",start_routine:e.Gb,arg:e.rb,pthread_ptr:e.Xa};return v&&t.unref(),t.postMessage(n,e.Mb),0}var fe=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,me=(e,t,n)=>{var i=(t>>>=0)+n;for(n=t;e[n]&&!(n>=i);)++n;if(16<n-t&&e.buffer&&fe)return fe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(i="";t<n;){var r=e[t++];if(128&r){var a=63&e[t++];if(192==(224&r))i+=String.fromCharCode((31&r)<<6|a);else{var o=63&e[t++];65536>(r=224==(240&r)?(15&r)<<12|a<<6|o:(7&r)<<18|a<<12|o<<6|63&e[t++])?i+=String.fromCharCode(r):(r-=65536,i+=String.fromCharCode(55296|r>>10,56320|1023&r))}}else i+=String.fromCharCode(r)}return i},we=(e,t)=>(e>>>=0)?me(i(),e,t):"";function _e(e){if(w)return nt(1,1,e);R=e,q()||(be.Hb(),l.onExit&&l.onExit(e),N=!0),m(e,new oe(e))}var $e=e=>{if(R=e,w)throw Ce(e),"unwind";_e(e)},be={ab:[],Ya:[],mb:[],Qa:{},gb:function(){w?be.vb():be.ub()},ub:function(){H.unshift((()=>{J(),be.Bb((()=>X()))}))},vb:function(){be.receiveObjectTransfer=be.Db,be.threadInitTLS=be.lb,be.setExitStatus=be.kb,T=!1},kb:function(e){R=e},Sb:["$terminateWorker"],Hb:function(){for(var e of be.Ya)ue(e);for(e of be.ab)ue(e);be.ab=[],be.Ya=[],be.Qa=[]},Eb:function(e){var t=e.Xa;delete be.Qa[t],be.ab.push(e),be.Ya.splice(be.Ya.indexOf(e),1),e.Xa=0,Bt(t)},Db:function(){},lb:function(){be.mb.forEach((e=>e()))},Cb:e=>new Promise((t=>{e.onmessage=n=>{var i=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=At()){var r=be.Qa[n.Rb];r?r.postMessage(n,n.transferList):k('Internal error! Worker sent a message "'+i+'" to target pthread '+n.targetThread+", but that thread no longer exists!")}else"checkMailbox"===i?Fe():"spawnThread"===i?de(n):"cleanupThread"===i?le(n.thread):"killThread"===i?(n=n.thread,i=be.Qa[n],delete be.Qa[n],ue(i),Bt(n),be.Ya.splice(be.Ya.indexOf(i),1),i.Xa=0):"cancelThread"===i?be.Qa[n.thread].postMessage({cmd:"cancel"}):"loaded"===i?(e.loaded=!0,t(e)):"alert"===i?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?e.postMessage(n):"callHandler"===i?l[n.handler](...n.args):i&&k("worker sent an unknown command "+i)},e.onerror=e=>{throw k("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var i,r=[];for(i of["onExit","onAbort","print","printErr"])l.hasOwnProperty(i)&&r.push(i);e.postMessage({cmd:"load",handlers:r,urlOrBlob:l.mainScriptUrlOrBlob||n,wasmMemory:A,wasmModule:z})})),Bb:function(e){e()},qb:function(){var e=$("ort-wasm-simd-threaded.worker.js");e=new Worker(e),be.ab.push(e)},tb:function(){return 0==be.ab.length&&(be.qb(),be.Cb(be.ab[0])),be.ab.pop()}};l.PThread=be;var xe=e=>{for(;0<e.length;)e.shift()(l)};function Ce(e){if(w)return nt(2,0,e);$e(e)}function Se(e){this.fb=e-24,this.pb=function(e){a()[this.fb+4>>2>>>0]=e},this.ob=function(e){a()[this.fb+8>>2>>>0]=e},this.gb=function(e,t){this.nb(),this.pb(e),this.ob(t)},this.nb=function(){a()[this.fb+16>>2>>>0]=0}}function Ee(e,t,n,i){return w?nt(3,1,e,t,n,i):Ie(e,t,n,i)}function Ie(e,t,n,i){if(e>>>=0,t>>>=0,n>>>=0,i>>>=0,typeof SharedArrayBuffer>"u")return k("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];return w&&0===r.length?Ee(e,t,n,i):(e={Gb:n,Xa:e,rb:i,Mb:r},w?(e.Ob="spawnThread",postMessage(e,r),0):de(e))}function ke(e,t,n){return w?nt(4,1,e,t,n):0}function Te(e,t){if(w)return nt(5,1,e,t)}l.establishStackSpace=function(){var e=At(),t=r()[e+52>>2>>>0];e=r()[e+56>>2>>>0],Ut(t,t-e),Lt(t)},l.invokeEntryPoint=function(e,t){e=Gt.apply(null,[e,t]),q()?be.kb(e):Pt(e)};var Ae=e=>{for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);127>=i?t++:2047>=i?t+=2:55296<=i&&57343>=i?(t+=4,++n):t+=3}return t},Oe=(e,t,n,i)=>{if(!(0<i))return 0;var r=n>>>=0;i=n+i-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=i)break;t[n++>>>0]=o}else{if(2047>=o){if(n+1>=i)break;t[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=i)break;t[n++>>>0]=224|o>>12}else{if(n+3>=i)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63}t[n++>>>0]=128|o>>6&63}t[n++>>>0]=128|63&o}}return t[n>>>0]=0,n-r},ze=(e,t,n)=>Oe(e,i(),t,n);function Re(e,t){if(w)return nt(6,1,e,t)}function je(e,t,n){if(w)return nt(7,1,e,t,n)}function Me(e,t,n){return w?nt(8,1,e,t,n):0}function Be(e,t){if(w)return nt(9,1,e,t)}function Pe(e,t,n){if(w)return nt(10,1,e,t,n)}function De(e,t,n,i){if(w)return nt(11,1,e,t,n,i)}function Ne(e,t,n,i){if(w)return nt(12,1,e,t,n,i)}function Ue(e,t,n,i){if(w)return nt(13,1,e,t,n,i)}function We(e){if(w)return nt(14,1,e)}function Le(e,t){if(w)return nt(15,1,e,t)}function He(e,t,n){if(w)return nt(16,1,e,t,n)}var Ge=e=>{if(!N)try{if(e(),!q())try{w?Pt(R):$e(R)}catch(e){e instanceof oe||"unwind"==e||m(1,e)}}catch(e){e instanceof oe||"unwind"==e||m(1,e)}};function Ve(e){e>>>=0,"function"==typeof Atomics.Nb&&(Atomics.Nb(r(),e>>2,e).value.then(Fe),e+=128,Atomics.store(r(),e>>2,1))}function Fe(){var e=At();e&&(Ve(e),Ge((()=>Dt())))}l.__emscripten_thread_mailbox_await=Ve,l.checkMailbox=Fe;var qe=e=>e%4==0&&(e%100!=0||e%400==0),Ke=[0,31,60,91,121,152,182,213,244,274,305,335],Ye=[0,31,59,90,120,151,181,212,243,273,304,334];function Ze(e,t,n,i,r,a,o,s){return w?nt(17,1,e,t,n,i,r,a,o,s):-52}function Qe(e,t,n,i,r,a,o){if(w)return nt(18,1,e,t,n,i,r,a,o)}var Je=e=>{var t=Ae(e)+1,n=Ot(t);return n&&ze(e,n,t),n},Xe=[],et=(e,t)=>{var n;for(Xe.length=0,t>>=2;n=i()[e++>>>0];)t+=105!=n&t,Xe.push(105==n?r()[t>>>0]:o()[t++>>>1]),++t;return Xe},tt=e=>{var t=Wt();return e=e(),Lt(t),e};function nt(e,t){var n=arguments.length-2,i=arguments;return tt((()=>{for(var r=Ht(8*n),a=r>>3,s=0;s<n;s++){var u=i[2+s];o()[a+s>>>0]=u}return Mt(e,n,r,t)}))}var it,rt=[],at={},ot=()=>{if(!it){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"};for(e in at)void 0===at[e]?delete t[e]:t[e]=at[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);it=n}return it};function st(e,n){if(w)return nt(19,1,e,n);e>>>=0,n>>>=0;var i=0;return ot().forEach((function(r,o){var s=n+i;for(o=a()[e+4*o>>2>>>0]=s,s=0;s<r.length;++s)t()[o++>>0>>>0]=r.charCodeAt(s);t()[o>>0>>>0]=0,i+=r.length+1})),0}function ut(e,t){if(w)return nt(20,1,e,t);e>>>=0,t>>>=0;var n=ot();a()[e>>2>>>0]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),a()[t>>2>>>0]=i,0}function lt(e){return w?nt(21,1,e):52}function dt(e,t,n,i){return w?nt(22,1,e,t,n,i):52}function ct(e,t,n,i,r){return w?nt(23,1,e,t,n,i,r):70}var pt=[null,[],[]];function ft(e,t,n,r){if(w)return nt(24,1,e,t,n,r);t>>>=0,n>>>=0,r>>>=0;for(var o=0,s=0;s<n;s++){var u=a()[t>>2>>>0],l=a()[t+4>>2>>>0];t+=8;for(var d=0;d<l;d++){var c=i()[u+d>>>0],p=pt[e];0===c||10===c?((1===e?I:k)(me(p,0)),p.length=0):p.push(c)}o+=l}return a()[r>>2>>>0]=o,0}var ht=[31,29,31,30,31,30,31,31,30,31,30,31],mt=[31,28,31,30,31,30,31,31,30,31,30,31];function gt(e,n,i,a){function o(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function s(e,t){return o(e,t,"0")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var i;return 0===(i=n(e.getFullYear()-t.getFullYear()))&&0===(i=n(e.getMonth()-t.getMonth()))&&(i=n(e.getDate()-t.getDate())),i}function l(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function d(e){var t=e.Za;for(e=new Date(new Date(e.$a+1900,0,1).getTime());0<t;){var n=e.getMonth(),i=(qe(e.getFullYear())?ht:mt)[n];if(!(t>i-e.getDate())){e.setDate(e.getDate()+t);break}t-=i-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=l(new Date(e.getFullYear(),0,4)),n=l(n),0>=u(t,e)?0>=u(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,n>>>=0,i>>>=0,a>>>=0;var c=r()[a+40>>2>>>0];for(var p in a={Kb:r()[a>>2>>>0],Jb:r()[a+4>>2>>>0],cb:r()[a+8>>2>>>0],ib:r()[a+12>>2>>>0],eb:r()[a+16>>2>>>0],$a:r()[a+20>>2>>>0],Wa:r()[a+24>>2>>>0],Za:r()[a+28>>2>>>0],Tb:r()[a+32>>2>>>0],Ib:r()[a+36>>2>>>0],Lb:c?we(c):""},i=we(i),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})i=i.replace(new RegExp(p,"g"),c[p]);var f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),h="January February March April May June July August September October November December".split(" ");for(p in c={"%a":e=>f[e.Wa].substring(0,3),"%A":e=>f[e.Wa],"%b":e=>h[e.eb].substring(0,3),"%B":e=>h[e.eb],"%C":e=>s((e.$a+1900)/100|0,2),"%d":e=>s(e.ib,2),"%e":e=>o(e.ib,2," "),"%g":e=>d(e).toString().substring(2),"%G":e=>d(e),"%H":e=>s(e.cb,2),"%I":e=>(0==(e=e.cb)?e=12:12<e&&(e-=12),s(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.eb-1;t+=(qe(e.$a+1900)?ht:mt)[n++]);return s(e.ib+t,3)},"%m":e=>s(e.eb+1,2),"%M":e=>s(e.Jb,2),"%n":()=>"\n","%p":e=>0<=e.cb&&12>e.cb?"AM":"PM","%S":e=>s(e.Kb,2),"%t":()=>"\t","%u":e=>e.Wa||7,"%U":e=>s(Math.floor((e.Za+7-e.Wa)/7),2),"%V":e=>{var t=Math.floor((e.Za+7-(e.Wa+6)%7)/7);if(2>=(e.Wa+371-e.Za-2)%7&&t++,t)53==t&&(4==(n=(e.Wa+371-e.Za)%7)||3==n&&qe(e.$a)||(t=1));else{t=52;var n=(e.Wa+7-e.Za-1)%7;(4==n||5==n&&qe(e.$a%400-1))&&t++}return s(t,2)},"%w":e=>e.Wa,"%W":e=>s(Math.floor((e.Za+7-(e.Wa+6)%7)/7),2),"%y":e=>(e.$a+1900).toString().substring(2),"%Y":e=>e.$a+1900,"%z":e=>(0<=(e=e.Ib)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.Lb,"%%":()=>"%"},i=i.replace(/%%/g,"\0\0"),c)i.includes(p)&&(i=i.replace(new RegExp(p,"g"),c[p](a)));return p=function(e){var t=Array(Ae(e)+1);return Oe(e,t,0,t.length),t}(i=i.replace(/\0\0/g,"%")),p.length>n?0:(((e,n)=>{t().set(e,n>>>0)})(p,e),p.length-1)}function yt(e){try{e()}catch(e){ee(e)}}var vt=0,wt=null,_t=0,$t=[],bt={},xt={},Ct=0,St=null,Et=[];function It(e){if(!N){if(0===vt){var t=!1,n=!1;e(((e=0)=>{if(!N&&(_t=e,t=!0,n)){vt=2,yt((()=>qt(wt))),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),e=!1;try{var i=function(){var e=r()[wt+8>>2>>>0];return e=O[xt[e]],--F,e()}()}catch(t){i=t,e=!0}var a=!1;if(!wt){var o=St;o&&(St=null,(e?o.reject:o.resolve)(i),a=!0)}if(e&&!a)throw i}})),n=!0,t||(vt=1,wt=function(){var e=Ot(65548),t=e+12;a()[e>>2>>>0]=t,a()[e+4>>2>>>0]=t+65536,t=$t[0];var n=bt[t];return void 0===n&&(n=Ct++,bt[t]=n,xt[n]=t),t=n,r()[e+8>>2>>>0]=t,e}(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),yt((()=>Vt(wt))))}else 2===vt?(vt=0,yt(Kt),zt(wt),wt=null,Et.forEach((e=>Ge(e)))):ee(`invalid state: ${vt}`);return _t}}be.gb();var kt=[null,_e,Ce,Ee,ke,Te,Re,je,Me,Be,Pe,De,Ne,Ue,We,Le,He,Ze,Qe,st,ut,lt,dt,ct,ft],Tt={r:function(e,t,n){return function(e){return It((t=>{e().then(t)}))}((async()=>{await l.xb(e,t,n)}))},b:function(e,t,n){throw new Se(e>>>=0).gb(t>>>0,n>>>0),e},O:function(e){Rt(e>>>0,!y,1,!g,131072,!1),be.lb()},l:function(e){e>>>=0,w?postMessage({cmd:"cleanupThread",thread:e}):le(e)},I:Ie,i:ke,U:Te,E:Re,G:je,V:Me,S:Be,K:Pe,R:De,p:Ne,F:Ue,C:We,T:Le,D:He,q:()=>!0,A:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>Fe())):w?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=be.Qa[e])&&e.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:Ve,X:function(e){v&&be.Qa[e>>>0].ref()},u:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),r()[n>>2>>>0]=e.getUTCSeconds(),r()[n+4>>2>>>0]=e.getUTCMinutes(),r()[n+8>>2>>>0]=e.getUTCHours(),r()[n+12>>2>>>0]=e.getUTCDate(),r()[n+16>>2>>>0]=e.getUTCMonth(),r()[n+20>>2>>>0]=e.getUTCFullYear()-1900,r()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=e},v:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),r()[n>>2>>>0]=e.getSeconds(),r()[n+4>>2>>>0]=e.getMinutes(),r()[n+8>>2>>>0]=e.getHours(),r()[n+12>>2>>>0]=e.getDate(),r()[n+16>>2>>>0]=e.getMonth(),r()[n+20>>2>>>0]=e.getFullYear()-1900,r()[n+24>>2>>>0]=e.getDay(),t=(qe(e.getFullYear())?Ke:Ye)[e.getMonth()]+e.getDate()-1|0,r()[n+28>>2>>>0]=t,r()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var i=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=i&&e.getTimezoneOffset()==Math.min(i,t)),r()[n+32>>2>>>0]=e},w:function(e){e>>>=0;var t=new Date(r()[e+20>>2>>>0]+1900,r()[e+16>>2>>>0],r()[e+12>>2>>>0],r()[e+8>>2>>>0],r()[e+4>>2>>>0],r()[e>>2>>>0],0),n=r()[e+32>>2>>>0],i=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(o,a);return 0>n?r()[e+32>>2>>>0]=+(a!=o&&s==i):0<n!=(s==i)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?s:a)-i))),r()[e+24>>2>>>0]=t.getDay(),n=(qe(t.getFullYear())?Ke:Ye)[t.getMonth()]+t.getDate()-1|0,r()[e+28>>2>>>0]=n,r()[e>>2>>>0]=t.getSeconds(),r()[e+4>>2>>>0]=t.getMinutes(),r()[e+8>>2>>>0]=t.getHours(),r()[e+12>>2>>>0]=t.getDate(),r()[e+16>>2>>>0]=t.getMonth(),r()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,Nt((re=e,1<=+Math.abs(re)?0<re?+Math.floor(re/4294967296)>>>0:~~+Math.ceil((re-+(~~re>>>0))/4294967296)>>>0:0)),e>>>0},s:Ze,t:Qe,z:function(e,t,n){function i(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var o=(new Date).getFullYear(),s=new Date(o,0,1),u=new Date(o,6,1);o=s.getTimezoneOffset();var l=u.getTimezoneOffset(),d=Math.max(o,l);a()[e>>2>>>0]=60*d,r()[t>>2>>>0]=+(o!=l),e=i(s),t=i(u),e=Je(e),t=Je(t),l<o?(a()[n>>2>>>0]=e,a()[n+4>>2>>>0]=t):(a()[n>>2>>>0]=t,a()[n+4>>2>>>0]=e)},d:()=>{ee("")},c:function(e,t,n){return e>>>=0,t=et(t>>>0,n>>>0),ae[e].apply(null,t)},k:function(e,t,n){return e>>>=0,t=et(t>>>0,n>>>0),ae[e].apply(null,t)},m:function(){},j:function(){return Date.now()},W:()=>{throw F+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return v?(Ss(),W(ve)).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n,i){for(be.Pb=t>>>0,rt.length=n,t=i>>>0>>3,i=0;i<n;i++)rt[i]=o()[t+i>>>0];return(0>e?ae[-e-1]:kt[e]).apply(null,rt)},y:function(e){e>>>=0;var t=i().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var a=Math;r=Math.max(e,r);e:{a=a.min.call(a,4294901760,r+(65536-r%65536)%65536)-A.buffer.byteLength+65535>>>16;try{A.grow(a),U();var o=1;break e}catch{}o=void 0}if(o)return!0}return!1},P:st,Q:ut,H:$e,h:lt,o:dt,x:ct,n:ft,a:A||l.wasmMemory,J:gt,e:function(e,t,n,i){return gt(e>>>0,t>>>0,n>>>0,i>>>0)}};(function(){function e(e,t){return e=function(e){var t,n={};for(t in e)!function(t){var i=e[t];n[t]="function"==typeof i?function(){$t.push(t);try{return i.apply(null,arguments)}finally{N||($t.pop()===t||ee(),wt&&1===vt&&0===$t.length&&(vt=0,F+=1,yt(Ft),typeof Fibers<"u"&&Fibers.Ub()))}}:i}(t);return n}(e=e.exports),O=e=function(e){e=Object.assign({},e);var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return e.__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),be.mb.push(O.Da),G.unshift(O.Y),z=t,X(),e}var t={a:Tt};if(J(),l.instantiateWasm)try{return l.instantiateWasm(t,e)}catch(e){k("Module.instantiateWasm callback failed with error: "+e),u(e)}(function(e,t){var n=K;return E||"function"!=typeof WebAssembly.instantiateStreaming||te(n)||n.startsWith("file://")||v||"function"!=typeof fetch?ie(n,e,t):fetch(n,{credentials:"same-origin"}).then((i=>WebAssembly.instantiateStreaming(i,e).then(t,(function(i){return k("wasm streaming compile failed: "+i),k("falling back to ArrayBuffer instantiation"),ie(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(u)})(),l._OrtInit=(e,t)=>(l._OrtInit=O.Z)(e,t),l._OrtGetLastError=(e,t)=>(l._OrtGetLastError=O._)(e,t),l._OrtCreateSessionOptions=(e,t,n,i,r,a,o,s,u,d)=>(l._OrtCreateSessionOptions=O.$)(e,t,n,i,r,a,o,s,u,d),l._OrtAppendExecutionProvider=(e,t)=>(l._OrtAppendExecutionProvider=O.aa)(e,t),l._OrtAddFreeDimensionOverride=(e,t,n)=>(l._OrtAddFreeDimensionOverride=O.ba)(e,t,n),l._OrtAddSessionConfigEntry=(e,t,n)=>(l._OrtAddSessionConfigEntry=O.ca)(e,t,n),l._OrtReleaseSessionOptions=e=>(l._OrtReleaseSessionOptions=O.da)(e),l._OrtCreateSession=(e,t,n)=>(l._OrtCreateSession=O.ea)(e,t,n),l._OrtReleaseSession=e=>(l._OrtReleaseSession=O.fa)(e),l._OrtGetInputOutputCount=(e,t,n)=>(l._OrtGetInputOutputCount=O.ga)(e,t,n),l._OrtGetInputName=(e,t)=>(l._OrtGetInputName=O.ha)(e,t),l._OrtGetOutputName=(e,t)=>(l._OrtGetOutputName=O.ia)(e,t),l._OrtFree=e=>(l._OrtFree=O.ja)(e),l._OrtCreateTensor=(e,t,n,i,r,a)=>(l._OrtCreateTensor=O.ka)(e,t,n,i,r,a),l._OrtGetTensorData=(e,t,n,i,r)=>(l._OrtGetTensorData=O.la)(e,t,n,i,r),l._OrtReleaseTensor=e=>(l._OrtReleaseTensor=O.ma)(e),l._OrtCreateRunOptions=(e,t,n,i)=>(l._OrtCreateRunOptions=O.na)(e,t,n,i),l._OrtAddRunConfigEntry=(e,t,n)=>(l._OrtAddRunConfigEntry=O.oa)(e,t,n),l._OrtReleaseRunOptions=e=>(l._OrtReleaseRunOptions=O.pa)(e),l._OrtCreateBinding=e=>(l._OrtCreateBinding=O.qa)(e),l._OrtBindInput=(e,t,n)=>(l._OrtBindInput=O.ra)(e,t,n),l._OrtBindOutput=(e,t,n,i)=>(l._OrtBindOutput=O.sa)(e,t,n,i),l._OrtClearBoundOutputs=e=>(l._OrtClearBoundOutputs=O.ta)(e),l._OrtReleaseBinding=e=>(l._OrtReleaseBinding=O.ua)(e),l._OrtRunWithBinding=(e,t,n,i,r)=>(l._OrtRunWithBinding=O.va)(e,t,n,i,r),l._OrtRun=(e,t,n,i,r,a,o,s)=>(l._OrtRun=O.wa)(e,t,n,i,r,a,o,s),l._OrtEndProfiling=e=>(l._OrtEndProfiling=O.xa)(e),l._JsepOutput=(e,t,n)=>(l._JsepOutput=O.ya)(e,t,n),l._JsepGetNodeName=e=>(l._JsepGetNodeName=O.za)(e);var At=l._pthread_self=()=>(At=l._pthread_self=O.Aa)(),Ot=l._malloc=e=>(Ot=l._malloc=O.Ba)(e),zt=l._free=e=>(zt=l._free=O.Ca)(e);l.__emscripten_tls_init=()=>(l.__emscripten_tls_init=O.Da)();var Rt=l.__emscripten_thread_init=(e,t,n,i,r,a)=>(Rt=l.__emscripten_thread_init=O.Fa)(e,t,n,i,r,a);l.__emscripten_thread_crashed=()=>(l.__emscripten_thread_crashed=O.Ga)();var jt,Mt=(e,t,n,i)=>(Mt=O.Ha)(e,t,n,i),Bt=e=>(Bt=O.Ia)(e),Pt=l.__emscripten_thread_exit=e=>(Pt=l.__emscripten_thread_exit=O.Ja)(e),Dt=l.__emscripten_check_mailbox=()=>(Dt=l.__emscripten_check_mailbox=O.Ka)(),Nt=e=>(Nt=O.La)(e),Ut=(e,t)=>(Ut=O.Ma)(e,t),Wt=()=>(Wt=O.Na)(),Lt=e=>(Lt=O.Oa)(e),Ht=e=>(Ht=O.Pa)(e),Gt=l.dynCall_ii=(e,t)=>(Gt=l.dynCall_ii=O.Ra)(e,t),Vt=e=>(Vt=O.Sa)(e),Ft=()=>(Ft=O.Ta)(),qt=e=>(qt=O.Ua)(e),Kt=()=>(Kt=O.Va)();function Yt(){function e(){if(!jt&&(jt=!0,l.calledRun=!0,!N)&&(w||xe(G),s(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),!w)){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;){var e=l.postRun.shift();V.unshift(e)}xe(V)}}if(!(0<Y))if(w)s(l),w||xe(G),startWorker(l);else{if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)H.unshift(l.preRun.shift());xe(H),0<Y||(l.setStatus?(l.setStatus("Running..."),setTimeout((function(){setTimeout((function(){l.setStatus("")}),1),e()}),1)):e())}}if(l.___start_em_js=917678,l.___stop_em_js=917839,l.keepRuntimeAlive=q,l.wasmMemory=A,l.stackAlloc=Ht,l.stackSave=Wt,l.stackRestore=Lt,l.UTF8ToString=we,l.stringToUTF8=ze,l.lengthBytesUTF8=Ae,l.ExitStatus=oe,l.PThread=be,Q=function e(){jt||Yt(),jt||(Q=e)},l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);0<l.preInit.length;)l.preInit.pop()();return Yt(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=i:"function"==typeof define&&define.amd&&define([],(()=>i))})),Is=N(((e,t)=>{t.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'})),ks=D((()=>{_e=me(),$e=Es(),xe=!1,Ce=!1,Se=!1,Ee=e=>{if(1===e)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Ie=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ke=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Te=async e=>{if(xe)return Promise.resolve();if(Ce)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Se)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ce=!0;let t=e.initTimeout,n=e.numThreads,i=e.simd,r=Ee(n),a=i&&Ie(),o=e.wasmPaths,s="string"==typeof o?o:void 0,u=ke(a,r),l="object"==typeof o?o[u]:void 0,d=!1,c=[];if(t>0&&c.push(new Promise((e=>{setTimeout((()=>{d=!0,e()}),t)}))),c.push(new Promise(((e,t)=>{let i=r?$e:_e,a={locateFile:(e,t)=>{if(r&&e.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Is()],{type:"text/javascript"}));if(e.endsWith(".wasm")){if(l)return l;let e=s??t;return"ort-wasm-simd.wasm"===u?e+"ort-wasm-simd.jsep.wasm":"ort-wasm-simd-threaded.wasm"===u?e+"ort-wasm-simd-threaded.jsep.wasm":e+u}return t+e}};if(r)if(a.numThreads=n,typeof Blob>"u")a.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let e=`var ortWasmThreaded=${i.toString()};`;a.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}i(a).then((t=>{Ce=!1,xe=!0,be=t,e()}),(e=>{Ce=!1,Se=!0,t(e)}))}))),await Promise.race(c),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ae=()=>{if(xe&&be)return be;throw new Error("WebAssembly is not initialized yet.")}})),Ts=D((()=>{ks(),Oe=(e,t)=>{let n=Ae(),i=n.lengthBytesUTF8(e)+1,r=n._malloc(i);return n.stringToUTF8(e,r,i),t.push(r),r},ze=(e,t,n,i)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,r])=>{let a=t?t+e:e;if("object"==typeof r)ze(r,a+".",n,i);else if("string"==typeof r||"number"==typeof r)i(a,r.toString());else{if("boolean"!=typeof r)throw new Error("Can't handle extra config type: "+typeof r);i(a,r?"1":"0")}}))},Re=e=>{let t=Ae(),n=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let i=t.HEAP32[n/4],r=t.HEAPU32[n/4+1],a=r?t.UTF8ToString(r):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}})),As=D((()=>{ks(),Ts(),je=e=>{let t=Ae(),n=0,i=[],r=e||{};try{if(void 0===e?.logSeverityLevel)r.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)r.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(r.terminate=!1);let a=0;return void 0!==e?.tag&&(a=Oe(e.tag,i)),n=t._OrtCreateRunOptions(r.logSeverityLevel,r.logVerbosityLevel,!!r.terminate,a),0===n&&Re("Can't create run options."),void 0!==e?.extra&&ze(e.extra,"",new WeakSet,((e,r)=>{let a=Oe(e,i),o=Oe(r,i);0!==t._OrtAddRunConfigEntry(n,a,o)&&Re(`Can't set a run config entry: ${e} - ${r}.`)})),[n,i]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),i.forEach((e=>t._free(e))),e}}})),Os=D((()=>{ks(),Ts(),Me=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Be=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Pe=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},De=(e,t,n)=>{for(let i of t){let t="string"==typeof i?i:i.name;switch(t){case"webnn":if(t="WEBNN","string"!=typeof i){let t=i;if(t?.deviceType){let i=Oe("deviceType",n),r=Oe(t.deviceType,n);0!==Ae()._OrtAddSessionConfigEntry(e,i,r)&&Re(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`)}if(t?.numThreads){let i=t.numThreads;("number"!=typeof i||!Number.isInteger(i)||i<0)&&(i=0);let r=Oe("numThreads",n),a=Oe(i.toString(),n);0!==Ae()._OrtAddSessionConfigEntry(e,r,a)&&Re(`Can't set a session config entry: 'numThreads' - ${t.numThreads}.`)}if(t?.powerPreference){let i=Oe("powerPreference",n),r=Oe(t.powerPreference,n);0!==Ae()._OrtAddSessionConfigEntry(e,i,r)&&Re(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`)}}break;case"webgpu":if(t="JS","string"!=typeof i){let t=i;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);let i=Oe("preferredLayout",n),r=Oe(t.preferredLayout,n);0!==Ae()._OrtAddSessionConfigEntry(e,i,r)&&Re(`Can't set a session config entry: 'preferredLayout' - ${t.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let r=Oe(t,n);0!==Ae()._OrtAppendExecutionProvider(e,r)&&Re(`Can't append execution provider: ${t}.`)}},Ne=e=>{let t=Ae(),n=0,i=[],r=e||{};Pe(r);try{let e=Me(r.graphOptimizationLevel??"all"),a=Be(r.executionMode??"sequential"),o="string"==typeof r.logId?Oe(r.logId,i):0,s=r.logSeverityLevel??2;if(!Number.isInteger(s)||s<0||s>4)throw new Error(`log serverity level is not valid: ${s}`);let u=r.logVerbosityLevel??0;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log verbosity level is not valid: ${u}`);let l="string"==typeof r.optimizedModelFilePath?Oe(r.optimizedModelFilePath,i):0;if(n=t._OrtCreateSessionOptions(e,!!r.enableCpuMemArena,!!r.enableMemPattern,a,!!r.enableProfiling,0,o,s,u,l),0===n&&Re("Can't create session options."),r.executionProviders&&De(n,r.executionProviders,i),void 0!==r.enableGraphCapture){if("boolean"!=typeof r.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${r.enableGraphCapture}`);let e=Oe("enableGraphCapture",i),a=Oe(r.enableGraphCapture.toString(),i);0!==t._OrtAddSessionConfigEntry(n,e,a)&&Re(`Can't set a session config entry: 'enableGraphCapture' - ${r.enableGraphCapture}.`)}if(r.freeDimensionOverrides)for(let[e,a]of Object.entries(r.freeDimensionOverrides)){if("string"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if("number"!=typeof a||!Number.isInteger(a)||a<0)throw new Error(`free dimension override value must be a non-negative integer: ${a}`);let r=Oe(e,i);0!==t._OrtAddFreeDimensionOverride(n,r,a)&&Re(`Can't set a free dimension override: ${e} - ${a}.`)}return void 0!==r.extra&&ze(r.extra,"",new WeakSet,((e,r)=>{let a=Oe(e,i),o=Oe(r,i);0!==t._OrtAddSessionConfigEntry(n,a,o)&&Re(`Can't set a session config entry: ${e} - ${r}.`)})),[n,i]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),i.forEach((e=>t._free(e))),e}}})),zs=D((()=>{Ue=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},We=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Le=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],He=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Ge=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ve=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint8"===e||"bool"===e,Fe=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}})),Rs=D((()=>{qe=async e=>{if("string"!=typeof e)return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e);if(!(typeof process<"u"&&process.versions&&process.versions.node)){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),i=n?parseInt(n,10):0;if(i<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,r=t.body.getReader();try{n=new ArrayBuffer(i)}catch(e){if(!(e instanceof RangeError))throw e;{let e=Math.ceil(i/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let a=0;for(;;){let{done:e,value:t}=await r.read();if(e)break;let i=t.byteLength;new Uint8Array(n,a,i).set(t),a+=i}return new Uint8Array(n,0,i)}}try{return new Uint8Array(await(void 0)(e))}catch(t){if("ERR_FS_FILE_TOO_LARGE"===t.code){let t=(void 0)(e),n=[];for await(let e of t)n.push(e);return new Uint8Array(Buffer.concat(n))}throw t}}})),js=D((()=>{zs(),Ke=["V","I","W","E","F"],Ye=(e,t)=>{console.log(`[${Ke[e]},${(new Date).toISOString()}]${t}`)},Je=(e,t)=>{Ze=e,Qe=t},Xe=(e,t)=>{let n=Ge(e);n>=Ge(Ze)&&Ye(n,"function"==typeof t?t():t)},et=(...e)=>{Qe&&Xe(...e)}})),Ms=D((()=>{zs(),tt=(e,t)=>new(He(t))(e)})),Bs=D((()=>{})),Ps=D((()=>{js(),Bs(),nt=e=>16*Math.ceil(e/16),it=1,rt=()=>it++,at=async(e,t,n,i)=>{let r=nt(n),a=e.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(t,0,a,0,r),e.flush(),await a.mapAsync(GPUMapMode.READ);let s=a.getMappedRange();if(i){let e=i();return e.set(new Uint8Array(s,0,n)),e}return new Uint8Array(s.slice(0,n))}finally{a.destroy()}},ot=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(e,t){let n=t.buffer,i=t.byteOffset,r=t.byteLength,a=nt(r),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(o.originalSize!==r)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${r}`);let s=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),u=s.getMappedRange();new Uint8Array(u).set(new Uint8Array(n,i,r)),s.unmap();let l=this.backend.getCommandEncoder();this.backend.endComputePass(),l.copyBufferToBuffer(s,0,o.gpuData.buffer,0,a),et("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(s)}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(t);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let r=nt(n.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(n.gpuData.buffer,0,i.gpuData.buffer,0,r)}registerExternalBuffer(e,t,n){let i;if(n){if(i=this.externalBuffers.get(n),void 0===i)throw new Error("previous buffer is not registered");if(e===n)return et("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${i}, buffer is the same, skip.`)),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!");this.externalBuffers.delete(n)}else i=rt();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:e},originalSize:t}),this.externalBuffers.set(e,i),et("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${i}, registered.`)),i}unregisterExternalBuffer(e){let t=this.externalBuffers.get(e);void 0!==t&&(this.storageCache.delete(t),this.externalBuffers.delete(e),et("verbose",(()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`)))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,i=nt(e),r=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(r||a){let e=r?this.freeBuffers:this.freeUniformBuffers,a=e.get(i);a||(a=[],e.set(i,a)),n=a.length>0?a.pop():this.backend.device.createBuffer({size:i,usage:t})}else n=this.backend.device.createBuffer({size:i,usage:t});let o={id:rt(),type:0,buffer:n};return this.storageCache.set(o.id,{gpuData:o,originalSize:e}),et("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`)),o}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return et("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("data does not exist");await at(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.freeUniformBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.capturedPendingBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach((e=>{e.destroy()})),this.capturedPendingBuffers.delete(e))}},st=(...e)=>new ot(...e)})),Ds=D((()=>{ut=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this.key}},lt=e=>new ut(e)})),Ns=D((()=>{dt=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},ct=class{static calcShape(e,t,n=!1){let i=e.length,r=t.length;if(0===i)return t;if(0===r)return e;let a=Math.max(e.length,t.length),o=new Array(a);if(n){if(i<2||r<2)return;let n=dt.calcMatMulShape([e[i-2],e[i-1]],[t[r-2],t[r-1]]);if(void 0===n)return;[o[a-2],o[a-1]]=n}for(let s=n?3:1;s<=a;s++){let n=i-s<0?1:e[i-s],u=r-s<0?1:t[r-s];if(n!==u&&n>1&&u>1)return;let l=Math.max(n,u);if(n&&u)o[a-s]=Math.max(n,u);else{if(l>1)return;o[a-s]=0}}return o}static isValidBroadcast(e,t){let n=e.length,i=t.length;if(n>i)return!1;for(let r=1;r<=n;r++)if(1!==e[n-r]&&e[n-r]!==t[i-r])return!1;return!0}},pt=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){let n=e.length;if(0===n)return[];let i=new Array(n),r=n-1;for(;r>=0;){if(e[r]%t==0){i[r]=e[r]/t;break}if(t%e[r]!=0)throw new Error("cannot convert shape");i[r]=1,t/=e[r],r--}for(r--;r>=0;r--)i[r]=e[r];return i}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let i=1;for(let r=t;r<n;r++){if(e[r]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=e[r]}return i}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let i=t-3;i>=0;--i)n[i]=n[i+1]*e[i+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,t??e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map(((e,i)=>e+t[i]+t[i+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}},ft=class e{static adjustPoolAttributes(e,t,n,i,r,a){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("dilations should be greater than or equal to 1")}else r.push(1);for(let e=0;e<2*n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[e]>=n[e]||a[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,i,r,a,o,s){if(s){if(a.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<t.length-2;u++)e.adjustPadAndReturnShape(t[u+(o?1:2)],n[u],i[u],r[u],a,u,u+t.length-2,s)}}static computePoolOutputShape(t,n,i,r,a,o,s){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return e.computeShapeHelper(t,n,u,i,r,a,o,s),u}static computeConvOutputShape(t,n,i,r,a,o,s){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[t[0],n[0]];return e.computeShapeHelper(!1,t,u,i,r,a,o,s),u}static computeShapeHelper(t,n,i,r,a,o,s,u){if(t)for(let e=0;e<n.length-2;e++)i.push(1);else for(let t=0;t<n.length-2;t++)i.push(e.adjustPadAndReturnShape(n[t+2],r[t],a[t],o[t],s,t,t+n.length-2,u))}static adjustPadAndReturnShape(e,t,n,i,r,a,o,s){let u=n*(i-1)+1;if(!s||"NOTSET"===s)return Math.floor((e+r[a]+r[o]-u)/t+1);switch(s){case"VALID":return r[a]=0,r[o]=0,Math.floor((e-u)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+i-e;return r[a]=Math.floor("SAME_LOWER"===s?(n+1)/2:n/2),r[o]=n-r[a],Math.floor((e+n-i)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},ht=class{static getShapeOfGemmResult(e,t,n,i,r){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let a,o,s;t?(a=e[1],o=e[0]):(a=e[0],o=e[1]);let u=-1;if(i?(s=n[0],u=1):(s=n[1],u=0),n[u]!==o)throw new Error("dimension mismatch");if(a<=0||s<=0||o<=0)throw new Error("invalid shape specified");if(r&&!ct.isValidBroadcast(r,[a,s]))throw new Error("gemm: invalid bias shape for broadcast");return[a,s,o]}},mt=-34028234663852886e22,gt=34028234663852886e22})),Us=D((()=>{zs(),Ns(),yt=64,vt=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},wt=(e,t=1)=>{let n=vt(e,t);return"string"==typeof n?n:n[0]},_t=(e,t=1)=>{let n=vt(e,t);return"string"==typeof n?n:n[1]},$t=(...e)=>{let t=[];return e.forEach((e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:pt.computeStrides(e)})})),t},bt=e=>e%4==0?4:e%2==0?2:1,xt=(e="f32",t,n="0")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,Ct=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}f(${n})`,St=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,Et=(e,t,n,i)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===i?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===i?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,It=(e,t,n,i,r)=>{let a="number"==typeof n,o=a?n:n.length,s=[...new Array(o).keys()],u=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,l=vt(t,r),d="string"==typeof l?l:l[1],c="string"==typeof l?l:l[0],p={indices:u,value:d,storage:c,tensor:t},f=e=>"string"==typeof e?e:`${e}u`,h={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},m=a?"uniforms.":"",g=`${m}${e}_shape`,y=`${m}${e}_strides`,v="";for(let e=0;e<o-1;e++)v+=`\n    let dim${e} = current / ${Et(y,e,o)};\n    let rest${e} = current % ${Et(y,e,o)};\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;v+=`indices[${o-1}] = current;`;let w=o<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${v}\n    return indices;\n  }`,_=[];if(o>=2)for(let e=o-1;e>=0;e--)_.push(`${Et(y,e,o)} * (indices[${e}])`);let $=o<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${_.join("+")};\n  }`,b=(...e)=>0===o?"0u":`${p.indices}(${e.map(f).join(",")})`,x=(e,t)=>o<2?`${e}`:`${Et(e,t,o)}`,C={},S=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),E=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),I=o<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${d} {\n    return ${E(`i2o_${e}(indices)`)};\n  }`,k=o<2?"":(()=>{let t=s.map((e=>`d${e}: u32`)).join(", "),n=s.map((e=>`d${e}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${d} {\n    return get_${e}ByIndices(${b(n)});\n  }`})(),T=o<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${d}) {\n    ${S(`i2o_${e}(indices)`,"value")}\n  }`,A=o<2?"":(()=>{let t=s.map((e=>`d${e}: u32`)).join(", "),n=s.map((e=>`d${e}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${d}) {\n    set_${e}ByIndices(${b(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return h.offsetToIndices&&(e.push(w),t=!0),h.indicesToOffset&&(e.push($),t=!0),h.broadcastedIndicesToOffset&&(Object.values(C).forEach((t=>e.push(t))),t=!0),h.set&&(e.push(A),t=!0),h.setByIndices&&(e.push(T),t=!0),h.get&&(e.push(k),t=!0),h.getByIndices&&(e.push(I),t=!0),!a&&t&&e.unshift(`const ${g} = ${p.indices}(${n.join(",")});`,`const ${y} = ${p.indices}(${pt.computeStrides(n).join(",")});`),e.join("\n")},type:p,offsetToIndices:t=>(h.offsetToIndices=!0,o<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(h.indicesToOffset=!0,o<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{h.broadcastedIndicesToOffset=!0;let i=`${n.name}broadcastedIndicesTo${e}Offset`;if(i in C)return`${i}(${t})`;let r=[];for(let e=o-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-o);r.push(`${x(y,e)} * (${t} % ${x(g,e)})`)}return C[i]=`fn ${i}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${r.length>0?r.join("+"):"0u"};\n           }`,`${i}(${t})`},indices:b,indicesGet:x,indicesSet:(e,t,n)=>o<2?`${e}=${n};`:`${Et(e,t,o)}=${n};`,set:(...t)=>{if(t.length!==o+1)throw new Error(`indices length must be ${o}`);let n=t[o];if("string"!=typeof n)throw new Error("value must be string");let i=t.slice(0,o).map(f).join(",");return 0===o?S("0u",n):1===o?S(i[0],n):(h.set=!0,h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}(${i}, ${n})`)},setByOffset:S,setByIndices:(t,n)=>o<2?S(t,n):(h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==o)throw new Error(`indices length must be ${o}`);let n=t.map(f).join(",");return 0===o?E("0u"):1===o?E(n[0]):(h.get=!0,h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:E,getByIndices:t=>o<2?E(t):(h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:i,name:e,strides:y,shape:g,rank:o}},kt=(e,t,n,i=1)=>It(e,t,n,"input",i),Tt=(e,t,n,i=1)=>It(e,t,n,"output",i),At=(e,t,n,i=1)=>It(e,t,n,"internal",i),Ot=class{constructor(e){this.normalizedDispatchGroup=e,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=yt){let t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],i="number"==typeof e?1:e[2],r=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${i})\n  fn main(${r?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${r?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*n*i}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",i=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${i}>;`}declareVariables(...e){return e.map((e=>this.declareVariable(e,this.variableIndex++))).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach((e=>this.registerInternalVariable(e))),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:i}of this.uniforms)if(i&&i>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(i/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(i/4)}>`);else{let r=null==i||1===i?n:`vec${i}<${n}>`;e.push(`${t}:${r}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map((e=>e.impl())).join("\n")+this.internalVariables.map((e=>e.impl())).join("\n")}},zt=e=>new Ot(e),Rt=(e,t)=>{let n=e.length,i=[];for(let r=0;r<n;r++){let a=n-1-r,o=e[a]||1;(t[t.length-1-r]||1)>1&&1===o&&i.unshift(a)}return i}})),Ws=D((()=>{zs(),Ns(),Ds(),Us(),jt=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.")},Mt=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Bt=(e,t)=>pt.sortBasedOnPerm(e,Mt(e.length,t)),Pt=(e,t,n,i)=>{let r=[];r.push(`fn perm(i: ${i.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let i=0;i<t;++i)r.push(n.indicesSet("a",e[i],`i[${i}]`));return r.push("return a;}"),r.join("\n")},Dt=(e,t)=>{let n=e.dataType,i=e.dims.length,r=Mt(i,t),a=Bt(e.dims,r),o=Tt("output",n,a.length),s=kt("a",n,i);return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:e=>{let t=pt.size(a);return{outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...$t(e[0].dims,a)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(s,o)}\n\n  ${Pt(r,i,s,o)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${o.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${o.setByOffset("global_idx",s.getByIndices("aIndices"))}\n  }`}},Nt=(e,t)=>{jt(e.inputs),e.compute(Dt(e.inputs[0],t.perm))},Ut=e=>lt({perm:e.perm})})),Ls=D((()=>{zs(),Ns(),Us(),Hs(),Ws(),Wt={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Lt={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ht={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Gt={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Vt=(e,t)=>{let n=[];for(let i=t-e;i<t;++i)n.push(i);return n},Ft=(e,t)=>{let n=[],i=e.length;for(let r=0;r<i;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]},qt=(e,t)=>{let n=e.length+t.length,i=[],r=0;for(let a=0;a<n;a++)-1===t.indexOf(a)?i.push(e[r++]):i.push(1);return i},Kt=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},Yt=(e,t)=>{let n=[];if(!Kt(e,t)){for(let i=0;i<t;++i)-1===e.indexOf(i)&&n.push(i);e.forEach((e=>n.push(e)))}return n},Zt=(e,t,n,i,r,a,o)=>{let s=n[0].dims,u=pt.size(a),l=pt.size(o),d=kt("_A",n[0].dataType,s),c=Tt("output",r,a),p=`\n          var<workgroup> aBestValues : array<${c.type.storage}, 32>;\n       `;return{name:e,shaderCache:t,getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(d,c)}\n        ${p}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(32)}\n\n          let outputIndex = global_idx / 32;\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${c.type.storage}(${Ht[i]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + 32) {\n           let candidate = ${c.type.storage}(${d.getByOffset("offset + k")});\n           bestValue = ${Wt[i]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, 32u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Lt[i]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${c.setByOffset("outputIndex",""+("mean"===i?`bestValue / ${c.type.storage}(uniforms.reduceSize)`:`${Gt[i]}`))};\n         }\n        }`,getRunData:()=>({outputs:[{dims:a,dataType:r}],dispatchGroup:{x:u},programUniforms:[{type:12,data:l}]})}},Qt=(e,t,n,i)=>{let r=1===e.inputs.length?n:pn(e.inputs,n),a=r.axes;0===a.length&&!r.noopWithEmptyAxes&&(a=e.inputs[0].dims.map(((e,t)=>t)));let o=pt.normalizeAxes(a,e.inputs[0].dims.length),s=o,u=e.inputs[0],l=Yt(s,e.inputs[0].dims.length);l.length>0&&(u=e.compute(Dt(e.inputs[0],l),{inputs:[0],outputs:[-1]})[0],s=Vt(s.length,u.dims.length));let[d,c]=Ft(u.dims,s),p=d;r.keepDims&&(p=qt(d,o)),e.compute(Zt(t,{hint:r.cacheKey,inputDependencies:["type"]},[u],i,e.inputs[0].dataType,p,c),{inputs:[u]})},Jt=(e,t)=>{Qt(e,"ReduceMeanShared",t,"mean")},Xt=(e,t)=>{Qt(e,"ReduceL1Shared",t,"l1")},en=(e,t)=>{Qt(e,"ReduceL2Shared",t,"l2")},tn=(e,t)=>{Qt(e,"ReduceLogSumExpShared",t,"logSumExp")},nn=(e,t)=>{Qt(e,"ReduceMaxShared",t,"max")},rn=(e,t)=>{Qt(e,"ReduceMinShared",t,"min")},an=(e,t)=>{Qt(e,"ReduceProdShared",t,"prod")},on=(e,t)=>{Qt(e,"ReduceSumShared",t,"sum")},sn=(e,t)=>{Qt(e,"ReduceSumSquareShared",t,"sumSquare")},un=(e,t)=>{Qt(e,"ReduceLogSumShared",t,"logSum")}})),Hs=D((()=>{zs(),Ns(),Ds(),Us(),Ls(),ln=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},dn=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],cn=(e,t,n,i,r,a,o=!1,s=!1)=>{let u=[],l=n[0].dims,d=l.length,c=pt.normalizeAxes(r,d),p=!s&&0===c.length;l.forEach(((e,t)=>{p||c.indexOf(t)>=0?o&&u.push(1):u.push(e)}));let f=u.length,h=pt.size(u);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],r=kt("_A",n[0].dataType,d),s=Tt("output",a,f),u=i(r,s,c),h=u[2];for(let e=0,n=0;e<d;e++)p||c.indexOf(e)>=0?(o&&n++,h=`for(var j${e}: u32 = 0; j${e} < ${l[e]}; j${e}++) {\n                  ${u[2].includes("last_index")?`let last_index = j${e};`:""}\n                  ${r.indicesSet("input_indices",e,`j${e}`)}\n                  ${h}\n                }`):(t.push(`${r.indicesSet("input_indices",e,s.indicesGet("output_indices",n))};`),n++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(r,s)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${r.type.indices};\n          let output_indices = ${s.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${u[0]}       // init ops for reduce max/min\n          ${u[1]}\n          ${h}\n          ${u[3]}\n          ${4===u.length?s.setByOffset("global_idx","value"):u.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:u,dataType:a}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},...$t(l,u)]})}},pn=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),lt({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},fn=(e,t,n,i)=>{let r=e.inputs,a=1===r.length?n:pn(r,n);e.compute(cn(t,{hint:a.cacheKey,inputDependencies:["rank"]},[r[0]],a.noopWithEmptyAxes&&0===a.axes.length?dn:i,a.axes,r[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},hn=(e,t)=>{ln(e.inputs),fn(e,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"]))},mn=(e,t)=>{ln(e.inputs),fn(e,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""]))},gn=(e,t)=>{ln(e.inputs),fn(e,"ReduceL2",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"]))},yn=(e,t)=>{ln(e.inputs),fn(e,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"]))},vn=(e,t)=>{ln(e.inputs),fn(e,"ReduceMax",t,((e,t,n)=>{let i=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&i.push(e.indicesSet("input_indices",t,0));return[`${i.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]}))},wn=(e,t)=>{ln(e.inputs),fn(e,"ReduceMean",t,((t,n,i)=>{let r=1;for(let n=0;n<t.rank;n++)(i.indexOf(n)>=0||0===i.length)&&(r*=e.inputs[0].dims[n]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${r});`]}))},_n=(e,t)=>{ln(e.inputs),fn(e,"ReduceMin",t,((e,t,n)=>{let i=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&i.push(`input_indices[${t}] = 0;`);return[`${i.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]}))},$n=(e,t)=>{ln(e.inputs),fn(e,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""]))},bn=(e,t)=>{ln(e.inputs),fn(e,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""]))},xn=(e,t)=>{ln(e.inputs),fn(e,"ReduceSumSquare",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""]))},Cn=(e,t,n)=>{if(0===t.length)return n;let i=1,r=1;for(let n=0;n<t.length;n++)-1===t.indexOf(n)?i*=e[n]:r*=e[n];return r<32&&i>1024},Sn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wn(e,t):Jt(e,t)},En=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?mn(e,t):Xt(e,t)},In=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gn(e,t):en(e,t)},kn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yn(e,t):tn(e,t)},Tn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vn(e,t):nn(e,t)},An=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_n(e,t):rn(e,t)},On=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$n(e,t):an(e,t)},zn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bn(e,t):on(e,t)},Rn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xn(e,t):sn(e,t)},jn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?hn(e,t):un(e,t)}})),Gs=D((()=>{zs(),Ds(),Hs(),Mn=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},Bn=(e,t)=>{Mn(e.inputs);e.compute(cn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,i)=>{let r=[];for(let t=0;t<e.rank;t++)(i.indexOf(t)>=0||0===i.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Pn=(e,t)=>{Mn(e.inputs);e.compute(cn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,i)=>{let r=[];for(let t=0;t<e.rank;t++)(i.indexOf(t)>=0||0===i.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Dn=e=>lt(e)})),Vs=D((()=>{zs(),Bs(),Us(),Nn=(e,t)=>{let n=e[0],i=e[1],r=e[2],a=e[3],o=e[4],s=e[5];if(o&&s)throw new Error("Attention cannot have both past and relative_position_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(1!==r.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==i.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(i.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(r.dims[0]!==i.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=r.dims[0]/3,p=c,f=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],f=t.qkvHiddenSizes[2]}let h=l;if(c!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(r.dims[0]!==c+p+f)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let m=0;if(o){if(p!==f)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==o.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==o.dims[0])throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==p/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(m=o.dims[3])}let g=h+m;if(a)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(s)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:m,kvSequenceLength:h,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:d,hiddenSize:c,vHiddenSize:f,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(f/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Un=(e,t,n,i)=>{let r=bt(i),a=64,o=i/r;o<a?a=1:o/8<64&&(a=Math.ceil(o/8));let s=Math.ceil(i/r/a),u=[{type:t.dataType,data:1/i},{type:12,data:o},{type:12,data:s}],l=wt(t.dataType,r);e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${a};${l};${r}`},getShaderSource:e=>{let n=Tt("x",t.dataType,t.dims,r),i="thread_max_vector";2===r?i="max(thread_max_vector.x, thread_max_vector.y)":4===r&&(i="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let o=_t(t.dataType),s=[{name:"d_inv",type:o},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${a}>;\n  var<workgroup> wgSum: array<f32, ${a}>;\n  ${e.registerUniforms(s).declareVariables(n)}\n  ${e.mainStart([a,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${xt("f32",r,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${Ct(o,r,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${i};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${a}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${xt("f32",r,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${Ct(o,r,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${St("sumVector",r)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${a}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${xt(o,r,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${Ct(o,r,"x[offset + i]")};\n        x[offset + i] = ${n.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:u})},{inputs:[t],outputs:[]})},Wn=(e,t,n,i,r,a)=>{let o=[r.batchSize,r.numHeads,r.sequenceLength,r.kvSequenceLength+r.pastSequenceLength],s=0===a.scale?1/Math.sqrt(r.headSize):a.scale,u=bt(r.headSize),l=r.headSize/u,d=12,c={x:Math.ceil(r.totalSequenceLength/d),y:Math.ceil(r.sequenceLength/d),z:r.batchSize*r.numHeads},p=[{type:12,data:r.sequenceLength},{type:12,data:l},{type:12,data:r.totalSequenceLength},{type:12,data:r.kvSequenceLength},{type:t.dataType,data:s}],f=[t,n],h=e.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:p}),getShaderSource:e=>{let i=kt("q",t.dataType,t.dims,u),r=kt("key",n.dataType,n.dims,u),a=Tt("output",t.dataType,o),s=wt(t.dataType),l=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:s}];return`\n  const beta: ${s} = 1.0;\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${i.type.storage}, 144>;\n  var<workgroup> tileK: array<${i.type.storage}, 144>;\n  ${e.registerUniforms(l).declareVariables(i,r,a)}\n  ${e.mainStart([d,d,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${xt(s,u)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${St("value",u)} * uniforms.alpha;\n    }\n  }`}},{inputs:f,outputs:[-1]})[0];return Un(e,h,r.batchSize*r.numHeads*r.sequenceLength,r.totalSequenceLength),h},Ln=(e,t,n,i)=>{let r=[i.batchSize,i.sequenceLength,i.vHiddenSize],a=12,o={x:Math.ceil(i.vHeadSize/a),y:Math.ceil(i.sequenceLength/a),z:i.batchSize*i.numHeads},s=[{type:12,data:i.sequenceLength},{type:12,data:i.totalSequenceLength},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.vHiddenSize}];return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:t.dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:s}),getShaderSource:e=>{let i=kt("probs",t.dataType,t.dims),o=kt("v",n.dataType,n.dims),s=Tt("output",t.dataType,r);return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${i.type.value}, 144>;\n  var<workgroup> tileK: array<${i.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}]).declareVariables(i,o,s)}\n  ${e.mainStart([a,a,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${i.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}},{inputs:[t,n],outputs:[0]})[0]},Hn=(e,t,n,i,r,a,o,s,u,l,d)=>{let c=Wn(e,t,n,0,l,d);Ln(e,c,i,l)},Gn=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],i=t.sequenceLength,r=t.inputHiddenSize,a=t.headSize,o=12,s={x:Math.ceil(t.headSize/o),y:Math.ceil(t.sequenceLength/o),z:t.batchSize*t.numHeads},u=[e.inputs[0],e.inputs[1],e.inputs[2]],l=[{type:12,data:i},{type:12,data:r},{type:12,data:a},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:l}),getShaderSource:e=>{let t=Tt("output_q",u[0].dataType,n),i=Tt("output_k",u[0].dataType,n),r=Tt("output_v",u[0].dataType,n),a=kt("input",u[0].dataType,u[0].dims),s=kt("weight",u[1].dataType,u[1].dims),l=kt("bias",u[2].dataType,u[2].dims),d=a.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${d}, 144>;\n  var<workgroup> tileWeightQ: array<${d}, 144>;\n  var<workgroup> tileWeightK: array<${d}, 144>;\n  var<workgroup> tileWeightV: array<${d}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(a,s,l,t,i,r)}\n  ${e.mainStart([o,o,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${d}(0);\n    var valueK = ${d}(0);\n    var valueV = ${d}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:u,outputs:[-1,-1,-1]})},Vn=(e,t)=>{let n=Nn(e.inputs,t),[i,r,a]=Gn(e,n);return Hn(e,i,r,a,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n,t)}})),Fs=D((()=>{oe(),zs(),Ns(),Ds(),Us(),Fn=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let i=t.length;if(i!==e.length)throw new Error(`${n}: num dimensions != ${i}`);t.forEach(((t,i)=>{if(t!==e[i])throw new Error(`${n}: dim[${i}] do not match`)}))};if(e[0].dims.length>1){let i="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,i,"Invalid input scale"),n(e[2].dims,i,"Invalid input B"),n(e[3].dims,i,"Invalid input mean"),n(e[4].dims,i,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},qn=(e,t)=>{let{epsilon:n,spatial:i,format:r}=t,a=e[0].dims,o=i?bt(a[a.length-1]):1,s="NHWC"===r&&a.length>1?o:1,u=pt.size(a)/o,l=i,d=l?a.length:a,c=kt("x",e[0].dataType,e[0].dims,o),p=kt("scale",e[1].dataType,e[1].dims,s),f=kt("bias",e[2].dataType,e[2].dims,s),h=kt("inputMean",e[3].dataType,e[3].dims,s),m=kt("inputVar",e[4].dataType,e[4].dims,s),g=Tt("y",e[0].dataType,d,o);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${i}_${o}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(c,p,f,h,m,g)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${g.offsetToIndices(`global_idx * ${o}`)};\n    ${(()=>{let e="";if(i)e=`let cOffset = ${1===a.length?"0u":"NHWC"===r?`outputIndices[${a.length-1}] / ${o}`:"outputIndices[1]"};`;else if("NCHW"===r)e=`\n            ${g.indicesSet("outputIndices","0","0")}\n            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${p.type.indices}(0);\n                       cIndices[0] = outputIndices[${a.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${p.getByOffset("cOffset")};\n    let bias = ${f.getByOffset("cOffset")};\n    let inputMean = ${h.getByOffset("cOffset")};\n    let inputVar = ${m.getByOffset("cOffset")};\n    let x = ${c.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${g.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:12,data:u},...$t(a)]:[{type:12,data:u}]})}},Kn=e=>lt(e),Yn=(e,t)=>{let{inputs:n,outputCount:i}=e,r=Kn({...t,outputCount:i});if(d.webgpu.validateInputContent&&Fn(n,r),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(qn(n,r))}})),qs=D((()=>{Ns(),Us(),Zn=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Qn=e=>{let t=e[0].dims,n=e[0].dims[2],i=pt.size(t)/4,r=e[0].dataType,a=kt("input",r,t,4),o=kt("bias",r,[n],4),s=kt("residual",r,t,4),u=Tt("output",r,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(a,o,s,u)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n    let value = ${a.getByOffset("global_idx")}\n      + ${o.getByOffset("global_idx % channels")} + ${s.getByOffset("global_idx")};\n    ${u.setByOffset("global_idx","value")}\n  }`}},Jn=e=>{Zn(e.inputs),e.compute(Qn(e.inputs))}})),Ks=D((()=>{zs(),Ns(),Ds(),Us(),Xn=(e,t,n,i,r,a)=>{let o=Math.ceil(t/4),s="";s="string"==typeof r?`${r}(a)`:r("a");let u=kt("inputData",n,[o],4),l=Tt("outputData",i,[o],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(u,l)}\n\n  ${a??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${u.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx",s)}\n  }`},ei=(e,t,n,i,r,a=e.dataType)=>({name:t,shaderCache:{hint:r,inputDependencies:["type"]},getShaderSource:t=>Xn(t,pt.size(e.dims),e.dataType,a,n,i),getRunData:t=>({outputs:[{dims:e.dims,dataType:a}],dispatchGroup:{x:Math.ceil(pt.size(t[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(pt.size(e.dims)/4)}]})}),ti=e=>{e.compute(ei(e.inputs[0],"Abs","abs"))},ni=e=>{e.compute(ei(e.inputs[0],"Acos","acos"))},ii=e=>{e.compute(ei(e.inputs[0],"Acosh","acosh"))},ri=e=>{e.compute(ei(e.inputs[0],"Asin","asin"))},ai=e=>{e.compute(ei(e.inputs[0],"Asinh","asinh"))},oi=e=>{e.compute(ei(e.inputs[0],"Atan","atan"))},si=e=>{e.compute(ei(e.inputs[0],"Atanh","atanh"))},ui=e=>lt(e),li=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(ei(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},di=e=>{let t=e.length>=2&&0!==e[1].data?e[1].getFloat32Array()[0]:mt,n=e.length>=3&&0!==e[2].data?e[2].getFloat32Array()[0]:gt;return lt({min:t,max:n})},ci=(e,t)=>{let n=1===e.inputs.length?t:di(e.inputs),i=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\n    const clip_min_: vec4<${i}> = vec4(${i}(${n.min}));\n    const clip_max_: vec4<${i}> = vec4(${i}(${n.max}));\n`,n.cacheKey),{inputs:[0]})},pi=e=>{e.compute(ei(e.inputs[0],"Ceil","ceil"))},fi=e=>{e.compute(ei(e.inputs[0],"Cos","cos"))},hi=e=>{e.compute(ei(e.inputs[0],"Cosh","cosh"))},mi=e=>lt(e),gi=(e,t)=>{let n=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},yi=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,vi=e=>{let t=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),yi(t)))},wi=e=>{e.compute(ei(e.inputs[0],"Exp","exp"))},_i=e=>{e.compute(ei(e.inputs[0],"Floor","floor"))},$i=e=>{let t=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),yi(t)))},bi=(e,t)=>{let n=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`),`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},xi=e=>{e.compute(ei(e.inputs[0],"Not",(e=>`!${e}`)))},Ci=e=>{e.compute(ei(e.inputs[0],"Neg",(e=>`-${e}`)))},Si=e=>{e.compute(ei(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},Ei=e=>{let t=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"Relu",(e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`)))},Ii=e=>{e.compute(ei(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},ki=e=>lt(e),Ti=(e,t)=>{let n=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"HardSigmoid",(e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`),void 0,t.cacheKey))},Ai=e=>{e.compute(ei(e.inputs[0],"Sin","sin"))},Oi=e=>{e.compute(ei(e.inputs[0],"Sinh","sinh"))},zi=e=>{e.compute(ei(e.inputs[0],"Sqrt","sqrt"))},Ri=e=>{e.compute(ei(e.inputs[0],"Tan","tan"))},ji=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Mi=e=>{e.compute(ei(e.inputs[0],"Tanh",ji))},Bi=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${ji("v")};\n}\n`,Pi=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Di=e=>{let t=_t(e.inputs[0].dataType);e.compute(ei(e.inputs[0],"FastGelu",Pi,Bi(t),void 0,e.inputs[0].dataType))},Ni=(e,t)=>{let n=_t(e.inputs[0].dataType);return e.compute(ei(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},Ui=e=>{e.compute(ei(e.inputs[0],"Log","log"))}})),Ys=D((()=>{Ns(),Us(),Ks(),Wi=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Li=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=kt("input",e[0].dataType,e[0].dims,4),i=kt("bias",e[0].dataType,[e[0].dims[2]],4),r=Tt("output",e[0].dataType,t,4),a=pt.size(t)/4,o=wt(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,i,r)}\n\n  ${yi(o)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${r.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Hi=e=>{Wi(e.inputs),e.compute(Li(e.inputs))}})),Zs=D((()=>{zs(),Ns(),Us(),Gi=(e,t,n,i,r,a,o,s,u,l,d,c)=>{let p,f;"string"==typeof s?p=f=(e,t)=>`${s}((${e}),(${t}))`:"function"==typeof s?p=f=s:(p=s.scalar,f=s.vector);let h,m=Tt("outputData",d,i.length,4),g=kt("aData",u,t.length,4),y=kt("bData",l,n.length,4);if(r)if(a){let e=1===pt.size(t),i=1===pt.size(n),r=t.length>0&&t[t.length-1]%4==0,a=n.length>0&&n[n.length-1]%4==0;h=e||i?m.setByOffset("global_idx",f(e?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"),i?`${y.type.value}(${y.getByOffset("0")}.x)`:y.getByOffset("global_idx"))):`\n            let outputIndices = ${m.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${g.broadcastedIndicesToOffset("outputIndices",m)};\n            let offsetB = ${y.broadcastedIndicesToOffset("outputIndices",m)};\n            ${m.setByOffset("global_idx",f(o||r?g.getByOffset("offsetA / 4u"):`${g.type.value}(${g.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||a?y.getByOffset("offsetB / 4u"):`${y.type.value}(${y.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else h=m.setByOffset("global_idx",f(g.getByOffset("global_idx"),y.getByOffset("global_idx")));else{if(!a)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=(e,t,n="")=>{let i=`aData[indexA${t}][componentA${t}]`,r=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${m.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let offsetB${t} = ${y.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${p(i,r)});\n          `};h=9===d?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(g,y,m)}\n\n        ${c??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},Vi=(e,t,n,i,r,a,o=n.dataType)=>{let s=!pt.areEqual(n.dims,i.dims),u=n.dims,l=pt.size(n.dims),d=!1,c=!1,p=[s];if(s){let e=ct.calcShape(n.dims,i.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");u=e,l=pt.size(u);let t=1===pt.size(n.dims),r=1===pt.size(i.dims),a=n.dims.length>0&&n.dims[n.dims.length-1]%4==0,o=i.dims.length>0&&i.dims[i.dims.length-1]%4==0;p.push(t),p.push(r),p.push(a),p.push(o);let s=1;for(let e=1;e<u.length;e++){let t=n.dims[n.dims.length-e]??1;if(t!==(i.dims[i.dims.length-e]??1))break;s*=t}s%4==0?(c=!0,d=!0):(t||r||a||o)&&(d=!0)}else d=!0;return p.push(d),{name:e,shaderCache:{hint:t+p.map((e=>e.toString())).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>Gi(e,n.dims,i.dims,u,d,s,c,r,n.dataType,i.dataType,o,a),getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:Math.ceil(pt.size(u)/4)},...$t(n.dims,i.dims,u)]})}},Fi=(e,t,n,i,r,a)=>{e.compute(Vi(t,r??"",e.inputs[0],e.inputs[1],n,i,a))},qi=e=>{Fi(e,"Add",((e,t)=>`${e}+${t}`))},Ki=e=>{Fi(e,"Div",((e,t)=>`${e}/${t}`))},Yi=e=>{Fi(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},Zi=e=>{Fi(e,"Mul",((e,t)=>`${e}*${t}`))},Qi=e=>{let t=kt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Fi(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Ji=e=>{Fi(e,"Sub",((e,t)=>`${e}-${t}`))},Xi=e=>{Fi(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},er=e=>{Fi(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},tr=e=>{Fi(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},nr=e=>{Fi(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}})),Qs=D((()=>{zs(),Ns(),Ds(),Us(),ir=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,n=e[0].dims.length;for(let i of e){if(i.dataType!==t)throw new Error("input tensors should be one type");if(i.dims.length!==n)throw new Error("input tensors should have the same shape")}},rr=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,ar=(e,t)=>{let n=e.length,i=[];for(let r=0;r<n;++r){let a=t.setByOffset("global_idx",e[r].getByIndices("indices"));1===n?i.push(a):0===r?i.push(`if (inputIndex == ${r}u) { ${a} }`):r===n-1?i.push(`else { ${a} }`):i.push(`else if (inputIndex == ${r}) { ${a} }`)}return i.join("\n")},or=(e,t)=>{let n=e[0].dims.slice();if(t>=n.length||t<-1*n.length)throw new Error("axis specified for concat doesn't match input dimensionality");let i=t<0?n.length+t:t,r=n.slice(0);for(let t=1;t<e.length;t++){let a=e[t].dims.slice();for(let e=0;e<n.length;e++)if(e===i)r[i]+=a[e];else if(n[e]!==a[e])throw new Error("non concat dimensions must match")}let a=pt.size(r),o=new Array(e.length),s=new Array(e.length),u=e[0].dataType,l=0,d=[],c=[],p=[{type:12,data:a}];for(let t=0;t<e.length;++t)l+=e[t].dims[i],o[t]=l,c.push(e[t].dims.length),s[t]=kt(`input${t}`,u,c[t]),d.push("rank"),p.push({type:12,data:o[t]});for(let t=0;t<e.length;++t)p.push(...$t(e[t].dims));p.push(...$t(r));let f=Tt("output",u,r.length),h=f.indicesGet("indices",i),m=Array.from(Array(o.length).keys()).map((e=>`uniforms.sizeInConcatAxis${e}`)).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...s,f)})()}\n\n  ${rr(o.length,m)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${f.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${h});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${o.length}u>(${m});\n      ${h} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${ar(s,f)}\n  }`}},sr=(e,t)=>{ir(e.inputs);let n=e.inputs.filter((e=>pt.size(e.dims)>0));e.compute(or(n,t.axis),{inputs:n})},ur=e=>lt({axis:e.axis})})),Js=D((()=>{zs(),Ns(),lr=(e,t,n="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},dr=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},cr=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},pr=e=>{let t=e?.activation||"";if("HardSigmoid"===t){let[n,i]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:i}}if("Clip"===t){let[n,i]=e?.activation_params||[mt,gt];return{activation:t,clipMax:i,clipMin:n}}if("LeakyRelu"===t){let[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}})),Xs=D((()=>{fr=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},hr=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `})),eu=D((()=>{mr=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`})),tu=D((()=>{zs(),Ns(),Us(),Js(),Xs(),gr=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,yr=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,vr=(e,t,n="f32",i,r=!1,a=32,o=!1,s=32)=>{let u=t[1]*e[1],l=t[0]*e[0],d=r?u:a,c=r?a:u,p=d/t[0],f=a/t[1];if((!r||4!==p||4!==e[1])&&(r||3!==p&&4!==p)||d%t[0]!=0||a%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${r} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${d/p}>, ${c}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/e[0]}>, ${a}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${a};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${o?"0":"i32(globalId.z)"};\n  ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${u};\n\n  let num_tiles = ${o?`${Math.ceil(s/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${f};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${gr(r,i)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${i?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${yr(r,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},wr=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,_r=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",$r=(e,t,n="f32",i,r=!1,a=32,o=!1,s=32,u=!1)=>{let l=e[1]*t[1],d=e[0]*t[0],c=r?l:a,p=r?a:l;if(p%t[1]!=0||c%t[0]!=0||a%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);let f=p/t[1],h=c/t[0],m=a/t[1],g=u?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${l};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${wr(r,i)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${i?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${l};\n\nlet tileRowA = i32(localId.y) * ${f};\nlet tileColA = i32(localId.x) * ${h};\nlet tileRowB = i32(localId.y) * ${m};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${h}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${wr(r,i)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${i?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${_r(r)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${p}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${a}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${a};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${o?"0":"i32(globalId.z)"};\n    ${i?`let batchIndices = ${i.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${o?`${Math.ceil(s/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${g}\n  }\n`},br=(e,t,n,i,r,a=!1)=>{let[o,s,u]=r,[l,d,c,p]=i,f=Rt(o,u),h=Rt(s,u),m=wt(i[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${fr(e,m)} {\n      var value = ${fr(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${(()=>{let e=d.rank,t=l.rank,n=`var aIndices: ${d.type.indices};`;for(let i=e-2-1,r=t-1;i>=0;i--,r--)n+=`\naIndices[${i}] = ${t>1?`batchIndices[${r}]`:"batchIndices"};`;return f.forEach((e=>{n+=`\naIndices[${e}] = 0;`})),n+=`\naIndices[${e-2}] = u32(row);\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${fr(e,m)} {\n      var value = ${fr(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${(()=>{let e=c.rank,t=l.rank,n=`var bIndices: ${c.type.indices};`;for(let i=e-2-1,r=t-1;i>=0;i--,r--)n+=`\nbIndices[${i}] = ${t>1?`batchIndices[${r}]`:"batchIndices"};`;return h.forEach((e=>{n+=`\nbIndices[${e}] = 0;`})),n+=`\nbIndices[${e-2}] = u32(row);\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${c.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${fr(e,m)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${a?"bias[colIn]":`${fr(e,m)}(bias[row])`};`:""}\n        ${n}\n        ${p.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},xr=(e,t,n,i,r=!1)=>{let a=e[0].dims,o=e[1].dims,s=a.slice(0,-2),u=o.slice(0,-2),l=i?i.slice(0,-2):n.slice(0,-2),d=pt.size(l),c=a[a.length-2],p=a[a.length-1],f=o[o.length-1],h=p%4==0&&f%4==0,m=c<=8?[4,1,1]:[4,4,1],g=[8,8,1],y=[Math.ceil(f/g[0]/m[0]),Math.ceil(c/g[1]/m[1]),Math.ceil(d/g[2]/m[2])],v=h?4:1,w=[...s,c,p/v],_=w.length,$=[...u,p,f/v],b=$.length,x=[d,c,f/v],C=[{type:6,data:c},{type:6,data:f},{type:6,data:p}];dr(t,C),C.push(...$t(l,w,$));let S=["rank","rank"],E=e.length>2;E&&(C.push(...$t(e[2].dims)),S.push("rank")),C.push(...$t(x));return{name:"MatMul",shaderCache:{hint:`${m};${t.activation};${h};${r}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:C}),getShaderSource:n=>{let i=l.length,a=At("batchDims",e[0].dataType,i,1),o=wt(e[0].dataType),d=kt("a",e[0].dataType,_,v),c=kt("b",e[1].dataType,b,v),p=Tt("result",e[0].dataType,x.length,v),f=[d,c];if(E){let t=r?v:1;f.push(kt("bias",e[2].dataType,e[2].dims.length,t))}let y=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];cr(t,y);let w=wt(p.type.tensor),$=lr(t,p.type.value,w),C=br(v,E,$,[a,d,c,p],[s,u,l],r);return`\n  ${n.registerUniforms(y).registerInternalVariables(a).declareVariables(...f,p)}\n  ${C}\n  ${h?vr(m,g,o,a):$r(m,g,o,a)}\n                   `}}}})),nu=D((()=>{zs(),js(),Us(),Js(),Xs(),eu(),tu(),Cr=(e,t,n,i,r=!1,a,o=4,s=4,u=4,l="f32")=>{let d=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",c=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",f=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",h=e?"row":"col",m=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${h} / outWidth;\n    let outCol = ${h} % outWidth;\n\n    let WRow = ${m} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${m} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${m} % inChannels;\n    var resData = ${fr(o,l)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${f}) {\n      ${d}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}\n    }\n    return resData;`,y=e?t&&i?`\n    let col = colIn * ${o};\n    ${g}`:`\n    let col = colIn * ${o};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${fr(o,l)}(0.0);`:i&&n?`\n    let col = colIn * ${o};\n    ${g}`:`\n    let col = colIn * ${o};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${fr(o,l)}(0.0);`,v=`${(e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(s)}`,w=fr(u,l),_=fr(e?o:s,l),$=fr(e?s:o,l),b=lr(a,w,l);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${_} {\n      ${e?y:v}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${$} {\n      ${e?v:y}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\n      let col = colIn * ${u};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${hr(r)}\n      ${b}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Sr=(e,t,n,i,r,a,o,s)=>{let u="NHWC"===t.format,l=u?e[0].dims[3]:e[0].dims[1],d=n[0],c=u?n[2]:n[3],p=u?n[1]:n[2],f=u?n[3]:n[1],h=u&&(l%4==0||l%3==0)&&f%4==0,m=u?f:c*p,g=u?c*p:f,y=[8,8,1],v=i<=8?[4,1,1]:[4,4,1],w=[Math.ceil(m/y[0]/v[0]),Math.ceil(g/y[1]/v[1]),Math.ceil(d/y[2]/v[2])];et("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${w}`));let _=h?u&&l%4!=0?3:4:1,$=y[1]*v[1],b=y[0]*v[0],x=Math.max(y[0]*_,y[1]),C=i%$==0,S=r%b==0,E=a%x==0,I=h?[_,4,4]:[1,1,1],k=[{type:6,data:i},{type:6,data:r},{type:6,data:a},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];dr(t,k),k.push(...$t(e[0].dims,e[1].dims));let T=["rank","rank"];o&&(k.push(...$t(e[2].dims)),T.push("rank")),k.push(...$t(n));return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${_};${h};${C};${S};${E};${$};${b};${x}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:k}),getShaderSource:i=>{let r=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];cr(t,r);let a=h?4:1,l=wt(e[0].dataType),d=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${h?`vec4<${l}>`:l}) {\n        result[flatIndex] = ${h?`vec4<${l}>`:l}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${h?`vec4<${l}>`:l}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${h?"/ 4":""}, value);\n      }`,c=[kt("x",e[0].dataType,e[0].dims.length,3===_?1:_),kt("w",e[1].dataType,e[1].dims.length,a)],p=Tt("result",e[0].dataType,n.length,a);if(o){let t=kt("bias",e[2].dataType,e[2].dims.length,a);c.push(t),d+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${h?`vec4<${l}>`:l} {\n          return bias[coords.${u?"w":"y"}${h?"/ 4":""}];\n        }`}return`\n        ${mr("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${i.registerUniforms(r).declareVariables(...c,p)}\n        ${d}\n        ${Cr(u,C,S,E,o,t,I[0],I[1],I[2],l)}\n        ${h?vr(v,y,l,void 0,!u,x):$r(v,y,l,void 0,!u,x,!1,void 0,s)}`}}}})),iu=D((()=>{zs(),Ns(),Us(),au(),Js(),Er=(e,t,n)=>{let i=e.length>2,r=i?"value += b[output_channel];":"",a=e[0].dims,o=e[1].dims,s=o[0]/t.group,u="NHWC"===t.format,l=Ar(a,o,t.dilations,t.pads,t.strides,u),d=pt.size(l),c=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:s}];dr(t,c),c.push(...$t(a,o,l));let p=["rank","rank"];i&&(c.push(...$t(e[2].dims)),p.push("rank")),c.push(...$t(l));return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:p},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:n=>{let s=Tt("output",e[0].dataType,l.length),d=wt(s.type.tensor),c=lr(t,s.type.value,d),p=kt("x",e[0].dataType,a.length),f=kt("w",e[1].dataType,o.length),h=[p,f];i&&h.push(kt("b",e[2].dataType,e[2].dims));let m=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return cr(t,m),`\n  ${n.registerUniforms(m).declareVariables(...h,s)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${s.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${u?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${s.type.value} = ${s.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${u?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${u?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${u?p.get("batch","xHeight","xWidth","input_channel"):p.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${f.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${r}\n    ${c}\n    ${s.setByOffset("global_idx","value")}\n  }`}}}})),ru=D((()=>{zs(),Ns(),tu(),Us(),Js(),Ir=(e,t,n,i,r=!1)=>{let a=e[0].dims,o=e[1].dims,s=a[a.length-2],u=o[o.length-1],l=a[a.length-1],d=bt(u),c=bt(l),p=bt(s),f=pt.size(n)/d/p,h=e.length>2,m=i?i.slice(0,-2):n.slice(0,-2),g=[pt.size(m),s,u],y=[{type:12,data:f},{type:12,data:s},{type:12,data:u},{type:12,data:l}];dr(t,y),y.push(...$t(m,a,o)),h&&y.push(...$t(e[2].dims)),y.push(...$t(g));return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${c};${p};${r}`,inputDependencies:h?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:y}),getShaderSource:i=>{let s=At("batch_dims",e[0].dataType,m.length),u=kt("a",e[0].dataType,a.length,c),l=kt("b",e[1].dataType,o.length,d),f=Tt("output",e[0].dataType,g.length,d),y=wt(f.type.tensor),v=lr(t,f.type.value,y),w=[u,l],_="";if(h){let t=r?d:1;w.push(kt("bias",e[2].dataType,e[2].dims.length,t)),_=""+(r?`value += bias[col / ${t}];`:`value += ${f.type.value}(bias[row + i]);`)}let $=a.slice(0,-2),b=o.slice(0,-2),x=Rt($,m),C=Rt(b,m),S=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];cr(t,S);let E=(e,t)=>{let n=e.rank,i=e.name;if(2===n)return`var ${i}_indices = ${e.type.indices}(0u, 0u);`;let r=s.rank,a=`var ${i}_indices: ${e.type.indices};`;for(let e=n-2-1,t=r-1;e>=0;e--,t--)a+=`\n${i}_indices[${e}] = ${r>1?`batch_indices[${t}]`:"batch_indices"};`;return t.forEach((e=>{a+=`\n${i}_indices[${e}] = 0;`})),a+=`${i}_indices[${n-2}] = 0u;\n                     ${i}_indices[${n-1}] = 0u;`,a};return`\n  ${i.registerUniforms(S).registerInternalVariables(s).declareVariables(...w,f)}\n  ${i.mainStart()}\n    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${p};\n    let row = (index1 % stride1) * ${p};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${s.offsetToIndices("batch")};`}\n    ${E(u,x)}\n    let a_offset = ${u.indicesToOffset("a_indices")};\n    ${E(l,C)}\n    let b_offset = ${l.indicesToOffset("b_indices")};\n    var values: array<${f.type.value}, ${p}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${c}) {\n      ${(()=>{let e=`var a_data: ${u.type.value};`;for(let t=0;t<c;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${d}];`;for(let t=0;t<p;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${c}];`;for(let n=0;n<c;n++)e+=`\n            values[${t}] = fma(${l.type.value}(a_data${1===c?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${p}u; i++) {\n      var value = values[i];\n      ${_}\n      ${v}\n      let cur_indices = ${f.type.indices}(batch, row + i, col);\n      let offset = ${f.indicesToOffset("cur_indices")};\n      ${f.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `}}},kr=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Tr=e=>{kr(e.inputs);let t=ct.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],i=e.inputs[0].dims[e.inputs[0].dims.length-1];n<8&&i<8?e.compute(Ir(e.inputs,{activation:""},t)):e.compute(xr(e.inputs,{activation:""},t))}})),au=D((()=>{Ns(),nu(),tu(),iu(),Js(),ru(),Ws(),Ar=(e,t,n,i,r,a)=>{let o=e[0],s=e.slice(a?1:2,a?3:4),u=s.length,l=t[0],d=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=s.map(((e,t)=>e+i[t]+i[t+u])).map(((e,t)=>Math.floor((e-d[t]+r[t])/r[t])));return c.splice(0,0,o),c.splice(a?3:1,0,l),c},Or=[2,3,1,0],zr=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Rr=(e,t)=>{let n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);let i=e.pads.slice();ft.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,i,"NHWC"===e.format,e.autoPad);let r=Object.assign({},e);return Object.assign(r,{kernelShape:n,pads:i}),r},jr=e=>{let t=pr(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},Mr=(e,t,n)=>{let i=Rr(n,t),r="NHWC"===n.format;if(1!==n.group)return void e.compute(Er(t,i));let a=3===t.length,o=t[0].dims[r?1:2],s=t[0].dims[r?2:3],u=t[0].dims[r?3:1],l=t[1].dims[2],d=t[1].dims[3],c=Ar(t[0].dims,t[1].dims,n.dilations,i.pads,n.strides,r),p=c[r?1:2],f=c[r?2:3],h=c[r?3:1],m=r&&l===o&&d===s&&0===n.pads[0]&&0===n.pads[1];if(m||1===l&&1===d&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let l,d,g,y=c[0],v=[];if(r){let i=e.kernelCustomData.wT??e.compute(Dt(t[1],Or),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i),m){let e=o*s*u;l=t[0].reshape([1,y,e]),d=i.reshape([1,e,h]),g=[1,y,h]}else l=t[0].reshape([y,o*s,u]),d=i.reshape([1,u,h]),g=[y,p*f,h];v.push(l),v.push(d)}else l=t[0].reshape([y,u,o*s]),d=t[1].reshape([1,h,u]),g=[y,h,p*f],v.push(d),v.push(l);a&&v.push(t[2]);let w=g[2],_=v[0].dims[v[0].dims.length-1];return void(w<8&&_<8?e.compute(Ir(v,i,c,g,r),{inputs:v}):e.compute(xr(v,i,c,g,r),{inputs:v}))}let g=e.kernelCustomData.wT??e.compute(Dt(t[1],Or),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);let y=[t[0],g];a&&y.push(t[2]);let v=r?p*f:h,w=r?h:p*f,_=l*d*u;e.compute(Sr(y,i,c,v,w,_,a,!0),{inputs:y})},Br=(e,t)=>{let n="NHWC"===t.format,i=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&i.push(e.inputs[2]);let r=[0,t.pads[0],0,t.pads[1]],a=[1].concat(t.strides),o=[1].concat(t.dilations),s=[1].concat(t.kernelShape),u=Rr({...t,pads:r,strides:a,dilations:o,kernelShape:s},i);e.compute(Er(i,u,(e=>n?[e[0],e[2],e[3]]:[])))},Pr=(e,t)=>{zr(e.inputs,t),3===e.inputs[0].dims.length?Br(e,t):Mr(e,e.inputs,t)}})),ou=D((()=>{zs(),js(),Us(),Js(),Xs(),eu(),tu(),Dr=(e,t=!1,n,i,r=4)=>{let a=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",o=e?"row":"col",s=e?"col":"row",u=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${o} / outWidth;\n      let outCol = ${o} % outWidth;\n\n      let WRow = ${s} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${s} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"}) || fract(xR) > 0.0) {\n        return ${i}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) || fract(xC) > 0.0) {\n        return ${i}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${s} % inChannels;\n      ${e?"\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      "}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${r}];`,l=e?`\n      let col = colIn * ${r};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${u}\n      }\n      return ${i}(0.0);`:`\n      let col = colIn * ${r};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${u}\n      }\n      return ${i}(0.0);`,d=`\n      let col = colIn * ${r};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${(e=>{switch(e){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${i}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${e} is not supported.`)}})(r)}\n      }\n      return ${i}(0.0);\n      `,c=lr(n,i);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?l:d}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?d:l}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {\n    let col = colIn * ${r};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${a}\n      ${hr(t)}\n      ${c}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${r}] = value;\n    }\n  }`},Nr=(e,t,n,i,r,a,o,s)=>{let u="NHWC"===t.format,l=u?e[0].dims[3]:e[0].dims[1],d=n[0],c=u?n[2]:n[3],p=u?n[1]:n[2],f=u?n[3]:n[1],h=u?l%4==0&&f%4==0:c%4==0&&f%4==0,m=u?f:c*p,g=u?c*p:f,y=h?[8,8,1]:[m<=4||g<=4?4:16,m>4&&g<=4?4:16,1],v=h?[4,4,1]:[m<=4?1:4,m>4&&g<=4?1:4,1],w=[Math.ceil(m/y[0]/v[0]),Math.ceil(g/y[1]/v[1]),Math.ceil(d/y[2]/v[2])];et("verbose",(()=>`[conv_backprop_mm_webgpu] dispatch = ${w}`));let _=h?4:1,$=Math.max(y[0]*_,y[1]),b=h?4:1,x=[t.kernelShape[u?1:2],t.kernelShape[u?2:3]],C=[x[0]+(t.dilations[0]<=1?0:(x[0]-1)*(t.dilations[0]-1)),x[1]+(t.dilations[1]<=1?0:(x[1]-1)*(t.dilations[1]-1))],S=[C[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),C[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],E=[{type:6,data:i},{type:6,data:r},{type:6,data:a},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:x},{type:6,data:S}];dr(t,E),E.push(...$t(e[0].dims,e[1].dims));let I=["rank","rank"];o&&(E.push(...$t(e[2].dims)),I.push("rank")),E.push(...$t(n));return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${v};${y};${h}`,inputDependencies:I},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:E}),getShaderSource:i=>{let r=kt("x",e[0].dataType,e[0].dims.length,b),a=kt("w",e[1].dataType,e[1].dims.length,1),l=Tt("result",e[0].dataType,n.length,b),d=[r,a],c="";if(o){let t=kt("bias",e[2].dataType,e[2].dims.length,b);d.push(t),c+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${t.type.value} {\n            return bias[coords.${u?"w":"y"}${h?"/ 4":""}];\n          }`}let p=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:x.length},{name:"pads",type:"i32",length:S.length}];cr(t,p);let f=wt(e[0].dataType,1);if("f16"!==f&&"f32"!==f)throw new Error(`elemType ${f} is not supported.`);return`\n        ${mr("uniforms.result_strides")}\n        ${i.registerUniforms(p).declareVariables(...d,l)};\n        ${c}\n        ${Dr(u,o,t,r.type.value,_)}\n        ${h?vr(v,y,f,void 0,!u,$):$r(v,y,f,void 0,!u,$,!1,void 0,s)}`}}}})),su=D((()=>{zs(),js(),Ns(),Us(),Ur=(e,t,n,i,r,a=!1,o,s,u=!1)=>{let l=u?1:2,d=u?2:3,c=u?3:1,p=a?2:1,f=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${a?`vec4<${o}>`:o}) {\n    result[flatIndex] = ${a?`vec4<${o}>`:o}(value);\n  }`;i&&(f+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${a?`vec4<${o}>`:o} {\n      return bias[coords.${u?"w":"y"}${a?"/ 4":""}];\n    }`);let h=a?4:1,m=kt("W",t[1].dataType,t[1].dims.length,h),g=kt("Dy",t[0].dataType,t[0].dims.length,h),y=[g,m];i&&y.push(kt("bias",t[2].dataType,[n[c]].length,h));let v=Tt("result",t[0].dataType,n.length,h),w=`{\n        let batch: u32 = ${r?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${r?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${r?"global_id.y":"workgroup_id.y"} * ${p};\n        let d1: u32 = ${r?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${o}>, ${p}>;\n        for (var i = 0; i < ${p}; i++) {\n          dotProd[i] = vec4<${o}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${o}(dyCorner.x) + ${o}(wR)) / ${o}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${o}(dyCorner.y) + ${o}(wC)) / ${o}(uniforms.strides.y);\n            let dyC2 = (${o}(dyCorner.y) + 1.0 + ${o}(wC)) / ${o}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${o}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${o}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${g.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${o}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${c}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${o}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${o}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${p}; i = i + 1) {\n          let value = dotProd[i] + ${i?"bias[c+i]":`vec4<${o}>(0.0)`};\n          ${v.set("batch","r","c + i","d1","value")};\n        }\n      }`,_=`\n          let outputIndices = ${v.offsetToIndices("global_idx")};\n          let batch = ${v.indicesGet("outputIndices",0)};\n          let d1 = ${v.indicesGet("outputIndices",c)};\n          let r = ${v.indicesGet("outputIndices",l)};\n          let c = ${v.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${o}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${o}(dyRCorner) + ${o}(wR)) / ${o}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${o}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${o}(dyCCorner) + ${o}(wC)) / ${o}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${o}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${u?g.get("batch","idyR","idyC","inputChannel"):g.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${m.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${i?"bias[d1]":`${o}(0.0)`};\n          ${v.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(s).declareVariables(...y,v)}\n  ${f}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${a?w:_}}`},Wr=(e,t,n)=>{let i=e.length>2,r=t.outputShape,a=pt.size(r),o=[Math.ceil(a/64),1,1];et("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${o}`));let s="NHWC"===t.format,u=["rank","rank"],l=[t.strides[0],t.strides[1]],d=[t.kernelShape[s?1:2],t.kernelShape[s?2:3]],c=[t.dilations[0],t.dilations[1]],p=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[s?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[s?2:3]-1)*(t.dilations[1]-1))],f=[p[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),p[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],h=t.group,m=e[1].dims,g=m[0]/h,y=m[1],v=[{type:6,data:a},{type:12,data:l},{type:12,data:d},{type:12,data:c},{type:12,data:p},{type:6,data:f},{type:12,data:g},{type:12,data:y},...$t(e[0].dims,e[1].dims)];i&&(v.push(...$t(e[2].dims)),u.push("rank")),v.push(...$t(r));let w=1===o[1]&&1===o[2];return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:u},getRunData:()=>({dispatchGroup:{x:o[0],y:o[1],z:o[2]},outputs:[{dims:n?n(r):r,dataType:e[0].dataType}],programUniforms:v}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:l.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:p.length},{name:"pads",type:"i32",length:f.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],a=wt(e[0].dataType);return`${Ur(t,e,r,i,w,false,a,n,s)}`}}}})),uu=D((()=>{ou(),su(),Js(),Ws(),Lr=(e,t,n,i,r,a)=>(e-1)*t+n+(i-1)*r+1-a,Hr=(e,t,n,i,r)=>{let a=Math.floor(e/2);"SAME_UPPER"===t?(n[i]=a,n[r]=e-a):"SAME_LOWER"===t&&(n[i]=e-a,n[r]=a)},Gr=(e,t,n,i,r,a,o,s,u,l)=>{let d=e.length-2,c=0===l.length;if(0===u.length)for(let e=0;e<d;++e)u.push(0);let p=e[0],f=t[s?3:1]*r;for(let r=0,p=e.length-d-(s?1:0);r<d;++r,++p){let s=e[p],f=c?s*o[r]:l[r],h=Lr(s,o[r],a[r],t[p],n[r],f);Hr(h,i,a,r,r+d),c&&l.push(o[r]*(s-1)+u[r]+(t[p]-1)*n[r]+1-a[r]-a[r+d])}l.splice(0,0,p),l.splice(s?3:1,0,f)},Vr=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let i="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(i?3:1,0,t[1].dims[1]);let r=e.pads.slice(),a=e.outputShape.slice(),o=e.outputPadding.slice(),s=t[0].dims,u=e.dilations.slice();if(0===u.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;u=new Array(e).fill(1)}let l=e.strides.slice();if(0===l.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}Gr(s,n,u,e.autoPad,e.group,r,l,i,o,a);let d=Object.assign({},e);return Object.assign(d,{kernelShape:n,pads:r,outputPadding:o,outputShape:a,dilations:u,strides:l}),d},Fr=e=>{let t=pr(e),n=e.format,i=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],r=e.dilations,a=e.group,o=e.kernelShape,s=e.pads,u=e.strides,l=e.wIsConst();return{autoPad:i,format:n,dilations:r,group:a,kernelShape:o,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:s,strides:u,wIsConst:l,...t,cacheKey:`${e.format};${t.activation};`}},qr=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*i)throw new Error(`pads should be ${2*i}D`);if(t.outputPadding.length!==i&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${i}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Kr=[2,3,1,0],Yr=(e,t,n)=>{let i=Vr(n,t),r="NHWC"===n.format,a=i.outputShape,o=a[r?3:1],s=t[0].dims[r?3:1];if(1!==i.group||1===o&&1===s)return void e.compute(Wr(t,i));let u=a[r?1:2],l=a[r?2:3],d=r?u*l:o,c=r?o:u*l,p=t[1].dims[2]*t[1].dims[3]*s,f=e.kernelCustomData.wT??e.compute(Dt(t[1],Kr),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=f);let h=[t[0],f],m=3===t.length;m&&(r||1!==t[2].dims.length?h.push(t[2]):h.push(t[2].reshape([t[2].dims[0],1,1]))),e.compute(Nr(h,i,a,d,c,p,m,!0),{inputs:h})},Zr=(e,t)=>{let n="NHWC"===t.format,i=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===i.length&&i.push(e.inputs[2]);let r=t.kernelShape;(0===r.length||0===r[0])&&(r=[e.inputs[1].dims[2]]);let a=t.dilations;(0===a.length||0===a[0])&&(a=[1]);let o=t.strides;(0===o.length||0===o[0])&&(o=[1]);let s=t.pads;0===s.length&&(s=[0,0]),s=[0,s[0],0,s[1]],o=[1].concat(o),a=[1].concat(a),r=[1].concat(r);let u=Vr({...t,pads:s,strides:o,dilations:a,kernelShape:r},i);e.compute(Wr(i,u,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))},Qr=(e,t)=>{qr(e.inputs,t),3===e.inputs[0].dims.length?Zr(e,t):Yr(e,e.inputs,t)}})),lu=D((()=>{zs(),Ns(),Ds(),Us(),Jr=(e,t,n,i)=>{let r=pt.size(t),a=t.length,o=kt("input",e,a),s=Tt("output",e,a),u=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=pt.normalizeAxis(u,a);return{name:"CumSum",shaderCache:{hint:i.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:[{type:12,data:r},{type:6,data:l},...$t(t,t)]}),getShaderSource:e=>{let t=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,n=Et("uniforms.input_shape","uniforms.axis",a),r=i.reverse?t+(i.exclusive?" + 1":""):"0",u=i.reverse?n:t+(i.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,s)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${s.offsetToIndices("global_idx")};\n                  var sum = ${s.type.value}(0);\n                  let first : i32 = ${r};\n                  let last : i32 = ${u};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${o.getByIndices("inputIndices")};\n                  }\n                  ${s.setByOffset("global_idx","sum")};\n                }`}}},Xr=(e,t)=>{let n=e.inputs[0].dims,i=e.inputs[0].dataType,r=e.inputs[1];e.compute(Jr(i,n,r,t),{inputs:[0]})},ea=e=>{let t=1===e.exclusive,n=1===e.reverse;return lt({exclusive:t,reverse:n})}})),du=D((()=>{zs(),Ns(),Ds(),Us(),ia="^"+(na="("+(ta="[a-zA-Z]|\\.\\.\\.")+")+")+"$",ra="^"+("("+na+",)*"+na)+"$",aa=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},oa=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,i]=t.includes("->")?t.split("->",2):[t,""];if(!n.match(RegExp(ra)))throw new Error("Invalid LHS term");if(n.split(",").forEach(((t,n)=>{let i=e[n].dims.slice();if(!t.match(RegExp(ia)))throw new Error("Invalid LHS term");let r=this.processTerm(t,!0,i,n);this.lhs.push(r)})),""===i)i+=[...this.symbolToInfo.entries()].filter((([e,t])=>1===t.count||"..."===e)).map((([e])=>e)).join("");else if(!i.match(RegExp(na)))throw new Error("Invalid RHS");i.match(RegExp(ta,"g"))?.forEach((e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}})),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(e,t,n){let i=this.symbolToInfo.get(e);if(void 0!==i){if(i.dimValue!==t&&1!==i.count)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(n)}else i={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,i)}processTerm(e,t,n,i=-1){let r=n.length,a=!1,o=[],s=0;if(!e.match(RegExp(ia))&&!t&&""!==e)throw new Error("Invalid LHS term");let u=e.match(RegExp(ta,"g")),l=new aa(i);return u?.forEach(((e,d)=>{if("..."===e){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let e=r-u.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(o=n.slice(s,s+e),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=o}for(let e=0;e<o.length;e++){let t=String.fromCharCode("0".charCodeAt(0)+e);l.addSymbol(t,d+e),this.addSymbol(t,n[s++],i)}}else l.addSymbol(e,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[s++],i)})),l}},sa=e=>e+"_max",ua=(e,t,n,i)=>{let r=e.map((e=>e.length)).map(((e,n)=>kt(`input${n}`,t,e))),a=pt.size(i),o=Tt("output",t,i.length),s=[...n.symbolToInfo.keys()].filter((e=>!n.rhs.symbolToIndices.has(e)));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map((()=>"rank"))},getRunData:()=>{let r=s.filter((e=>n.symbolToInfo.has(e))).map((e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0})));r.push({type:12,data:a});let o=e.map(((e,t)=>[...$t(e)])).reduce(((e,t)=>e.concat(t)),r);return o.push(...$t(i)),{outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o}},getShaderSource:e=>{let t=[],i=[],a=[],u=[],l=[],d=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach(((e,s)=>{if(n.rhs.symbolToIndices.has(s)){let i=n.rhs.symbolToIndices.get(s)?.[0];void 0!==i&&n.lhs.forEach(((n,a)=>{if(e.inputIndices.includes(a)){let e=n.symbolToIndices.get(s);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{t.push(`${r[a].indicesSet(`input${a}Indices`,e,o.indicesGet("outputIndices",i))}`)}))}}))}else n.lhs.forEach(((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(s);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{i.push(`${r[n].indicesSet(`input${n}Indices`,e,`${s}`)}`)})),l.push(`prod *= ${r[n].getByIndices(`input${n}Indices`)};`)}})),a.push(`for(var ${s}: u32 = 0; ${s} < uniforms.${sa(s)}; ${s}++) {`),u.push("}")}));let c=d?[...t,`let sum = ${r.map(((e,t)=>e.getByIndices(`input${t}Indices`))).join(" * ")};`]:[...t,"var sum = 0.0;",...a,...i,"var prod = 1.0;",...l,"sum += prod;",...u];return`\n            ${e.registerUniforms(s.map((e=>({name:`${sa(e)}`,type:"u32"})))).registerUniform("outputSize","u32").declareVariables(...r,o)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${o.offsetToIndices("global_idx")};\n            ${r.map(((e,t)=>`var input${t}Indices: ${r[t].type.indices};`)).join("\n")}\n            ${c.join("\n")};\n            ${o.setByOffset("global_idx","sum")};\n          }`}}},la=(e,t)=>{let n=new oa(e.inputs,t.equation),i=n.outputDims,r=e.inputs.map(((e,t)=>e.dims));e.compute(ua(r,e.inputs[0].dataType,n,i))},da=e=>{let t=e.equation.replace(/\s+/g,"");return lt({equation:t})}})),cu=D((()=>{zs(),Ns(),Us(),ca=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),i=n.length<t.length?0:n.length-t.length,r=t.length<n.length?0:t.length-n.length;for(;i<n.length&&r<t.length;++i,++r)if(n[i]!==t[r]&&1!==n[i]&&1!==t[r])throw new Error("Expand requires shape to be broadcastable to input")},pa=(e,t)=>{let n=e.length-t.length,i=[];for(let t=0;t<n;++t)i.push(e[t]);for(let r=0;r<t.length;++r)i.push(1===t[r]?e[r+n]:t[r]);return i},fa=(e,t)=>e.length>t.length?pa(e,t):pa(t,e),ha=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),i=fa(t,n),r=e[0].dataType,a=9===r?4:1,o=Math.ceil(pt.size(i)/a),s=[{type:12,data:o},...$t(t,i)];return{name:"Expand",shaderCache:{hint:`${i.length}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,o=kt("input",r,t.length,a),s=Tt("output",r,i.length,a);if(9===r){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${s.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${o.broadcastedIndicesToOffset(`outputIndices${t}`,s)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${a};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${s.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${s.offsetToIndices("global_idx")};\n        let inputOffset = ${o.broadcastedIndicesToOffset("outputIndices",s)};\n        ${s.setByOffset("global_idx",o.getByOffset("inputOffset"))}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(o,s)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:s})}},ma=e=>{ca(e.inputs),e.compute(ha(e.inputs),{inputs:[0]})}})),pu=D((()=>{zs(),Ns(),Us(),Ks(),ga=e=>{let t=e[0].dataType,n=pt.size(e[0].dims),i=pt.size(e[1].dims),r=i%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${r}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=kt("x",t,[1],4),i=kt("bias",t,[1],4),a=Tt("y",t,[1],4),o=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${i.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,s=r?`\n      let bias = ${i.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${o(0)}${o(1)}${o(2)}${o(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,i,a)}\n\n    ${Bi(_t(t))}\n\n    ${e.mainStart(yt)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${s}\n      let x_in = x + bias;\n      ${a.setByOffset("global_idx",Pi("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:i}],dispatchGroup:{x:Math.ceil(n/yt/4)}})}},ya=e=>{e.inputs.length<2||0===pt.size(e.inputs[1].dims)?Di(e):e.compute(ga(e.inputs))}})),fu=D((()=>{zs(),Ns(),Ds(),Us(),va=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},wa=(e,t)=>{let n=e[0].dims,i=e[1].dims,r=n.length,a=pt.normalizeAxis(t.axis,r),o=n.slice(0);o.splice(a,1,...i);let s=n[a],u=9===e[0].dataType?4:1,l=Math.ceil(pt.size(o)/u),d=[{type:12,data:l},{type:6,data:s},{type:12,data:a},...$t(e[0].dims,e[1].dims,o)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:t=>{let n,s=kt("data",e[0].dataType,e[0].dims.length,u),l=kt("inputIndices",e[1].dataType,e[1].dims.length),d=Tt("output",e[0].dataType,o.length,u),c=e=>{let t=i.length,n=`var indicesIndices${e}  = ${l.type.indices}(0);`;for(let i=0;i<t;i++)n+=`${t>1?`indicesIndices${e}[${i}]`:`indicesIndices${e}`} = ${o.length>1?`outputIndices${e}[uniforms.axis + ${i}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${l.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} : ${s.type.indices};\n        `;for(let i=0,s=0;i<r;i++)i===a?(n+=`${r>1?`dataIndices${e}[${i}]`:`dataIndices${e}`} = u32(idx${e});`,s+=t):(n+=`${r>1?`dataIndices${e}[${i}]`:`dataIndices${e}`} = ${o.length>1?`outputIndices${e}[${s}]`:`outputIndices${e}`};`,s++);return n};if(9===e[0].dataType){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${d.offsetToIndices(`outputOffset + ${t}u`)};\n          ${c(t)};\n          let offset${t} = ${s.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${s.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${u};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${d.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      ${c("")};\n      let value = ${s.getByIndices("dataIndices")};\n      ${d.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(s,l,d)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},_a=e=>lt({axis:e.axis}),$a=(e,t)=>{let n=e.inputs;va(n),e.compute(wa(e.inputs,t))}})),hu=D((()=>{zs(),Ns(),Ds(),Us(),ba=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},xa=(e,t)=>{let n=e[0].dims,i=e[0].dataType,r=n.length,a=e[1].dims,o=e[1].dataType,s=pt.normalizeAxis(t.axis,r),u=n[s],l=a.slice(0),d=pt.size(l),c=kt("input",i,r),p=kt("indicesInput",o,a.length),f=Tt("output",i,l.length),h=[{type:12,data:d},{type:6,data:u},{type:12,data:s}];return h.push(...$t(n,a,l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,p,f)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${f.offsetToIndices("global_idx")};\n\n      var idx = ${p.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${c.type.indices}(outputIndices);\n      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${c.getByIndices("inputIndices")};\n\n      ${f.setByOffset("global_idx","value")};\n  }`}},Ca=e=>lt({axis:e.axis}),Sa=(e,t)=>{let n=e.inputs;ba(n),e.compute(xa(e.inputs,t))}})),mu=D((()=>{zs(),Ns(),Us(),Ea=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ia=(e,t)=>{let n=e[0].dims.slice(),i=e[1].dims.slice(),[r,a,o]=ht.getShapeOfGemmResult(n,t.transA,i,t.transB,3===e.length?e[2].dims:void 0),s=[r,a];if(!s)throw new Error("Can't use gemm on the given tensors");let u=pt.size(s),l=[{type:12,data:u},{type:12,data:r},{type:12,data:a},{type:12,data:o},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];3===e.length&&(l.push(...$t(e[2].dims)),d.push("rank")),l.push(...$t(s));return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:n=>{let i="";t.transA&&t.transB?i="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?i="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?i="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(i="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let r=1===t.alpha?"":"value *= uniforms.alpha;",a=kt("a",e[0].dataType,e[0].dims),o=kt("b",e[1].dataType,e[1].dims),u=a.type.value,l=null,d=[a,o];3===e.length&&(l=kt("c",e[2].dataType,e[2].dims.length),d.push(l));let c=Tt("output",e[0].dataType,s.length);d.push(c);return`\n  ${n.registerUniforms([{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...d)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${u}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${i}\n    }\n\n    ${r}\n    ${null!=l?`let cOffset = ${l.broadcastedIndicesToOffset("vec2(m, n)",c)}; value += ${u}(uniforms.beta) * ${l.getByOffset("cOffset")};`:""}\n    output[global_idx] = value;\n  }`}}},ka=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),Ta=(e,t)=>{Ea(e.inputs),e.compute(Ia(e.inputs,t))}})),gu=D((()=>{zs(),Ns(),Us(),Aa=(e,t)=>{let n=e[0].dims,i=n,r=pt.sizeToDimension(n,2),a=pt.sizeFromDimension(n,2),o=bt(a),s=a/o,u=[n[0],n[1],s],l=[{type:12,data:a},{type:12,data:s}];l.push(...$t(u,u));return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${o}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:r},programUniforms:l}),getShaderSource:n=>{let i=kt("x",e[0].dataType,u.length,o),r=kt("scale",e[1].dataType,e[1].dims),a=kt("bias",e[2].dataType,e[2].dims),s=Tt("output",e[0].dataType,u.length,o),l=[i,r,a,s],d=i.type.value,c=1===o?"f32":`vec${o}<f32>`;return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${c}, 64>;\n  const workgroupSize = 64u;\n  ${n.registerUniforms([{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}]).declareVariables(...l)}\n  ${n.mainStart(64)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${c}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${c}(${i.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${St("workgroupShared[0]",o)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${c}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${c}(${i.get("batch","channel","h")}) - ${c}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${St("workgroupShared[0]",o)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${r.getByOffset("channel")});\n    let channelShift = f32(${a.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${i.get("batch","channel","h")} * ${d}(${c}(channelScale)) + ${d}(${c}(channelShift));\n      ${s.set("batch","channel","h","value")};\n    }\n  }`}}},Oa=(e,t,n,i,r,a,o,s)=>{let u=bt(o),l=64,d=1===u?"vec2f":`mat2x${u}f`,c=1===u?"f32":`vec${u}f`,p=(e,t)=>`${d}(${e}, ${t})`,f=r*o/u,h=[{type:12,data:Math.ceil(a/l)},{type:12,data:a},{type:12,data:Math.floor(o/u)},{type:12,data:Math.floor(a*o/u)}],m=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:[r,o,l,2],dataType:1}],dispatchGroup:{x:r*o/u},programUniforms:h}),getShaderSource:e=>{let n=kt("input",t.dataType,t.dims,u);return`\n  ${e.declareVariables(n)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart(l)}\n    let currentImageNumber = global_idx / 64 / uniforms.C;\n    let currentChannelNumber = (global_idx / 64) % uniforms.C;\n    let wgId = global_idx % 64;\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${xt("f32",u)};\n    var squaredSum = ${xt("f32",u)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${c}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${p("sum","squaredSum")};\n  }`}},{inputs:[t],outputs:[-1]})[0],g=[{type:12,data:f},{type:12,data:a},{type:12,data:Math.floor(o/u)},{type:12,data:Math.floor(l*o/u)}];return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${s}`,inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:[r,o,2],dataType:1}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:e=>{let t=kt("scale",n.dataType,n.dims,u),r=kt("bias",i.dataType,i.dims,u);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${t.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${r.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${xt("f32",u)};\n    var squaredSum = ${xt("f32",u)};\n    for (var i: u32 = 0; i < 64; i++) {\n        let value = input[offset + i + currentChannelNumber * 64];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${s}));\n    let channelScale = invStdDev * ${c}(scale[currentChannelNumber]);\n    let channelShift = ${c}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${p("channelScale","channelShift")};\n  }`}},{inputs:[m,n,i],outputs:[-1]})[0]},za=(e,t,n)=>{let i=t[0].dims,r=i,a=i[0],o=i[i.length-1],s=pt.sizeFromDimension(i,1)/o,u=bt(o),l=pt.size(r)/u,d=[{type:12,data:s},{type:12,data:Math.floor(o/u)}],c=Oa(e,t[0],t[1],t[2],a,s,o,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:e=>{let n=wt(t[0].dataType),i=1===u?"vec2f":`mat2x${u}f`,a=1===u?n:`vec${u}<${n}>`,o=kt("input",t[0].dataType,t[0].dims,u),s=Tt("output",t[0].dataType,r,u);return`\n  @group(0) @binding(0) var<storage, read> input : array<${o.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${i}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${s.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${a}(scale[0]), ${a}(scale[1]));\n  }`}},{inputs:[t[0],c]})},Ra=(e,t)=>{"NHWC"===t.format?za(e,e.inputs,t):e.compute(Aa(e.inputs,t))}})),yu=D((()=>{zs(),Ns(),Us(),ja=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ma=(e,t,n)=>{let i=e[0].dims,r=e[1],a=e[2],o=i,s=pt.normalizeAxis(t.axis,i.length),u=pt.sizeToDimension(i,s),l=pt.sizeFromDimension(i,s),d=pt.size(r.dims),c=a?pt.size(a.dims):0;if(d!==l||a&&c!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${c}`);let p=[];for(let e=0;e<i.length;++e)e<s?p.push(i[e]):p.push(1);let f=bt(l),h=["type","type"],m=[{type:12,data:u},{type:1,data:l},{type:12,data:Math.floor(l/f)},{type:1,data:t.epsilon}];a&&h.push("type");let g=n>1,y=n>2,v=[{dims:o,dataType:e[0].dataType}];return g&&v.push({dims:p,dataType:1}),y&&v.push({dims:p,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${n}`,inputDependencies:h},getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:m}),getShaderSource:t=>{let n=wt(e[0].dataType),i=[kt("x",e[0].dataType,e[0].dims,f),kt("scale",r.dataType,r.dims,f)];a&&i.push(kt("bias",a.dataType,a.dims,f)),i.push(Tt("output",e[0].dataType,o,f)),g&&i.push(Tt("mean_data_output",1,p)),y&&i.push(Tt("inv_std_output",1,p));return`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...i)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${xt("f32",f)};\n    var mean_square_vector = ${xt("f32",f)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Ct(n,f,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${St("mean_vector",f)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${St("mean_square_vector",f)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Ct(n,f,"x[j + offset]")};\n      let f32scale = ${Ct(n,f,"scale[j]")};\n      output[j + offset] = ${i[0].type.value}((f32input - mean) * inv_std_dev * f32scale\n        ${a?`+ ${Ct(n,f,"bias[j]")}`:""}\n      );\n    }\n\n    ${g?"mean_data_output[global_idx] = mean":""};\n    ${y?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`}}},Ba=(e,t)=>{ja(e.inputs),e.compute(Ma(e.inputs,t,e.outputCount))}})),vu=D((()=>{zs(),Ns(),Ds(),Us(),Pa=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],i=n.dims.length;if(n.dims[i-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let r=Math.floor((t.k+t.blockSize-1)/t.blockSize),a=t.blockSize/8*t.bits,o=e[1];if(!pt.areEqual(o.dims,[t.n,r,a]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let s=e[2].dims;if(pt.size(s)!==t.n*r)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,i=t.bits>4?t.n*r:t.n*Math.floor((r+1)/2);if(pt.size(n)!==i)throw new Error("zeroPoints input size error.")}},Da=(e,t)=>{let n=e[0],i=e[1],r=e[2],a=n.dims.length,o=n.dims.slice(0,a-1).concat(t.n),s=pt.size(o),u=[{type:12,data:s},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize}];u.push(...$t(n.dims)),u.push(...$t(pt.convertShape(i.dims))),u.push(...$t(r.dims)),4===e.length&&u.push(...$t(pt.convertShape(e[3].dims))),u.push(...$t(o));return{name:"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u}),getShaderSource:n=>{let i=kt("a",e[0].dataType,e[0].dims.length),r=kt("b",12,e[1].dims.length),s=kt("scales",e[2].dataType,e[2].dims.length),u=[i,r,s],l=4===e.length?kt("zero_points",12,e[3].dims.length):void 0;l&&u.push(l);let d=Tt("output",e[0].dataType,o.length),c=Math.floor((t.k+t.blockSize-1)/t.blockSize),p=t.blockSize/8*t.bits/4,f=wt(e[0].dataType);return`\n        fn ortUnpack8x4snorm(value: u32) -> array<${f}, 8>{\n          var result = array<${f}, 8>();\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            result[i] = ${f}(extractBits(value, offset, count));\n            offset += count;\n          }\n          return result;\n        }\n        ${n.registerUniforms([{name:"output_size",type:"u32"},{name:"k",type:"u32"},{name:"n",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...u,d)}\n        ${n.mainStart()}\n          ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var value: ${f} = 0.0;\n          let output_indices = ${d.offsetToIndices("global_idx")};\n          var a_indices: ${i.type.indices} = output_indices;\n          var n = ${d.indicesGet("output_indices",a-1)};\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${l?`\n            var zero_point_index: u32 = n * ((${c} + 1) / 2) / 4;\n            var zero_point_word: u32 = ${l.getByOffset("zero_point_index")};\n            var zero_point_offset: u32 = 0;`:""}\n          var scale_idex = n * ${c};\n          var b_indices: ${r.type.indices};\n          ${r.indicesSet("b_indices","0","n")};\n          var block_offset: u32 = 0;\n          for (var block: u32 = 0; block < ${c}; block++) {\n            // The scale and zero points are computed per block.\n            let scale = ${s.getByOffset("scale_idex")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point: ${f} = ${l?`${f}(extractBits(zero_point_word, zero_point_offset, 4))`:8};\n            ${r.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block_offset;\n            for (var word: u32 = 0; word < ${p}; word++) {\n              ${r.indicesSet("b_indices","2","word")};\n              let b_value = ${r.getByIndices("b_indices")};\n              let b_quantized_values: array<${f}, 8> = ortUnpack8x4snorm(b_value);\n              // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n              var offset: u32 = word_offset;\n              for (var i: u32 = 0; i < 8; i++) {\n                ${i.indicesSet("a_indices",a-1,"offset")};\n                let a_value = ${i.getByIndices("a_indices")};\n                let b_quantized_value = b_quantized_values[i];\n                let b_dequantized_value = (b_quantized_value - zero_point) * scale;\n                value += a_value * b_dequantized_value;\n                offset++;\n              }\n              word_offset += 8;\n            }\n            scale_idex++;\n            ${l?`\n            if (zero_point_offset == 28) {\n              zero_point_offset = 0;\n              zero_point_index++;\n              zero_point_word = ${l.getByOffset("zero_point_index")};\n            } else {\n              zero_point_offset += 4;\n            }`:""}\n            block_offset += uniforms.block_size;\n          }\n          ${d.setByOffset("global_idx","value")};\n        }\n        `}}},Na=(e,t)=>{Pa(e.inputs,t),e.compute(Da(e.inputs,t))},Ua=e=>lt(e)})),wu=D((()=>{zs(),Ns(),Ds(),Bs(),Vs(),Us(),Ws(),Wa=(e,t)=>{let n=e[0],i=e[1],r=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7];if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let d,c=n.dims[0],p=n.dims[1],f=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],h=p,m=0,g=0,y=Math.floor(f/t.numHeads);if(u&&l){if(4!==u.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(4!==l.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');m=u.dims[2],g=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(i){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(i.dims.length<3||i.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==i.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===i.dims.length){if(i.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');d=2,h=i.dims[1]}else if(5===i.dims.length){if(i.dims[2]!==t.numHeads||2!==i.dims[3]||i.dims[4]!==y)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(r)throw new Error('Expect "value" be none when "key" has packed kv format.');d=5,h=i.dims[1]}else{if(i.dims[1]!==t.numHeads||i.dims[3]!==y)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=0,h=i.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');d=3}if(a){if(1!==a.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&5===n.dims.length&&2===n.dims[3])throw new Error("bias is not allowed for packed kv.")}let v=0;if(o){v=8;let e=o.dims;throw 1===e.length?e[0]===c?v=1:e[0]===3*c+2&&(v=3):2===e.length&&e[0]===c&&e[1]===h&&(v=5),8===v?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let w=!1,_=f;if(r){if(3!==r.dims.length&&4!==r.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===r.dims.length){if(h!==r.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');_=r.dims[2]}else{if(h!==r.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');_=r.dims[1]*r.dims[3],w=!0}}let $=m+h;if(o)throw new Error("Key padding mask is not supported");if(s)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:c,sequenceLength:p,pastSequenceLength:m,kvSequenceLength:h,totalSequenceLength:$,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:f,vHiddenSize:_,headSize:y,vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:v,scale:t.scale,broadcastResPosBias:!1,passPastInKv:w,qkvFormat:d}},La=e=>lt({...e}),Ha=lt({perm:[0,2,1,3]}),Ga=(e,t,n,i,r,a,o)=>{let s=[i,r,a],u=pt.size(s),l=[{type:12,data:u},{type:12,data:o},{type:12,data:a}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:e=>{let i=Tt("qkv_with_bias",t.dataType,s),r=kt("qkv",t.dataType,s),a=kt("bias",n.dataType,s);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(r,a,i)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},Va=(e,t,n,i,r,a,o,s)=>{let u=a;if(o){if(1===i)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=Ga(e,a,o,t,i,n*r,s),u=u.reshape([t,i,n,r]),e.compute(Dt(u,Ha.perm),{inputs:[u],outputs:[-1]})[0]}return 3===a.dims.length&&(u=a.reshape([t,i,n,r])),e.compute(Dt(u,Ha.perm),{inputs:[u],outputs:[-1]})[0]},Fa=(e,t)=>{let n=Wa(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error("Packed QKV is not implemented");if(5===e.inputs[1]?.dims.length)throw new Error("Packed KV is not implemented");let i=e.inputs[1]&&e.inputs[2]&&4===e.inputs[1].dims.length&&4===e.inputs[2].dims.length,r=Va(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,e.inputs[0],e.inputs[3],0);if(i)return Hn(e,r,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],n,t);let a=Va(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,e.inputs[1],e.inputs[3],n.hiddenSize),o=Va(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,e.inputs[2],e.inputs[3],2*n.hiddenSize);Hn(e,r,a,o,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],n,t)}})),_u=D((()=>{zs(),Ns(),Us(),qa=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Ka=(e,t,n)=>{let i="";for(let r=t-1;r>=0;--r)i+=`\n            k = i32(${e.indicesGet("indices",r)}) - ${Et("uniforms.pads",r,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${Et("uniforms.x_shape",r,t)})) {\n              break;\n            }\n            offset += k * i32(${Et("uniforms.x_strides",r,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${i}\n            value = x[offset];\n          }\n      `},Ya=(e,t,n)=>{let i="";for(let r=t-1;r>=0;--r)i+=`\n                k = i32(${e.indicesGet("indices",r)}) - ${Et("uniforms.pads",r,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${Et("uniforms.x_shape",r,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${Et("uniforms.x_shape",r,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${Et("uniforms.x_strides",r,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${i}\n              value = x[offset];\n          `},Za=(e,t,n)=>{let i="";for(let r=t-1;r>=0;--r)i+=`\n                k = i32(${e.indicesGet("indices",r)}) - ${Et("uniforms.pads",r,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${Et("uniforms.x_shape",r,t)})) {\n                  k = i32(${Et("uniforms.x_shape",r,t)}) - 1;\n                }\n                offset += k * i32(${Et("uniforms.x_strides",r,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${i}\n              value = x[offset];\n          `},Qa=(e,t,n)=>{let i="";for(let r=t-1;r>=0;--r)i+=`\n                k = i32(${e.indicesGet("indices",r)}) - ${Et("uniforms.pads",r,n)};\n                if (k < 0)  {\n                  k += i32(${Et("uniforms.x_shape",r,t)}]);\n                }\n                if (k >= i32(${Et("uniforms.x_shape",r,t)})) {\n                  k -= i32(${Et("uniforms.x_shape",r,t)});\n                }\n                offset += k * i32(${Et("uniforms.x_strides",r,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${i}\n              value = x[offset];\n          `},Ja=(e,t,n)=>{switch(n.mode){case 0:return Ka(e,t,n.pads.length);case 1:return Ya(e,t,n.pads.length);case 2:return Za(e,t,n.pads.length);case 3:return Qa(e,t,n.pads.length);default:throw new Error("Invalid mode")}},Xa=(e,t)=>{let n=pt.padShape(e[0].dims.slice(),t.pads),i=e[0].dims,r=[{type:12,data:pt.size(n)},{type:12,data:t.pads}];0===t.mode&&r.push({type:e[0].dataType,data:t.value}),r.push(...$t(e[0].dims,n));return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(pt.size(n)/64)},programUniforms:r}),getShaderSource:r=>{let a=Tt("output",e[0].dataType,n.length),o=kt("x",e[0].dataType,i.length),s=o.type.value,u=Ja(a,i.length,t),l=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&l.push({name:"constant_value",type:s}),`\n            ${r.registerUniforms(l).declareVariables(o,a)}\n            ${r.mainStart()}\n            ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${a.offsetToIndices("global_idx")};\n\n            var value = ${s}(0);\n            ${u}\n            output[global_idx] = value;\n        }`}}},eo=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),i=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,r=e[0].dims.length,a=new Int32Array(2*r).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)a[Number(t[e])]=Number(n[e]),a[Number(t[e])+r]=Number(n[e+t.length])}else n.forEach(((e,t)=>a[Number(t)]=Number(e)));let o=[];return a.forEach((e=>o.push(e))),{mode:t.mode,value:i,pads:o}}return t},to=(e,t)=>{qa(e.inputs);let n=eo(e.inputs,t);e.compute(Xa(e.inputs,n),{inputs:[0]})}})),$u=D((()=>{oe(),zs(),Ns(),Us(),no=e=>{if(d.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},io=(e,t,n)=>{let i="NHWC"===t.format,r=e.dims.slice();i&&r.splice(1,0,r.pop());let a=Object.hasOwnProperty.call(t,"dilations"),o=t.kernelShape.slice(),s=t.strides.slice(),u=a?t.dilations.slice():[],l=t.pads.slice();ft.adjustPoolAttributes(n,r,o,s,u,l);let d=ft.computePoolOutputShape(n,r,s,u,o,l,t.autoPad),c=Object.assign({},t);a?Object.assign(c,{kernelShape:o,strides:s,pads:l,dilations:u,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:o,strides:s,pads:l,cacheKey:t.cacheKey});let p=d.slice();return p.push(p.splice(1,1)[0]),[c,i?p:d]},ro=(e,t)=>{let n="NHWC"===t.format,i=[{type:12,data:pt.size(e)},{type:12,data:pt.size(t.kernelShape)}],r=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],a=t.pads[t.pads.length/2-1],o=t.pads[t.pads.length-1],s=!!(a+o);i.push({type:12,data:e},{type:12,data:n},{type:12,data:a},{type:12,data:o}),r.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],a=t.pads[t.pads.length/2-2],o=t.pads[t.pads.length-2];u=!!(a+o),i.push({type:12,data:e},{type:12,data:n},{type:12,data:a},{type:12,data:o}),r.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,r,!0,s,u]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=pt.computeStrides(t.kernelShape);return i.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),r.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[i,r,!!t.pads.reduce(((e,t)=>e+t)),!1,!1]}},ao=(e,t,n,i,r,a,o,s,u,l,d,c)=>{let p="NHWC"===r.format,f=t.type.value,h=Tt("output",t.type.tensor,i);if(r.kernelShape.length<=2){let i="",l="",m="",g=n-(p?2:1);if(i=d?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${g}] < 0 || xIndices[${g}]\n                      >= uniforms.x_shape[${g}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${a}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${a}\n                }`,2===r.kernelShape.length){let e=n-(p?3:2);l=c?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,m="\n              }\n            "}return`\n            ${e.registerUniforms(u).declareVariables(t,h)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${h.offsetToIndices("global_idx")};\n              var xIndices = ${h.offsetToIndices("global_idx")};\n\n              var value = ${f}(${s});\n              var pad = 0;\n              ${l}\n              ${i}\n              ${m}\n              ${o}\n\n              output[global_idx] = value;\n            }`}{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let i=r.kernelShape.length,d=r.pads.length,c="";return c=l?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${a}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${a}\n            `,`\n            ${e.registerUniforms(u).declareVariables(t,h)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${h.offsetToIndices("global_idx")};\n              var xIndices = ${h.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${i}>;\n\n              var value = ${f}(${s});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${i-1}u; j++) {\n                  offsets[j] = offset / ${Et("uniforms.kernelStrides","j",i)};\n                  offset -= offsets[j] * ${Et("uniforms.kernelStrides","j",i)};\n                }\n                offsets[${i-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-i}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${Et("uniforms.strides",`j - ${n-i}u`,i)}\n                    + offsets[j - ${n-i}u] - ${Et("uniforms.pads","j - 2u",d)};\n                  ${c}\n              }\n              ${o}\n\n              output[global_idx] = value;\n            }`}},oo=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,so=e=>`${oo(e)};${e.countIncludePad}`,uo=e=>`${oo(e)};${e.storageOrder};${e.dilations}`,lo=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),co=(e,t,n,i)=>{let[r,a]=io(t,i,n),o=kt("x",t.dataType,t.dims.length),s=o.type.value,u="";r.countIncludePad?u+=`value /= ${s}(uniforms.kernelSize);`:u+=`value /= ${s}(i32(uniforms.kernelSize) - pad);`;let[l,d,c,p,f]=ro(a,r);l.push(...$t(t.dims,a));return{name:e,shaderCache:{hint:`${i.cacheKey};${c};${p};${f}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(pt.size(a)/64)},programUniforms:l}),getShaderSource:e=>ao(e,o,t.dims.length,a.length,r,"value += x_val;",u,0,d,c,p,f)}},po=e=>{let t=0!==e.count_include_pad,n=lo(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let i={countIncludePad:t,...n,cacheKey:""};return{...i,cacheKey:so(i)}},fo=(e,t)=>{no(e.inputs),e.compute(co("AveragePool",e.inputs[0],!1,t))},ho={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},mo=e=>{let t=e.format;return{format:t,...ho,cacheKey:t}},go=(e,t)=>{no(e.inputs),e.compute(co("GlobalAveragePool",e.inputs[0],!0,t))},yo=(e,t,n,i)=>{let[r,a]=io(t,i,n),o=kt("x",t.dataType,t.dims.length),[s,u,l,d,c]=ro(a,r);return s.push(...$t(t.dims,a)),{name:e,shaderCache:{hint:`${i.cacheKey};${l};${d};${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(pt.size(a)/64)},programUniforms:s}),getShaderSource:e=>ao(e,o,t.dims.length,a.length,r,"\n      value = max(x_val, value);\n    ","",-1e5,u,l,d,c)}},vo=(e,t)=>{no(e.inputs),e.compute(yo("MaxPool",e.inputs[0],!1,t))},wo=e=>{let t=e.storage_order,n=e.dilations,i=lo(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==i.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let r={storageOrder:t,dilations:n,...i,cacheKey:""};return{...r,cacheKey:uo(r)}},_o=e=>{let t=e.format;return{format:t,...ho,cacheKey:t}},$o=(e,t)=>{no(e.inputs),e.compute(yo("GlobalMaxPool",e.inputs[0],!0,t))}})),bu=D((()=>{oe(),zs(),Us(),bo=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},xo=(e,t,n,i)=>{let r=Math.abs(Math.ceil((t-e)/n)),a=[r],o=r,s=[{type:12,data:o},{type:i,data:e},{type:i,data:n},...$t(a)];return{name:"Range",shaderCache:{hint:`${i}`},getShaderSource:e=>{let t=Tt("output",i,a.length),n=t.type.value,r=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(r).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:s})}},Co=e=>{let t=0,n=0,i=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],i=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],i=e.inputs[2].getFloat32Array()[0]),d.webgpu.validateInputContent&&bo(t,n,i),e.compute(xo(t,n,i,e.inputs[0].dataType),{inputs:[]})}})),xu=D((()=>{zs(),Ns(),Ds(),Us(),So=(e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},Eo=(e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));let i=new Array(n).fill(1);return t.forEach(((t,n)=>i[t]=e[n])),i},Io=(e,t,n,i,r,a)=>{let[o,s,u]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],l=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach((e=>a.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(s>0&&e.length>s&&e[s].dims.length>0){if(e[s].getFloat32Array().forEach((e=>i.push(e))),0!==i.length&&i.length!==l&&n>=18&&i.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");So(i,t),t.axes.length>0&&Eo(i,t.axes,l).forEach(((e,t)=>i[t]=e))}if(u>0&&e.length>u&&(e[u].getBigInt64Array().forEach((e=>r.push(Number(e)))),r.length!==l||n>=18&&r.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(i.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(r.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof i<"u"&&typeof r<"u"&&i.length>0&&r.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},ko=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",To=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Ao=(e,t,n)=>{let i=new Array(n).fill(0).concat(new Array(n).fill(1)),r=0===e.length?i:e.slice();return t.length>0?(t.forEach(((e,a)=>{i[e]=r[a],i[a+n]=r[t.length+a]})),i):r},Oo=(e,t,n,i)=>{let r=[];if(n.length>0)if(i.length>0){if(e.forEach((e=>r.push(e))),Math.max(...i)>e.length)throw new Error("axes is out of bound");i.forEach(((e,t)=>r[e]=n[t]))}else n.forEach((e=>r.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");r=e.map(((e,n)=>Math.round(e*t[n])))}return r},zo=(e,t,n)=>{let i=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map((e=>t[e])),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map((e=>t[e])),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let r=e.slice();return n.axes.length>0?(n.axes.forEach((e=>t[e]=i)),n.axes.forEach((n=>r[n]=Math.round(e[n]*t[n])))):(t.fill(i,0,t.length),r.forEach(((e,n)=>r[n]=Math.round(e*t[n])))),r},Ro=(e,t,n,i,r)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${Et("uniforms.scales","i",i)};\n        var roi_low = ${Et("uniforms.roi","i",r)};\n        var roi_hi = ${Et("uniforms.roi",`i + ${t.length}`,r)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${Et("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${Et("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,jo=(e,t,n,i,r,a,o)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${i.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${Et("uniforms.scales","i",r)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${Et("uniforms.roi","i",a)};\n          var roi_hi = ${Et("uniforms.roi",`i + ${n.length}`,a)};\n          var input_shape_i = ${Et("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${Et("uniforms.output_shape","i",i.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${o} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Mo=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${Et("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Bo=(e,t,n,i)=>e.rank>i?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",Po=(e,t,n,i,r)=>{let[a,o,s,u]=2===n.length?[-1,0,1,-1]:[0,2,3,1],l=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${l} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",o,`max(0, min(row, ${n[o]} - 1))`)};\n      ${e.indicesSet("input_indices",s,`max(0, min(col, ${n[s]} - 1))`)};\n      ${Bo(e,u,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${l} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${l} = originalIndices[${o}];\n      var col:${l} = originalIndices[${s}];\n      ${i?`if (row < 0 || row > (${n[o]} - 1) || col < 0 || col > (${n[s]} - 1)) {\n        return ${r};\n      }`:""};\n      row = max(0, min(row, ${n[o]} - 1));\n      col = max(0, min(col, ${n[s]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${u}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${l} = getInputValue(batch, channel, row1, col1);\n      var x12: ${l} = getInputValue(batch, channel, row1, col2);\n      var x21: ${l} = getInputValue(batch, channel, row2, col1);\n      var x22: ${l} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${l} = abs(row - ${l}(row1));\n      var dx2: ${l} = abs(${l}(row2) - row);\n      var dy1: ${l} = abs(col - ${l}(col1));\n      var dy2: ${l} = abs(${l}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Do=(e,t,n,i,r,a,o,s,u,l)=>{let d=2===n.length,[c,p]=d?[0,1]:[2,3],f=e.type.value,h=o=>{let d=o===c?"row":"col";return`\n      fn ${d}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${f} {\n        var output_index = ${t.indicesGet("output_indices",o)};\n        var originalIdx: ${f} = getOriginalCoordinateFromResizedCoordinate(output_index, ${r[o]},\n        ${i[o]}, ${n[o]}, ${a[o]}, ${a[o]} + ${n.length});\n        var fractOriginalIdx: ${f} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${s} && (originalIdx < 0 || originalIdx > (${n[o]} - 1))) {\n          return ${u};\n        }\n        var data: array<${f}, 4> = array<${f}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${d}: ${f} = originalIdx + ${f}(i);\n          if (${d} < 0 || ${d} >= ${n[o]}) {\n            ${l?"coefs[i + 1] = 0.0;\n                        continue;":s?`return ${u};`:`${d} = max(0, min(${d}, ${n[o]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",o,`u32(${d})`)};\n          data[i + 1] = ${o===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${h(c)};\n    ${h(p)};\n  fn getCubicInterpolationCoefs(s: ${f}) -> array<${f}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${f}, 4> = array<${f}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${f} = 1.0 - absS;\n    var twoMinusAbsS: ${f} = 2.0 - absS;\n    var onePlusAbsS: ${f} = 1.0 + absS;\n    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};\n    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${f}, 4>, coefs: array<${f}, 4>) -> ${f} {\n    var coefsSum: ${f} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${f} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},No=(e,t,n,i,r)=>{let[a,o,s,u,l]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${n[o]} - 1))`)};\n      ${e.indicesSet("input_indices",s,`max(0, min(height, ${n[s]} - 1))`)};\n      ${e.indicesSet("input_indices",u,`max(0, min(width, ${n[u]} - 1))`)};\n      ${Bo(e,l,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${d} = originalIndices[${o}];\n      var height:${d} = originalIndices[${s}];\n      var width:${d} = originalIndices[${u}];\n      ${i?`if (depth < 0 || depth > (${n[o]} - 1) || height < 0 || height > (${n[s]} - 1) || width < 0 || (width > ${n[u]} - 1)) {\n      return ${r};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[o]} - 1));\n      height = max(0, min(height, ${n[s]} - 1));\n      width = max(0, min(width, ${n[u]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${d} = abs(depth - ${d}(depth1));\n      var dx2: ${d} = abs(${d}(depth2) - depth);\n      var dy1: ${d} = abs(height - ${d}(height1));\n      var dy2: ${d} = abs(${d}(height2) - height);\n      var dz1: ${d} = abs(width - ${d}(width1));\n      var dz2: ${d} = abs(${d}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Uo=(e,t,n,i,r,a)=>{let o=e.dims,s=Ao(a,t.axes,o.length),u=Oo(o,i,r,t.axes),l=i.slice();0===i.length&&(l=o.map(((e,t)=>0===e?1:u[t]/e)),"stretch"!==t.keepAspectRatioPolicy&&(u=zo(o,l,t)));let d=Tt("output",e.dataType,u.length),c=kt("input",e.dataType,o.length),p=pt.size(u),f=o.length===u.length&&o.every(((e,t)=>e===u[t])),h="tf_crop_and_resize"===t.coordinateTransformMode,m=t.extrapolationValue,g=c.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${l.length>0?l:""}|${r.length>0?r:""}|${s.length>0?s:""}|${f}|${o}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${f?"":`\n      ${ko(t.coordinateTransformMode,g)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Mo(c,o)};\n              ${To(t.nearestMode,n,g)};\n              ${jo(c,d,o,u,l.length,s.length,h)};\n              `;case"linear":return`\n              ${Ro(d,o,u,l.length,s.length)};\n              ${(()=>{if(2===o.length||4===o.length)return`${Po(c,d,o,h,m)}`;if(3===o.length||5===o.length)return`${No(c,d,o,h,m)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===o.length||4===o.length)return`${Do(c,d,o,u,l,s,t.cubicCoeffA,h,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",s.length).declareVariables(c,d)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${f?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${c.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${c.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===o.length||4===o.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:u,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:l},{type:1,data:s},...$t(o,u)]})}},Wo=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Lo=(e,t)=>{let n=[],i=[],r=[],a=Wo(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");Io(e.inputs,t,a,n,i,r),e.compute(Uo(e.inputs[0],t,a,n,i,r),{inputs:[0]})},Ho=e=>{let t=e.antialias,n=e.axes,i=e.coordinateTransformMode,r=e.cubicCoeffA,a=0!==e.excludeOutside,o=e.extrapolationValue,s=e.keepAspectRatioPolicy,u=e.mode,l=""===e.nearestMode?"simple":e.nearestMode;return lt({antialias:t,axes:n,coordinateTransformMode:i,cubicCoeffA:r,excludeOutside:a,extrapolationValue:o,keepAspectRatioPolicy:s,mode:u,nearestMode:l})}})),Cu=D((()=>{zs(),Ns(),Us(),Go=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],i=e[2];if(t.dataType!==n.dataType||t.dataType!==i.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let r=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==r)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==a)throw new Error("Skip must have the same sequence length as input");if(1!==i.dims.length)throw new Error("Gamma must be 1D");if(i.dims[i.dims.length-1]!==r)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==r)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==r)throw new Error("Bias must have the same hidden size as input")}},Vo=(e,t,n,i)=>{let r=e[0].dims,a=pt.size(r),o=r,s=a,u=r.slice(-1)[0],l=i?r.slice(0,-1).concat(1):[],d=e.length>3,c=e.length>4,p=i&&n>1,f=i&&n>2,h=n>3,m=bt(u),g=[{type:12,data:s},{type:12,data:m},{type:12,data:u},{type:1,data:t.epsilon}],y=[{dims:o,dataType:e[0].dataType}];return n>1&&y.push({dims:l,dataType:1}),n>2&&y.push({dims:l,dataType:1}),n>3&&y.push({dims:r,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${m};${p};${f};${h}`,inputDependencies:e.map(((e,t)=>"type"))},getShaderSource:t=>{let n=[kt("x",e[0].dataType,e[0].dims,m),kt("skip",e[1].dataType,e[1].dims,m),kt("gamma",e[2].dataType,e[2].dims,m)];d&&n.push(kt("beta",e[3].dataType,e[3].dims,m)),c&&n.push(kt("bias",e[4].dataType,e[4].dims,m)),n.push(Tt("output",e[0].dataType,o,m)),p&&n.push(Tt("mean_output",1,l)),f&&n.push(Tt("inv_std_output",1,l)),h&&n.push(Tt("input_skip_bias_sum",e[0].dataType,o,m));let i=wt(e[0].dataType);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${xt("f32",m)};\n        var squareSum = ${xt("f32",m)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${c?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${h?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Ct(i,m,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${St("sum",m)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${St("squareSum",m)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${p?"mean_output[global_idx] = mean;":""}\n        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${i}(mean)) * ${i}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};\n        }\n      }`},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(s/u/64)},programUniforms:g})}},Fo=(e,t)=>{Go(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(Vo(e.inputs,t,e.outputCount,!1),{outputs:n})}})),Su=D((()=>{zs(),Ns(),Ds(),Us(),qo=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))},Ko=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},Yo=(e,t)=>{if(e.length>1){let t=Ko(e,1),n=Ko(e,2),i=Ko(e,3);return 0===i.length&&(i=[...Array(e[0].dims.length).keys()]),lt({starts:t,ends:n,axes:i})}return t},Zo=(e,t,n,i,r)=>{let a=e;return e<0&&(a+=n[i[t]]),r[t]<0?Math.max(0,Math.min(a,n[i[t]]-1)):Math.max(0,Math.min(a,n[i[t]]))},Qo=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${Et("uniforms.input_shape","i",n.length)};\n            let steps_i = ${Et("uniforms.steps","i",n.length)};\n            let signs_i = ${Et("uniforms.signs","i",n.length)};\n            let starts_i = ${Et("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Jo=(e,t)=>{let n=e[0].dims,i=pt.size(n),r=t.axes.length>0?pt.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],a=Ko(e,4);a.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===a.length&&(a=Array(r.length).fill(1));let o=t.starts.map(((e,t)=>Zo(e,t,n,r,a))),s=t.ends.map(((e,t)=>Zo(e,t,n,r,a)));if(r.length!==o.length||r.length!==s.length)throw new Error("start, ends and axes should have the same number of elements");if(r.length!==n.length)for(let e=0;e<n.length;++e)r.includes(e)||(o.splice(e,0,0),s.splice(e,0,n[e]),a.splice(e,0,1));let u=a.map((e=>Math.sign(e)));a.forEach(((e,t,n)=>{if(e<0){let i=(s[t]-o[t])/e,r=o[t],u=r+i*a[t];o[t]=u,s[t]=r,n[t]=-e}}));let l=n.slice(0);r.forEach(((e,t)=>{l[e]=Math.ceil((s[e]-o[e])/a[e])}));let d={dims:l,dataType:e[0].dataType},c=Tt("output",e[0].dataType,l.length),p=kt("input",e[0].dataType,e[0].dims.length),f=pt.size(l),h=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:a.length}],m=[{type:12,data:f},{type:12,data:o},{type:6,data:u},{type:12,data:a},...$t(e[0].dims,l)];return{name:"Slice",shaderCache:{hint:`${u.length}_${o.length}_${a.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(h).declareVariables(p,c)}\n        ${Qo(p,c,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${c.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${c.setByOffset("global_idx",p.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:m})}},Xo=(e,t)=>{qo(e.inputs,t);let n=Yo(e.inputs,t);e.compute(Jo(e.inputs,n),{inputs:[0]})},es=e=>{let t=e.starts,n=e.ends,i=e.axes;return lt({starts:t,ends:n,axes:i})}})),Eu=D((()=>{zs(),Ns(),Ds(),Us(),ts=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},ns=(e,t)=>{let n=e.dims,i=pt.size(n),r=t.axis;if(r<0&&(r=n.length+r),r<n.length-1)throw new Error("softmax only supports last axis for now.");let a=n[r],o=i/a,s=bt(a),u=a/s,l=kt("x",e.dataType,e.dims,s),d=Tt("result",e.dataType,e.dims,s),c=l.type.value,p="f32"===wt(e.dataType)?`var threadMax = ${c}(-3.402823e+38f);`:`var threadMax = ${c}(-65504.0h);`;return{name:"Softmax",shaderCache:{hint:`${s}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:o},programUniforms:[{type:12,data:u}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${c};\n      var<workgroup> rowSumShared : ${c};\n      var<workgroup> threadShared : array<${c}, 64>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${c} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${c}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(l,d)}\n      ${e.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = 64;\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${p}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${c}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",s)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${c}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${c}(${St("threadShared[0]",s)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},is=(e,t)=>{ts(e.inputs),e.compute(ns(e.inputs[0],t))},rs=e=>lt({axis:e.axis})})),Iu=D((()=>{zs(),Ns(),Ds(),Us(),as=e=>{if(!e||e.length<1)throw new Error("too few inputs")},os=(e,t)=>{let n=[],i=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),i=n.length),lt({numOutputs:i,axis:t.axis,splitSizes:n})},ss=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${Et("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,us=e=>{let t=e.length,n=[];for(let i=0;i<t;++i){let r=e[i].setByIndices("indices","input[global_idx]");1===t?n.push(r):0===i?n.push(`if (output_number == ${i}u) { ${r} }`):i===t-1?n.push(`else { ${r} }`):n.push(`else if (output_number == ${i}) { ${r} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},ls=(e,t)=>{let n=e[0].dims,i=pt.size(n),r=e[0].dataType,a=pt.normalizeAxis(t.axis,n.length),o=new Array(t.numOutputs),s=kt("input",r,n.length),u=new Array(t.numOutputs),l=[],d=[],c=0,p=[{type:12,data:i}];for(let i=0;i<t.numOutputs;i++){c+=t.splitSizes[i],u[i]=c;let a=n.slice();a[t.axis]=t.splitSizes[i],d.push(a),o[i]=Tt(`output${i}`,r,a.length),l.push({dims:d[i],dataType:e[0].dataType})}p.push({type:12,data:u},...$t(n,...d));return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(s,...o)}\n  ${ss(u.length)}\n  ${us(o)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${s.offsetToIndices("global_idx")};\n    var index = ${s.indicesGet("indices",a)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${Et("uniforms.size_in_split_axis","output_number - 1u",u.length)};\n      ${s.indicesSet("indices",a,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p})}},ds=(e,t)=>{as(e.inputs);let n=1===e.inputs.length?t:os(e.inputs,t);e.compute(ls(e.inputs,n),{inputs:[0]})},cs=e=>{let t=e.axis,n=e.splitSizes,i=e.numOutputs<0?n.length:e.numOutputs;if(i!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return lt({axis:t,numOutputs:i,splitSizes:n})}})),ku=D((()=>{zs(),Ns(),Us(),ps=e=>Array.from(e.getBigInt64Array(),Number),fs=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(ps(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},hs=(e,t)=>{let n=[];for(let i=0;i<e.length;++i)n.push(e[i]*t[i]);return n},ms=e=>{let t=e[0].dims,n=ps(e[1]),i=hs(t,n),r=pt.size(i),a=e[0].dataType,o=kt("input",a,t.length),s=Tt("output",a,i.length);return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:[{type:12,data:r},...$t(e[0].dims,i)]}),getShaderSource:e=>`\n      const inputShape = ${o.indices(...t)};\n      ${e.registerUniform("output_size","u32").declareVariables(o,s)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${s.offsetToIndices("global_idx")};\n      var input_indices: ${o.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${s.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${o.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${s.setByOffset("global_idx",o.getByIndices("input_indices"))}\n    }`}},gs=e=>{fs(e.inputs),e.compute(ms(e.inputs),{inputs:[0]})}})),Tu=D((()=>{zs(),Ns(),Us(),ys=(e,t,n,i,r)=>{let a,o=Tt("output_data",r,n.length,4),s=kt("a_data",t[1].dataType,t[1].dims.length,4),u=kt("b_data",t[2].dataType,t[2].dims.length,4),l=kt("c_data",t[0].dataType,t[0].dims.length,4),d=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(i){let e=(e,t,n="")=>{let i=`a_data[index_a${t}][component_a${t}]`,r=`b_data[index_b${t}][component_b${t}]`,a=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\n            let output_indices${t} = ${o.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${s.broadcastedIndicesToOffset(`output_indices${t}`,o)};\n            let offset_b${t} = ${u.broadcastedIndicesToOffset(`output_indices${t}`,o)};\n            let offset_c${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,o)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            let component_c${t} = offset_c${t} % 4u;\n            ${e}[${t}] = ${n}(${d(i,r,a)});\n          `};a=9===r?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else a=o.setByOffset("global_idx",d(s.getByOffset("global_idx"),u.getByOffset("global_idx"),l.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(l,s,u,o)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${a}\n      }`},vs=e=>{let t=e[1].dims,n=e[2].dims,i=e[0].dims,r=e[1].dataType,a=!(pt.areEqual(t,n)&&pt.areEqual(n,i)),o=t,s=pt.size(t);if(a){let e=ct.calcShape(ct.calcShape(t,n,!1),i,!1);if(!e)throw new Error("Can't perform where op on the given tensors");o=e,s=pt.size(o)}let u=Math.ceil(s/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>ys(t,e,o,a,r),getRunData:()=>({outputs:[{dims:o,dataType:r}],dispatchGroup:{x:Math.ceil(s/64/4)},programUniforms:[{type:12,data:u},...$t(i,t,n,o)]})}},ws=e=>{e.compute(vs(e.inputs))}})),Au=D((()=>{Gs(),Vs(),Fs(),qs(),Ys(),Zs(),Qs(),au(),uu(),lu(),du(),cu(),pu(),fu(),hu(),mu(),gu(),yu(),ru(),vu(),wu(),_u(),$u(),bu(),Hs(),xu(),Cu(),Su(),Eu(),Iu(),ku(),Ws(),Ks(),Tu(),_s=new Map([["Abs",[ti]],["Acos",[ni]],["Acosh",[ii]],["Add",[qi]],["ArgMax",[Pn,Dn]],["ArgMin",[Bn,Dn]],["Asin",[ri]],["Asinh",[ai]],["Atan",[oi]],["Atanh",[si]],["Attention",[Vn]],["AveragePool",[fo,po]],["BatchNormalization",[Yn]],["BiasAdd",[Jn]],["BiasSplitGelu",[Hi]],["Cast",[li,ui]],["Ceil",[pi]],["Clip",[ci]],["Concat",[sr,ur]],["Conv",[Pr,jr]],["ConvTranspose",[Qr,Fr]],["Cos",[fi]],["Cosh",[hi]],["CumSum",[Xr,ea]],["Div",[Ki]],["Einsum",[la,da]],["Elu",[gi,mi]],["Equal",[Yi]],["Erf",[vi]],["Exp",[wi]],["Expand",[ma]],["FastGelu",[ya]],["Floor",[_i]],["FusedConv",[Pr,jr]],["Gather",[$a,_a]],["GatherElements",[Sa,Ca]],["Gelu",[$i]],["Gemm",[Ta,ka]],["GlobalAveragePool",[go,mo]],["GlobalMaxPool",[$o,_o]],["Greater",[Xi]],["GreaterOrEqual",[tr]],["HardSigmoid",[Ti,ki]],["InstanceNormalization",[Ra]],["LayerNormalization",[Ba]],["LeakyRelu",[bi,mi]],["Less",[er]],["LessOrEqual",[nr]],["Log",[Ui]],["MatMul",[Tr]],["MatMulNBits",[Na,Ua]],["MaxPool",[vo,wo]],["Mul",[Zi]],["MultiHeadAttention",[Fa,La]],["Neg",[Ci]],["Not",[xi]],["Pad",[to]],["Pow",[Qi]],["Range",[Co]],["Reciprocal",[Si]],["ReduceMin",[An]],["ReduceMean",[Sn]],["ReduceMax",[Tn]],["ReduceSum",[zn]],["ReduceProd",[On]],["ReduceL1",[En]],["ReduceL2",[In]],["ReduceLogSum",[jn]],["ReduceLogSumExp",[kn]],["ReduceSumSquare",[Rn]],["Relu",[Ei]],["Resize",[Lo,Ho]],["Sigmoid",[Ii]],["Sin",[Ai]],["Sinh",[Oi]],["Slice",[Xo,es]],["SkipLayerNormalization",[Fo]],["Split",[ds,cs]],["Sqrt",[zi]],["Softmax",[is,rs]],["Sub",[Ji]],["Tan",[Ri]],["Tanh",[Mi]],["ThresholdedRelu",[Ni,mi]],["Tile",[gs]],["Transpose",[Nt,Ut]],["Where",[ws]]])})),Ou=D((()=>{oe(),js(),Us(),$s=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,i,r){k(e.programInfo.name);let a=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let s=[];for(let e of t)s.push({binding:s.length,resource:{buffer:e.buffer}});for(let e of n)s.push({binding:s.length,resource:{buffer:e.buffer}});r&&s.push({binding:s.length,resource:r});let u=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:s,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:u,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}o.setPipeline(e.computePipeline),o.setBindGroup(0,u),o.dispatchWorkgroups(...i),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),T(e.programInfo.name)}dispose(){}build(e,t){k(e.name);let n=this.backend.device,i=[];n.features.has("shader-f16")&&i.push("enable f16;");let r=zt(t),a=e.getShaderSource(r),o=`${i.join("\n")}\n${r.additionalImplementations}\n${a}`,s=n.createShaderModule({code:o,label:e.name});et("verbose",(()=>`[WebGPU] ${e.name} shader code: ${o}`));let u=n.createComputePipeline({compute:{module:s,entryPoint:"main"},layout:"auto",label:e.name});return T(e.name),{programInfo:e,computePipeline:u}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,i="number"==typeof e?1:e.z||1,r=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=r&&n<=r&&i<=r)return[t,n,i];let a=t*n*i,o=Math.ceil(Math.sqrt(a));if(o>r){if(o=Math.ceil(Math.cbrt(a)),o>r)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}return[o,o,1]}}})),zu=D((()=>{oe(),zs(),js(),Ms(),Ps(),Au(),Ou(),bs=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let i=0;i<e.length;++i){let r=e[i].dataType;switch(t[i]){case"none":n.push("");break;case"type":n.push(`${r}`);break;case"rank":{let t=e[i].dims.length;n.push(`${r};${t}`);break}case"dims":{let t=e[i].dims.join(",");n.push(`${r};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[i]}`)}}return n.join("|")},xs=(e,t,n)=>{let i=e.name;return e.shaderCache?.hint&&(i+="["+e.shaderCache.hint+"]"),i+=":"+n+`:${bs(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,i},Cs=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n};t.features.has("chromium-experimental-timestamp-query-inside-passes")?n.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&n.push("timestamp-query"),t.features.has("shader-f16")&&n.push("shader-f16"),this.device=await t.requestDevice(i),this.gpuDataManager=st(this),this.programManager=new $s(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Je(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;k(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then((()=>{let t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){let i=n[e],r=i.kernelId,a=this.kernels.get(r),o=a.kernelType,s=a.kernelName,u=i.programName,l=i.inputTensorViews,d=i.outputTensorViews,c=t[2*e],p=t[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=c);let f=Number(c-this.queryTimeBase),h=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(f)||!Number.isSafeInteger(h))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:l.map((e=>({dims:e.dims,dataType:We(e.dataType)}))),outputsMetadata:d.map((e=>({dims:e.dims,dataType:We(e.dataType)}))),kernelId:r,kernelType:o,kernelName:s,programName:u,startTime:f,endTime:h});else{let e="";l.forEach(((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${We(t.dataType)}, `}));let t="";d.forEach(((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${We(e.dataType)}, `})),console.log(`[profiling] kernel "${r}|${o}|${s}|${u}" ${e}${t}execution time: ${h-f} ns`)}E("GPU",`${u}::${c}::${p}`)}e.unmap(),this.pendingQueries.delete(e)})),T()}run(e,t,n,i,r){k(e.name);let a=[];for(let e=0;e<t.length;++e){let n=t[e].data;if(0===n)continue;let i=this.gpuDataManager.get(n);if(!i)throw new Error(`no GPU data for input: ${n}`);a.push(i)}let{outputs:o,dispatchGroup:s,programUniforms:u}=e.getRunData(t),l=0===n.length?o.map(((e,t)=>t)):n;if(l.length!==o.length)throw new Error(`Output size ${l.length} must be equal to ${o.length}.`);let d,c=[],p=[];for(let e=0;e<o.length;++e){if(!Number.isInteger(l[e])||l[e]<-3||l[e]>=o.length)throw new Error(`Invalid output index: ${l[e]}`);if(-3===l[e])continue;let t=-1===l[e],n=-2===l[e],a=t||n?r(o[e].dataType,o[e].dims):i(l[e],o[e].dataType,o[e].dims);if(c.push(a),0===a.data)continue;let s=this.gpuDataManager.get(a.data);if(!s)throw new Error(`no GPU data for output: ${a.data}`);if(t&&this.temporaryData.push(s),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(s)}p.push(s)}if(a.length!==t.length||p.length!==c.length){if(0===p.length)return T(e.name),c;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(u){let e=0,t=[];u.forEach((n=>{let i="number"==typeof n.data?[n.data]:n.data;if(0===i.length)return;let r,a,o=10===n.type?2:4;10===n.type?(a=i.length>4?16:i.length>2?8:i.length*o,r=i.length>4?16:o*i.length):(a=i.length<=2?i.length*o:16,r=16),e=Math.ceil(e/a)*a,t.push(e);let s=10===n.type?8:4;e+=i.length>4?Math.ceil(i.length/s)*r:i.length*o}));let n=16;e=Math.ceil(e/n)*n;let i=new ArrayBuffer(e);u.forEach(((e,n)=>{let r=t[n],a="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(i,r,a.length).set(a);else if(12===e.type)new Uint32Array(i,r,a.length).set(a);else if(10===e.type)new Uint16Array(i,r,a.length).set(a);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${We(e.type)}`);new Float32Array(i,r,a.length).set(a)}}));let r=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(r.buffer,0,i,0,e),this.gpuDataManager.release(r.id),d={offset:0,size:e,buffer:r.buffer}}let f=this.programManager.normalizeDispatchGroupSize(s),h=1===f[1]&&1===f[2],m=xs(e,t,h),g=this.programManager.getArtifact(m);if(g||(g=this.programManager.build(e,f),this.programManager.setArtifact(m,g),et("info",(()=>`[artifact] key: ${m}, programName: ${e.name}`))),et("info",(()=>`[ProgramManager] run "${e.name}" (key=${m}) with ${f[0]}x${f[1]}x${f[2]}`)),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:t,outputTensorViews:c};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(g,a,p,f,d),T(e.name),c}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,i){let r=_s.get(e);if(!r)throw new Error(`kernel not implemented: ${e}`);let a={kernelType:e,kernelName:i,kernelEntry:r[0],attributes:[r[1],n]};this.kernels.set(t,a)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let i=this.kernels.get(e);if(!i)throw new Error(`kernel not created: ${e}`);let r=i.kernelType,a=i.kernelName,o=i.kernelEntry,s=i.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${r}] ${a}" is not allowed to be called recursively`);this.currentKernelId=e,s[0]&&(s[1]=s[0](s[1]),s[0]=void 0),et("info",(()=>`[WebGPU] Start to run kernel "[${r}] ${a}"...`));let u=this.env.debug;this.temporaryData=[];try{return u&&this.device.pushErrorScope("validation"),o(t,s[1]),0}catch(e){return n.push(Promise.resolve(`[WebGPU] Kernel "[${r}] ${a}" failed. ${e}`)),1}finally{u&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${r}] ${a}": ${e.message}`:null)));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,i){let r=this.sessionExternalDataMapping.get(e);r||(r=new Map,this.sessionExternalDataMapping.set(e,r));let a=r.get(t),o=this.gpuDataManager.registerExternalBuffer(n,i,a?.[1]);return r.set(t,[o,n]),o}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach((e=>this.gpuDataManager.unregisterExternalBuffer(e[1]))),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let i=await at(this,e,t);return tt(i.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",("default"===this.env.webgpu.profiling?.mode||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){et("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){et("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){et("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let i=0;i<n;i++){let n=this.getComputePassEncoder(),r=e[i];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(r.computePipeline),n.setBindGroup(0,r.bindGroup),n.dispatchWorkgroups(...r.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}})),Ru={};U(Ru,{init:()=>Bu});var ju,Mu,Bu,Pu,Du,Nu,Uu,Wu,Lu,Hu,Gu,Vu,Fu,qu,Ku,Yu,Zu,Qu,Ju,Xu,el,tl,nl,il,rl,al,ol,sl,ul,ll,dl,cl,pl,fl,hl,ml,gl,yl,vl=D((()=>{zs(),zu(),js(),Ns(),ju=class e{constructor(e,t,n,i){this.module=e,this.dataType=t,this.data=n,this.dims=i}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=pt.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=pt.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=pt.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(pt.size(t)!==pt.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Mu=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0;let i=e.HEAPU32,r=n>>>2;this.opKernelContext=i[r++];let a=i[r++];this.outputCount=i[r++],this.customDataOffset=i[r++],this.customDataSize=i[r++];let o=[];for(let t=0;t<a;t++){let t=i[r++],n=i[r++],a=i[r++],s=[];for(let e=0;e<a;e++)s.push(i[r++]);o.push(new ju(e,t,n,s))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){let n=t?.inputs?.map((e=>"number"==typeof e?this.inputs[e]:e))??this.inputs,i=t?.outputs??[];return this.backend.run(e,n,i,((e,t,n)=>new ju(this.module,t,this.output(e,n),n)),((e,t)=>{let n=Le(e);if(!n)throw new Error(`Unsupported data type: ${e}`);let i=n*pt.size(t),r=i>0?this.backend.gpuDataManager.create(i).id:0;return new ju(this.module,e,r,t)}))}output(e,t){let n=this.module.stackSave();try{let n=this.module.stackAlloc(4*(1+t.length)),i=n>>2;this.module.HEAPU32[i++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[i++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(n)}}},Bu=async(e,t,n)=>{let i=e.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let r=new Cs;await r.initialize(t,n),i(r,(e=>r.alloc(e)),(e=>r.free(e)),((t,n,i,a=!1)=>{if(a)et("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${i}`)),r.memcpy(t,n);else{et("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${i}`));let a=e.HEAPU8.subarray(t>>>0,(t>>>0)+i);r.upload(n,a)}}),(async(t,n,i)=>{et("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${i}`)),await r.download(t,(()=>e.HEAPU8.subarray(n>>>0,(n>>>0)+i)))}),((t,n,i)=>r.createKernel(t,n,i,e.UTF8ToString(e._JsepGetNodeName(n)))),(e=>r.releaseKernel(e)),((t,n,i,a)=>{et("verbose",(()=>`[WebGPU] jsepRun: sessionHandle=${i}, kernel=${t}, contextDataOffset=${n}`));let o=new Mu(e,r,n);return r.computeKernel(t,o,a)}),(()=>r.captureBegin()),(()=>r.captureEnd()),(()=>r.replay()))}})),wl=D((()=>{As(),Os(),zs(),ks(),Ts(),Rs(),Pu=(e,t)=>{0!==Ae()._OrtInit(e,t)&&Re("Can't initialize onnxruntime.")},Du=async e=>{Pu(e.wasm.numThreads,Ge(e.logLevel))},Nu=async(e,t)=>{if("webgpu"===t||"webnn"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=await navigator.gpu.requestAdapter();if(!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let n=(vl(),W(Ru)).init;await n(Ae(),e,t)}},Uu=new Map,Wu=e=>{let t=Ae(),n=t.stackSave();try{let n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&Re("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}},Lu=e=>{let t=Ae(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},Hu=async(e,t)=>{let n,i,r=Ae();Array.isArray(e)?[n,i]=e:e.buffer===r.HEAPU8.buffer?[n,i]=[e.byteOffset,e.byteLength]:[n,i]=Lu(e);let a=0,o=0,s=0,u=[],l=[],d=[];try{if([o,u]=Ne(t),t?.externalData&&r.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(qe("string"==typeof n?n:n.data).then((e=>{r.mountExternalData(t,e)})))}await Promise.all(e)}a=await r._OrtCreateSession(n,i,o),0===a&&Re("Can't create a session.");let[e,c]=Wu(a),p=!!t?.enableGraphCapture,f=[],h=[],m=[];for(let t=0;t<e;t++){let e=r._OrtGetInputName(a,t);0===e&&Re("Can't get an input name."),l.push(e),f.push(r.UTF8ToString(e))}for(let e=0;e<c;e++){let n=r._OrtGetOutputName(a,e);0===n&&Re("Can't get an output name."),d.push(n);let i=r.UTF8ToString(n);h.push(i);{if(p&&void 0===t?.preferredOutputLocation){m.push("gpu-buffer");continue}let e="string"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[i]??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(p&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);m.push(e)}}let g=null;return m.some((e=>"gpu-buffer"===e))&&(s=r._OrtCreateBinding(a),0===s&&Re("Can't create IO binding."),g={handle:s,outputPreferredLocations:m,outputPreferredLocationsEncoded:m.map((e=>Fe(e)))}),Uu.set(a,[a,l,d,g,p,!1]),[a,f,h]}catch(e){throw l.forEach((e=>r._OrtFree(e))),d.forEach((e=>r._OrtFree(e))),0!==s&&r._OrtReleaseBinding(s),0!==a&&r._OrtReleaseSession(a),e}finally{r._free(n),0!==o&&r._OrtReleaseSessionOptions(o),u.forEach((e=>r._free(e))),r.unmountExternalData?.()}},Gu=e=>{let t=Ae(),n=Uu.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[i,r,a,o,s]=n;o&&(s&&t._OrtClearBoundOutputs(o.handle),t._OrtReleaseBinding(o.handle)),t.jsepOnReleaseSession?.(e),r.forEach((e=>t._OrtFree(e))),a.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(i),Uu.delete(e)},Vu=(e,t,n,i,r,a=!1)=>{if(!e)return void t.push(0);let o,s,u=Ae(),l=e[0],d=e[1],c=e[3];if("string"===l&&"gpu-buffer"===c)throw new Error("String tensor is not supported on GPU.");if(a&&"gpu-buffer"!==c)throw new Error(`External buffer must be provided for input/output index ${r} when enableGraphCapture is true.`);if("gpu-buffer"===c){let t=e[2].gpuBuffer,n=Le(Ue(l));s=d.reduce(((e,t)=>e*t),1)*n,o=u.jsepRegisterBuffer(i,r,t,s)}else{let t=e[2];if(Array.isArray(t)){s=4*t.length,o=u._malloc(s),n.push(o);let e=o/4;for(let i=0;i<t.length;i++){if("string"!=typeof t[i])throw new TypeError(`tensor data at index ${i} is not a string`);u.HEAPU32[e++]=Oe(t[i],n)}}else s=t.byteLength,o=u._malloc(s),n.push(o),u.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,s),o)}let p=u.stackSave(),f=u.stackAlloc(4*d.length);try{let e=f/4;d.forEach((t=>u.HEAP32[e++]=t));let n=u._OrtCreateTensor(Ue(l),o,s,f,d.length,Fe(c));0===n&&Re(`Can't create tensor for input/output. session=${i}, index=${r}.`),t.push(n)}finally{u.stackRestore(p)}},Fu=async(e,t,n,i,r,a)=>{let o=Ae(),s=Uu.get(e);if(!s)throw new Error(`cannot run inference. invalid session id: ${e}`);let u=s[0],l=s[1],d=s[2],c=s[3],p=s[4],f=s[5],h=t.length,m=i.length,g=0,y=[],v=[],w=[],_=[],$=o.stackSave(),b=o.stackAlloc(4*h),x=o.stackAlloc(4*h),C=o.stackAlloc(4*m),S=o.stackAlloc(4*m);try{[g,y]=je(a);for(let i=0;i<h;i++)Vu(n[i],v,_,e,t[i],p);for(let t=0;t<m;t++)Vu(r[t],w,_,e,h+i[t],p);let s,$=b/4,E=x/4,I=C/4,k=S/4;for(let e=0;e<h;e++)o.HEAPU32[$++]=v[e],o.HEAPU32[E++]=l[t[e]];for(let e=0;e<m;e++)o.HEAPU32[I++]=w[e],o.HEAPU32[k++]=d[i[e]];if(c&&!f){let{handle:n,outputPreferredLocations:a,outputPreferredLocationsEncoded:s}=c;if(l.length!==h)throw new Error(`input count from feeds (${h}) is expected to be always equal to model's input count (${l.length}).`);for(let i=0;i<h;i++){let r=t[i];0!==await o._OrtBindInput(n,l[r],v[i])&&Re(`Can't bind input[${i}] for session=${e}.`)}for(let t=0;t<m;t++){let u=i[t];r[t]?.[3]?0!==o._OrtBindOutput(n,d[u],w[t],0)&&Re(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==o._OrtBindOutput(n,d[u],0,s[u])&&Re(`Can't bind output[${t}] to ${a[t]} for session=${e}.`)}Uu.set(e,[u,l,d,c,p,!0])}o.jsepOnRunStart?.(u),s=c?await o._OrtRunWithBinding(u,c.handle,m,C,g):await o._OrtRun(u,x,b,h,S,m,C,g),0!==s&&Re("failed to call OrtRun().");let T=[];for(let e=0;e<m;e++){let t=o.HEAPU32[C/4+e];if(t===w[e]){T.push(r[e]);continue}let n,a=o.stackSave(),s=o.stackAlloc(16),u=!1,l=0;try{0!==o._OrtGetTensorData(t,s,s+4,s+8,s+12)&&Re(`Can't access output tensor data on index ${e}.`);let r=s/4,a=o.HEAPU32[r++];l=o.HEAPU32[r++];let d=o.HEAPU32[r++],p=o.HEAPU32[r++],f=[];for(let e=0;e<p;e++)f.push(o.HEAPU32[d/4+e]);o._OrtFree(d);let h=f.reduce(((e,t)=>e*t),1);n=We(a);let m=c?.outputPreferredLocations[i[e]];if("string"===n){if("gpu-buffer"===m)throw new Error("String tensor is not supported on GPU.");let e=[],t=l/4;for(let n=0;n<h;n++){let i=o.HEAPU32[t++],r=n===h-1?void 0:o.HEAPU32[t]-i;e.push(o.UTF8ToString(i,r))}T.push([n,f,e,"cpu"])}else if("gpu-buffer"===m&&h>0){let e=o.jsepGetBuffer(l),i=Le(a);if(void 0===i||!Ve(n))throw new Error(`Unsupported data type: ${n}`);u=!0,T.push([n,f,{gpuBuffer:e,download:o.jsepCreateDownloader(e,h*i,n),dispose:()=>{o._OrtReleaseTensor(t)}},"gpu-buffer"])}else{let e=new(He(n))(h);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(o.HEAPU8.subarray(l,l+e.byteLength)),T.push([n,f,e,"cpu"])}}finally{o.stackRestore(a),"string"===n&&l&&o._free(l),u||o._OrtReleaseTensor(t)}}return c&&!p&&(o._OrtClearBoundOutputs(c.handle),Uu.set(e,[u,l,d,c,p,!1])),T}finally{o.stackRestore($),v.forEach((e=>o._OrtReleaseTensor(e))),w.forEach((e=>o._OrtReleaseTensor(e))),_.forEach((e=>o._free(e))),0!==g&&o._OrtReleaseRunOptions(g),y.forEach((e=>o._free(e)))}},qu=e=>{let t=Ae(),n=Uu.get(e);if(!n)throw new Error("invalid session id");let i=n[0],r=t._OrtEndProfiling(i);0===r&&Re("Can't get an profile file name."),t._OrtFree(r)},Ku=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}})),_l=N(((e,t)=>{t.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var xi=Object.defineProperty;var ch=Object.getOwnPropertyDescriptor;var fh=Object.getOwnPropertyNames;var ph=Object.prototype.hasOwnProperty;var oe=(e,r)=>()=>(e&&(r=e(e=0)),r);var sn=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),Hn=(e,r)=>{for(var t in r)xi(e,t,{get:r[t],enumerable:!0})},mh=(e,r,t,u)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of fh(r))!ph.call(e,s)&&s!==t&&xi(e,s,{get:()=>r[s],enumerable:!(u=ch(r,s))||u.enumerable});return e};var ir=e=>mh(xi({},"__esModule",{value:!0}),e);var Ln={};Hn(Ln,{createReadStream:()=>Us,readFile:()=>hh,readFileSync:()=>gh});var hh,gh,Us,Fn=oe(()=>{hh=void 0,gh=void 0,Us=void 0});var Ii={};Hn(Ii,{join:()=>yh});var yh,Ai=oe(()=>{yh=void 0});var Ns=sn((Vs,Ti)=>{"use strict";var js=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){var t=r,u,s;t.ready=new Promise((n,i)=>{u=n,s=i}),t.mountExternalData=(n,i)=>{(t.Nh||(t.Nh=new Map)).set(n,i)},t.unmountExternalData=()=>{delete t.Nh},t.jsepInit=(n,i,o,a,l,c,h,g,v,_,x)=>{t.ui=n,t.gi=i,t.ki=o,t.Th=a,t.ji=l,t.he=c,t.li=h,t.ni=g,t.hi=v,t.ii=_,t.mi=x,i=(E,B,I)=>(...U)=>{let K=mt,re=B?.();U=E(...U);let le=B?.();return re!==le&&(E=le,I(re),B=I=null),mt!=K?In():U},o=E=>async(...B)=>{try{if(t.Kh)throw Error("Session already started");let I=t.Kh={oi:B[0],errors:[]},U=await E(...B);if(t.Kh!==I)throw Error("Session mismatch");n.flush();let K=I.errors;if(0<K.length){let re=await Promise.all(K);if(re=re.filter(le=>le),0<re.length)throw Error(re.join(`\n`))}return U}finally{t.Kh=null}},t._OrtCreateSession=i(t._OrtCreateSession,()=>t._OrtCreateSession,E=>t._OrtCreateSession=E),t._OrtRun=o(i(t._OrtRun,()=>t._OrtRun,E=>t._OrtRun=E)),t._OrtRunWithBinding=o(i(t._OrtRunWithBinding,()=>t._OrtRunWithBinding,E=>t._OrtRunWithBinding=E)),t._OrtBindInput=i(t._OrtBindInput,()=>t._OrtBindInput,E=>t._OrtBindInput=E),t.jsepRegisterBuffer=(E,B,I,U)=>n.registerBuffer(E,B,I,U),t.jsepGetBuffer=E=>n.getBuffer(E),t.jsepCreateDownloader=(E,B,I)=>n.createDownloader(E,B,I),t.jsepOnReleaseSession=E=>{n.onReleaseSession(E)},t.jsepOnRunStart=E=>n.onRunStart(E)};var f=Object.assign({},t),m="./this.program",d=(n,i)=>{throw i},y=typeof window=="object",w=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$="",T,P,A;if(C){var O=(Fn(),ir(Ln)),R=(Ai(),ir(Ii));$=w?R.dirname($)+"/":__dirname+"/",T=(n,i)=>(n=fe(n)?new URL(n):R.normalize(n),O.readFileSync(n,i?void 0:"utf8")),A=n=>(n=T(n,!0),n.buffer||(n=new Uint8Array(n)),n),P=(n,i,o,a=!0)=>{n=fe(n)?new URL(n):R.normalize(n),O.readFile(n,a?void 0:"utf8",(l,c)=>{l?o(l):i(a?c.buffer:c)})},!t.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),d=(n,i)=>{throw process.exitCode=n,i},t.inspect=()=>"[Emscripten Module object]"}else(y||w)&&(w?$=self.location.href:typeof document<"u"&&document.currentScript&&($=document.currentScript.src),e&&($=e),$.indexOf("blob:")!==0?$=$.substr(0,$.replace(/[?#].*/,"").lastIndexOf("/")+1):$="",T=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.send(null),i.responseText},w&&(A=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.responseType="arraybuffer",i.send(null),new Uint8Array(i.response)}),P=(n,i,o)=>{var a=new XMLHttpRequest;a.open("GET",n,!0),a.responseType="arraybuffer",a.onload=()=>{a.status==200||a.status==0&&a.response?i(a.response):o()},a.onerror=o,a.send(null)});var D=console.log.bind(console),k=console.error.bind(console);Object.assign(t,f),f=null,typeof WebAssembly!="object"&&Ye("no native wasm support detected");var G,V=!1,q,Y,J,ie,ge,L,ue,je,Ne,_e,ae;function ye(){var n=G.buffer;t.HEAP8=Y=new Int8Array(n),t.HEAP16=ie=new Int16Array(n),t.HEAPU8=J=new Uint8Array(n),t.HEAPU16=ge=new Uint16Array(n),t.HEAP32=L=new Int32Array(n),t.HEAPU32=ue=new Uint32Array(n),t.HEAPF32=je=new Float32Array(n),t.HEAPF64=ae=new Float64Array(n),t.HEAP64=Ne=new BigInt64Array(n),t.HEAPU64=_e=new BigUint64Array(n)}var Me=[],Ae=[],$e=[],Se=0,xe=null,De=null;function Ye(n){throw n="Aborted("+n+")",k(n),V=!0,q=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),s(n),n}var te=n=>n.startsWith("data:application/octet-stream;base64,"),fe=n=>n.startsWith("file://"),Ie;if(Ie="ort-wasm-simd.wasm",!te(Ie)){var st=Ie;Ie=t.locateFile?t.locateFile(st,$):$+st}function et(n){if(A)return A(n);throw"both async and sync fetching of the wasm failed"}function lt(n){if(y||w){if(typeof fetch=="function"&&!fe(n))return fetch(n,{credentials:"same-origin"}).then(i=>{if(!i.ok)throw"failed to load wasm binary file at \'"+n+"\'";return i.arrayBuffer()}).catch(()=>et(n));if(P)return new Promise((i,o)=>{P(n,a=>i(new Uint8Array(a)),o)})}return Promise.resolve().then(()=>et(n))}function It(n,i,o){return lt(n).then(a=>WebAssembly.instantiate(a,i)).then(a=>a).then(o,a=>{k(`failed to asynchronously prepare wasm: ${a}`),Ye(a)})}function Fe(n,i){var o=Ie;return typeof WebAssembly.instantiateStreaming!="function"||te(o)||fe(o)||C||typeof fetch!="function"?It(o,n,i):fetch(o,{credentials:"same-origin"}).then(a=>WebAssembly.instantiateStreaming(a,n).then(i,function(l){return k(`wasm streaming compile failed: ${l}`),k("falling back to ArrayBuffer instantiation"),It(o,n,i)}))}var Qe={1380064:(n,i,o,a)=>{if(typeof t>"u"||!t.Nh)return 1;if(n=Xe(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=t.Nh.get(n),!n)return 2;if(i>>>=0,o>>>=0,i+o>n.byteLength)return 3;try{return J.set(n.subarray(i,i+o),a>>>0>>>0),0}catch{return 4}},1380565:(n,i,o)=>{o=Xe(o);let a=new Uint8Array(i);a.set(J.subarray(n>>>0,n+i>>>0)),typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string"?(Fn(),ir(Ln)).writeFileSync(o,a):(n=new File([a],o,{type:"application/octet-stream"}),n=URL.createObjectURL(n),window.open(n,"_blank"))},1381073:()=>{t.hi()},1381104:()=>{t.ii()},1381133:()=>{t.mi()},1381158:n=>t.gi(n),1381191:n=>t.ki(n),1381223:(n,i,o)=>{t.Th(n,i,o,!0)},1381262:(n,i,o)=>{t.Th(n,i,o)},1381295:n=>{t.he("Abs",n,void 0)},1381346:n=>{t.he("Neg",n,void 0)},1381397:n=>{t.he("Floor",n,void 0)},1381450:n=>{t.he("Ceil",n,void 0)},1381502:n=>{t.he("Reciprocal",n,void 0)},1381560:n=>{t.he("Sqrt",n,void 0)},1381612:n=>{t.he("Exp",n,void 0)},1381663:n=>{t.he("Erf",n,void 0)},1381714:n=>{t.he("Sigmoid",n,void 0)},1381769:(n,i,o)=>{t.he("HardSigmoid",n,{alpha:i,beta:o})},1381848:n=>{t.he("Log",n,void 0)},1381899:n=>{t.he("Sin",n,void 0)},1381950:n=>{t.he("Cos",n,void 0)},1382001:n=>{t.he("Tan",n,void 0)},1382052:n=>{t.he("Asin",n,void 0)},1382104:n=>{t.he("Acos",n,void 0)},1382156:n=>{t.he("Atan",n,void 0)},1382208:n=>{t.he("Sinh",n,void 0)},1382260:n=>{t.he("Cosh",n,void 0)},1382312:n=>{t.he("Asinh",n,void 0)},1382365:n=>{t.he("Acosh",n,void 0)},1382418:n=>{t.he("Atanh",n,void 0)},1382471:n=>{t.he("Tanh",n,void 0)},1382523:n=>{t.he("Not",n,void 0)},1382574:(n,i,o)=>{t.he("Clip",n,{min:i,max:o})},1382643:n=>{t.he("Clip",n,void 0)},1382695:(n,i)=>{t.he("Elu",n,{alpha:i})},1382753:n=>{t.he("Relu",n,void 0)},1382805:(n,i)=>{t.he("LeakyRelu",n,{alpha:i})},1382869:(n,i)=>{t.he("ThresholdedRelu",n,{alpha:i})},1382939:(n,i)=>{t.he("Cast",n,{to:i})},1382997:n=>{t.he("Add",n,void 0)},1383048:n=>{t.he("Sub",n,void 0)},1383099:n=>{t.he("Mul",n,void 0)},1383150:n=>{t.he("Div",n,void 0)},1383201:n=>{t.he("Pow",n,void 0)},1383252:n=>{t.he("Equal",n,void 0)},1383305:n=>{t.he("Greater",n,void 0)},1383360:n=>{t.he("GreaterOrEqual",n,void 0)},1383422:n=>{t.he("Less",n,void 0)},1383474:n=>{t.he("LessOrEqual",n,void 0)},1383533:(n,i,o,a,l)=>{t.he("ReduceMean",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383692:(n,i,o,a,l)=>{t.he("ReduceMax",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383850:(n,i,o,a,l)=>{t.he("ReduceMin",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1384008:(n,i,o,a,l)=>{t.he("ReduceProd",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1384167:(n,i,o,a,l)=>{t.he("ReduceSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1384325:(n,i,o,a,l)=>{t.he("ReduceL1",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1384482:(n,i,o,a,l)=>{t.he("ReduceL2",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1384639:(n,i,o,a,l)=>{t.he("ReduceLogSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1384800:(n,i,o,a,l)=>{t.he("ReduceSumSquare",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1384964:(n,i,o,a,l)=>{t.he("ReduceLogSumExp",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1385128:n=>{t.he("Where",n,void 0)},1385181:(n,i,o)=>{t.he("Transpose",n,{perm:i?Array.from(L.subarray(i>>>0,o>>>0)):[]})},1385289:(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)=>{t.he("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:[o],group:a,kernel_shape:[l],pads:[c,h],strides:[g],wIsConst:()=>!!Y[_>>>0],outputPadding:x?Array.from(L.subarray(x>>>0,E>>>0)):[],outputShape:B?Array.from(L.subarray(B>>>0,I>>>0)):[],activation:Xe(U)})},1385691:(n,i,o,a,l,c,h,g,v,_,x,E,B,I)=>{t.he("ConvTranspose",n,{format:g?"NHWC":"NCHW",autoPad:i,dilations:Array.from(L.subarray(o>>>0,(o>>>0)+2>>>0)),group:a,kernelShape:Array.from(L.subarray(l>>>0,(l>>>0)+2>>>0)),pads:Array.from(L.subarray(c>>>0,(c>>>0)+4>>>0)),strides:Array.from(L.subarray(h>>>0,(h>>>0)+2>>>0)),wIsConst:()=>!!Y[v>>>0],outputPadding:_?Array.from(L.subarray(_>>>0,x>>>0)):[],outputShape:E?Array.from(L.subarray(E>>>0,B>>>0)):[],activation:Xe(I)})},1386256:(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)=>{t.he("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:[o],group:a,kernel_shape:[l],pads:[c,h],strides:[g],wIsConst:()=>!!Y[_>>>0],outputPadding:x?Array.from(L.subarray(x>>>0,E>>>0)):[],outputShape:B?Array.from(L.subarray(B>>>0,I>>>0)):[],activation:Xe(U)})},1386658:(n,i,o,a,l,c,h,g,v,_,x,E,B,I)=>{t.he("ConvTranspose",n,{format:g?"NHWC":"NCHW",autoPad:i,dilations:Array.from(L.subarray(o>>>0,(o>>>0)+2>>>0)),group:a,kernelShape:Array.from(L.subarray(l>>>0,(l>>>0)+2>>>0)),pads:Array.from(L.subarray(c>>>0,(c>>>0)+4>>>0)),strides:Array.from(L.subarray(h>>>0,(h>>>0)+2>>>0)),wIsConst:()=>!!Y[v>>>0],outputPadding:_?Array.from(L.subarray(_>>>0,x>>>0)):[],outputShape:E?Array.from(L.subarray(E>>>0,B>>>0)):[],activation:Xe(I)})},1387223:(n,i)=>{t.he("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1387314:(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>{t.he("AveragePool",n,{format:K?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,B],strides:[I,U]})},1387598:(n,i)=>{t.he("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1387689:(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>{t.he("AveragePool",n,{format:K?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,B],strides:[I,U]})},1387973:(n,i)=>{t.he("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1388060:(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>{t.he("MaxPool",n,{format:K?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,B],strides:[I,U]})},1388340:(n,i)=>{t.he("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1388427:(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>{t.he("MaxPool",n,{format:K?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,B],strides:[I,U]})},1388707:(n,i,o,a,l)=>{t.he("Gemm",n,{alpha:i,beta:o,transA:a,transB:l})},1388811:n=>{t.he("MatMul",n,void 0)},1388865:(n,i,o,a)=>{t.he("ArgMax",n,{keepDims:!!i,selectLastIndex:!!o,axis:a})},1388973:(n,i,o,a)=>{t.he("ArgMin",n,{keepDims:!!i,selectLastIndex:!!o,axis:a})},1389081:(n,i)=>{t.he("Softmax",n,{axis:i})},1389144:(n,i)=>{t.he("Concat",n,{axis:i})},1389204:(n,i,o,a,l)=>{t.he("Split",n,{axis:i,numOutputs:o,splitSizes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1389344:n=>{t.he("Expand",n,void 0)},1389398:(n,i)=>{t.he("Gather",n,{axis:Number(i)})},1389469:(n,i)=>{t.he("GatherElements",n,{axis:Number(i)})},1389548:(n,i,o,a,l,c,h,g,v,_,x)=>{t.he("Resize",n,{antialias:i,axes:o?Array.from(L.subarray(o>>>0,a>>>0)):[],coordinateTransformMode:Xe(l),cubicCoeffA:c,excludeOutside:h,extrapolationValue:g,keepAspectRatioPolicy:Xe(v),mode:Xe(_),nearestMode:Xe(x)})},1389894:(n,i,o,a,l,c,h)=>{t.he("Slice",n,{starts:i?Array.from(L.subarray(i>>>0,o>>>0)):[],ends:a?Array.from(L.subarray(a>>>0,l>>>0)):[],axes:c?Array.from(L.subarray(c>>>0,h>>>0)):[]})},1390110:n=>{t.he("Tile",n,void 0)},1390162:(n,i,o)=>{t.he("LayerNormalization",n,{axis:Number(i),epsilon:Number(o)})},1390269:(n,i,o)=>{t.he("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1390383:(n,i,o)=>{t.he("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1390497:n=>{t.he("Range",n,void 0)},1390550:(n,i)=>{t.he("Einsum",n,{equation:Xe(i)})},1390631:(n,i,o,a,l)=>{t.he("Pad",n,{mode:i,value:o,pads:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1390758:(n,i,o,a,l,c)=>{t.he("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!l,trainingMode:!!a,format:c?"NHWC":"NCHW"})},1390927:(n,i,o,a,l,c)=>{t.he("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!l,trainingMode:!!a,format:c?"NHWC":"NCHW"})},1391096:(n,i,o)=>{t.he("CumSum",n,{exclusive:Number(i),reverse:Number(o)})},1391193:(n,i,o,a,l,c,h,g,v)=>{t.he("Attention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:a,scale:l,doRotary:c,qkvHiddenSizes:h?Array.from(L.subarray(Number(g)>>>0,Number(g)+h>>>0)):[],pastPresentShareBuffer:!!v})},1391465:n=>{t.he("BiasAdd",n,void 0)},1391520:n=>{t.he("BiasSplitGelu",n,void 0)},1391581:n=>{t.he("FastGelu",n,void 0)},1391637:(n,i,o,a,l,c,h,g,v,_,x,E,B)=>{t.he("Conv",n,{format:v?"NHWC":"NCHW",auto_pad:i,dilations:[o],group:a,kernel_shape:[l],pads:c?Array.from(L.subarray(c>>>0,h>>>0)):[],strides:[g],w_is_const:()=>!!Y[_>>>0],activation:Xe(x),activation_params:E?Array.from(je.subarray(E>>>0,B>>>0)):[]})},1392007:(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>{t.he("Conv",n,{format:E?"NHWC":"NCHW",auto_pad:i,dilations:[o,a],group:l,kernel_shape:[c,h],pads:g?Array.from(L.subarray(g>>>0,v>>>0)):[],strides:[_,x],w_is_const:()=>!!Y[B>>>0],activation:Xe(I),activation_params:U?Array.from(je.subarray(U>>>0,K>>>0)):[]})},1392398:n=>{t.he("Gelu",n,void 0)},1392450:(n,i,o,a,l,c)=>{t.he("MatMulNBits",n,{k:i,n:o,accuracyLevel:a,bits:l,blockSize:c})},1392577:(n,i,o,a,l,c)=>{t.he("MultiHeadAttention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:a,scale:l,doRotary:c})},1392736:(n,i)=>{t.he("SkipLayerNormalization",n,{epsilon:i})},1392817:n=>{t.li(n)},1392851:(n,i)=>t.ni(n,i,t.Kh.oi,t.Kh.errors)};function pt(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var At=[],Vt=0,tt=0;function lr(n){this.Jh=n,this.Dh=n-24,this.bi=function(i){ue[this.Dh+4>>>2>>>0]=i},this.Lh=function(){return ue[this.Dh+4>>>2>>>0]},this.ai=function(i){ue[this.Dh+8>>>2>>>0]=i},this.Vh=function(i){Y[this.Dh+12>>>0>>>0]=i?1:0},this.Yh=function(){return Y[this.Dh+12>>>0>>>0]!=0},this.Wh=function(i){Y[this.Dh+13>>>0>>>0]=i?1:0},this.di=function(){return Y[this.Dh+13>>>0>>>0]!=0},this.$h=function(i,o){this.Mh(0),this.bi(i),this.ai(o)},this.Mh=function(i){ue[this.Dh+16>>>2>>>0]=i},this.Xh=function(){return ue[this.Dh+16>>>2>>>0]},this.Zh=function(){if(Nn(this.Lh()))return ue[this.Jh>>>2>>>0];var i=this.Xh();return i!==0?i:this.Jh}}var vt=n=>{var i=tt;if(!i)return er(0),0;var o=new lr(i);o.Mh(i);var a=o.Lh();if(!a)return er(0),i;for(var l in n){var c=n[l];if(c===0||c===a)break;if(Vn(c,a,o.Dh+16))return er(c),i}return er(a),i},Pr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,hn=(n,i,o)=>{i>>>=0;var a=i+o;for(o=i;n[o]&&!(o>=a);)++o;if(16<o-i&&n.buffer&&Pr)return Pr.decode(n.subarray(i,o));for(a="";i<o;){var l=n[i++];if(l&128){var c=n[i++]&63;if((l&224)==192)a+=String.fromCharCode((l&31)<<6|c);else{var h=n[i++]&63;l=(l&240)==224?(l&15)<<12|c<<6|h:(l&7)<<18|c<<12|h<<6|n[i++]&63,65536>l?a+=String.fromCharCode(l):(l-=65536,a+=String.fromCharCode(55296|l>>10,56320|l&1023))}}else a+=String.fromCharCode(l)}return a},Xe=(n,i)=>(n>>>=0)?hn(J,n,i):"",dr=n=>{for(var i=0,o=0;o<n.length;++o){var a=n.charCodeAt(o);127>=a?i++:2047>=a?i+=2:55296<=a&&57343>=a?(i+=4,++o):i+=3}return i},wt=(n,i,o,a)=>{if(o>>>=0,!(0<a))return 0;var l=o;a=o+a-1;for(var c=0;c<n.length;++c){var h=n.charCodeAt(c);if(55296<=h&&57343>=h){var g=n.charCodeAt(++c);h=65536+((h&1023)<<10)|g&1023}if(127>=h){if(o>=a)break;i[o++>>>0]=h}else{if(2047>=h){if(o+1>=a)break;i[o++>>>0]=192|h>>6}else{if(65535>=h){if(o+2>=a)break;i[o++>>>0]=224|h>>12}else{if(o+3>=a)break;i[o++>>>0]=240|h>>18,i[o++>>>0]=128|h>>12&63}i[o++>>>0]=128|h>>6&63}i[o++>>>0]=128|h&63}}return i[o>>>0]=0,o-l},cr=n=>{if(n===null)return"null";var i=typeof n;return i==="object"||i==="array"||i==="function"?n.toString():""+n},Kt,ut=n=>{for(var i="";J[n>>>0];)i+=Kt[J[n++>>>0]];return i},fr={},pr={},gn={},_t;function Tt(n,i,o={}){var a=i.name;if(!n)throw new _t(`type "${a}" must have a positive integer typeid pointer`);if(pr.hasOwnProperty(n)){if(o.ei)return;throw new _t(`Cannot register type \'${a}\' twice`)}pr[n]=i,delete gn[n],fr.hasOwnProperty(n)&&(i=fr[n],delete fr[n],i.forEach(l=>l()))}function yt(n,i,o={}){if(!("argPackAdvance"in i))throw new TypeError("registerType registeredInstance requires argPackAdvance");Tt(n,i,o)}var mr=(n,i,o)=>{switch(i){case 1:return o?a=>Y[a>>>0>>>0]:a=>J[a>>>0>>>0];case 2:return o?a=>ie[a>>>1>>>0]:a=>ge[a>>>1>>>0];case 4:return o?a=>L[a>>>2>>>0]:a=>ue[a>>>2>>>0];case 8:return o?a=>Ne[a>>>3]:a=>_e[a>>>3];default:throw new TypeError(`invalid integer width (${i}): ${n}`)}};function be(){this.Fh=[void 0],this.Sh=[]}var rt=new be;function hr(n){n>>>=0,n>=rt.Dh&&--rt.get(n).Uh===0&&rt.Mh(n)}var it=n=>{if(!n)throw new _t("Cannot use deleted val. handle = "+n);return rt.get(n).value},dt=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return rt.Lh({Uh:1,value:n})}};function yn(n){return this.fromWireType(L[n>>>2>>>0])}var bn=(n,i)=>{switch(i){case 4:return function(o){return this.fromWireType(je[o>>>2>>>0])};case 8:return function(o){return this.fromWireType(ae[o>>>3>>>0])};default:throw new TypeError(`invalid float width (${i}): ${n}`)}};function vn(n){return this.fromWireType(ue[n>>>2>>>0])}var Or=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,wn=(n,i)=>{for(var o=n>>1,a=o+i/2;!(o>=a)&&ge[o>>>0];)++o;if(o<<=1,32<o-n&&Or)return Or.decode(J.subarray(n>>>0,o>>>0));for(o="",a=0;!(a>=i/2);++a){var l=ie[n+2*a>>>1>>>0];if(l==0)break;o+=String.fromCharCode(l)}return o},kr=(n,i,o)=>{if(o??=2147483647,2>o)return 0;o-=2;var a=i;o=o<2*n.length?o/2:n.length;for(var l=0;l<o;++l)ie[i>>>1>>>0]=n.charCodeAt(l),i+=2;return ie[i>>>1>>>0]=0,i-a},_n=n=>2*n.length,$n=(n,i)=>{for(var o=0,a="";!(o>=i/4);){var l=L[n+4*o>>>2>>>0];if(l==0)break;++o,65536<=l?(l-=65536,a+=String.fromCharCode(55296|l>>10,56320|l&1023)):a+=String.fromCharCode(l)}return a},Cn=(n,i,o)=>{if(i>>>=0,o??=2147483647,4>o)return 0;var a=i;o=a+o-4;for(var l=0;l<n.length;++l){var c=n.charCodeAt(l);if(55296<=c&&57343>=c){var h=n.charCodeAt(++l);c=65536+((c&1023)<<10)|h&1023}if(L[i>>>2>>>0]=c,i+=4,i+4>o)break}return L[i>>>2>>>0]=0,i-a},Sn=n=>{for(var i=0,o=0;o<n.length;++o){var a=n.charCodeAt(o);55296<=a&&57343>=a&&++o,i+=4}return i},gr=(n,i)=>{var o=pr[n];if(o===void 0)throw n=Mn(n),o=ut(n),gt(n),new _t(i+" has unknown type "+o);return o},Rr=(n,i,o)=>{var a=[];return n=n.toWireType(a,o),a.length&&(ue[i>>>2>>>0]=dt(a)),n},Yt=n=>{try{n()}catch(i){Ye(i)}};function xn(){var n=z,i={};for(let[o,a]of Object.entries(n))i[o]=typeof a=="function"?function(){Zt.push(o);try{return a.apply(null,arguments)}finally{V||(Zt.pop(),mt&&$t===1&&Zt.length===0&&($t=0,Yt(Ds),typeof Fibers<"u"&&Fibers.wi()))}}:a;return i}var $t=0,mt=null,Dr=0,Zt=[],Br={},Mr={},zr=0,Nt=null,Wt=[];function In(){return new Promise((n,i)=>{Nt={resolve:n,reject:i}})}function An(){var n=Gt(65548),i=n+12;ue[n>>>2>>>0]=i,ue[n+4>>>2>>>0]=i+65536,i=Zt[0];var o=Br[i];return o===void 0&&(o=zr++,Br[i]=o,Mr[o]=i),L[n+8>>>2>>>0]=o,n}function Tn(n){if(!V){if($t===0){var i=!1,o=!1;n((a=0)=>{if(!V&&(Dr=a,i=!0,o)){$t=2,Yt(()=>Bs(mt)),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.resume(),a=!1;try{var l=(0,z[Mr[L[mt+8>>>2>>>0]]])()}catch(g){l=g,a=!0}var c=!1;if(!mt){var h=Nt;h&&(Nt=null,(a?h.reject:h.resolve)(l),c=!0)}if(a&&!c)throw l}}),o=!0,i||($t=1,mt=An(),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.pause(),Yt(()=>Rs(mt)))}else $t===2?($t=0,Yt(Ms),gt(mt),mt=null,Wt.forEach(a=>{if(!V)try{a();try{q=q=a=q,t.onExit?.(a),V=!0,d(a,new pt(a))}catch(l){l instanceof pt||l=="unwind"||d(1,l)}}catch(l){l instanceof pt||l=="unwind"||d(1,l)}})):Ye(`invalid state: ${$t}`);return Dr}}function Ur(n){return Tn(i=>{n().then(i)})}var Qt=[],jr={},yr=n=>{var i=jr[n];return i===void 0?ut(n):i},En=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Le=n=>{var i=Qt.length;return Qt.push(n),i},Vr=(n,i)=>{for(var o=Array(n),a=0;a<n;++a)o[a]=gr(ue[i+4*a>>>2>>>0],"parameter "+a);return o},br=(n,i)=>Object.defineProperty(i,"name",{value:n});function Pn(n){var i=Function;if(!(i instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof i} which is not a function`);var o=br(i.name||"unknownFunctionName",function(){});return o.prototype=i.prototype,o=new o,n=i.apply(o,n),n instanceof Object?n:o}var Et=n=>n%4===0&&(n%100!==0||n%400===0),Nr=[0,31,60,91,121,152,182,213,244,274,305,335],Wr=[0,31,59,90,120,151,181,212,243,273,304,334],Gr=n=>{var i=dr(n)+1,o=Gt(i);return o&&wt(n,J,o,i),o},vr=[],Hr=(n,i)=>{vr.length=0;for(var o;o=J[n++>>>0];){var a=o!=105;a&=o!=112,i+=a&&i%8?4:0,vr.push(o==112?ue[i>>>2>>>0]:o==106?Ne[i>>>3]:o==105?L[i>>>2>>>0]:ae[i>>>3>>>0]),i+=a?8:4}return vr},Lr={},Fr=()=>{if(!wr){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:m||"./this.program"},i;for(i in Lr)Lr[i]===void 0?delete n[i]:n[i]=Lr[i];var o=[];for(i in n)o.push(`${i}=${n[i]}`);wr=o}return wr},wr,On=[null,[],[]],kn=[31,29,31,30,31,30,31,31,30,31,30,31],Rn=[31,28,31,30,31,30,31,31,30,31,30,31];function Dn(n){var i=Array(dr(n)+1);return wt(n,i,0,i.length),i}function Xt(n,i,o,a){function l(I,U,K){for(I=typeof I=="number"?I.toString():I||"";I.length<U;)I=K[0]+I;return I}function c(I,U){return l(I,U,"0")}function h(I,U){function K(le){return 0>le?-1:0<le?1:0}var re;return(re=K(I.getFullYear()-U.getFullYear()))===0&&(re=K(I.getMonth()-U.getMonth()))===0&&(re=K(I.getDate()-U.getDate())),re}function g(I){switch(I.getDay()){case 0:return new Date(I.getFullYear()-1,11,29);case 1:return I;case 2:return new Date(I.getFullYear(),0,3);case 3:return new Date(I.getFullYear(),0,2);case 4:return new Date(I.getFullYear(),0,1);case 5:return new Date(I.getFullYear()-1,11,31);case 6:return new Date(I.getFullYear()-1,11,30)}}function v(I){var U=I.Gh;for(I=new Date(new Date(I.Hh+1900,0,1).getTime());0<U;){var K=I.getMonth(),re=(Et(I.getFullYear())?kn:Rn)[K];if(U>re-I.getDate())U-=re-I.getDate()+1,I.setDate(1),11>K?I.setMonth(K+1):(I.setMonth(0),I.setFullYear(I.getFullYear()+1));else{I.setDate(I.getDate()+U);break}}return K=new Date(I.getFullYear()+1,0,4),U=g(new Date(I.getFullYear(),0,4)),K=g(K),0>=h(U,I)?0>=h(K,I)?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}n>>>=0,i>>>=0,o>>>=0,a>>>=0;var _=ue[a+40>>>2>>>0];a={si:L[a>>>2>>>0],ri:L[a+4>>>2>>>0],Oh:L[a+8>>>2>>>0],Rh:L[a+12>>>2>>>0],Ph:L[a+16>>>2>>>0],Hh:L[a+20>>>2>>>0],Eh:L[a+24>>>2>>>0],Gh:L[a+28>>>2>>>0],vi:L[a+32>>>2>>>0],pi:L[a+36>>>2>>>0],ti:_?Xe(_):""},o=Xe(o),_={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var x in _)o=o.replace(new RegExp(x,"g"),_[x]);var E="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),B="January February March April May June July August September October November December".split(" ");_={"%a":I=>E[I.Eh].substring(0,3),"%A":I=>E[I.Eh],"%b":I=>B[I.Ph].substring(0,3),"%B":I=>B[I.Ph],"%C":I=>c((I.Hh+1900)/100|0,2),"%d":I=>c(I.Rh,2),"%e":I=>l(I.Rh,2," "),"%g":I=>v(I).toString().substring(2),"%G":I=>v(I),"%H":I=>c(I.Oh,2),"%I":I=>(I=I.Oh,I==0?I=12:12<I&&(I-=12),c(I,2)),"%j":I=>{for(var U=0,K=0;K<=I.Ph-1;U+=(Et(I.Hh+1900)?kn:Rn)[K++]);return c(I.Rh+U,3)},"%m":I=>c(I.Ph+1,2),"%M":I=>c(I.ri,2),"%n":()=>`\n`,"%p":I=>0<=I.Oh&&12>I.Oh?"AM":"PM","%S":I=>c(I.si,2),"%t":()=>"\t","%u":I=>I.Eh||7,"%U":I=>c(Math.floor((I.Gh+7-I.Eh)/7),2),"%V":I=>{var U=Math.floor((I.Gh+7-(I.Eh+6)%7)/7);if(2>=(I.Eh+371-I.Gh-2)%7&&U++,U)U==53&&(K=(I.Eh+371-I.Gh)%7,K==4||K==3&&Et(I.Hh)||(U=1));else{U=52;var K=(I.Eh+7-I.Gh-1)%7;(K==4||K==5&&Et(I.Hh%400-1))&&U++}return c(U,2)},"%w":I=>I.Eh,"%W":I=>c(Math.floor((I.Gh+7-(I.Eh+6)%7)/7),2),"%y":I=>(I.Hh+1900).toString().substring(2),"%Y":I=>I.Hh+1900,"%z":I=>{I=I.pi;var U=0<=I;return I=Math.abs(I)/60,(U?"+":"-")+("0000"+(I/60*100+I%60)).slice(-4)},"%Z":I=>I.ti,"%%":()=>"%"},o=o.replace(/%%/g,"\\0\\0");for(x in _)o.includes(x)&&(o=o.replace(new RegExp(x,"g"),_[x](a)));return o=o.replace(/\\0\\0/g,"%"),x=Dn(o),x.length>i?0:(Y.set(x,n>>>0),x.length-1)}for(var Bn=Array(256),ht=0;256>ht;++ht)Bn[ht]=String.fromCharCode(ht);Kt=Bn,_t=t.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},t.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(be.prototype,{get(n){return this.Fh[n]},has(n){return this.Fh[n]!==void 0},Lh(n){var i=this.Sh.pop()||this.Fh.length;return this.Fh[i]=n,i},Mh(n){this.Fh[n]=void 0,this.Sh.push(n)}}),rt.Fh.push({value:void 0},{value:null},{value:!0},{value:!1}),rt.Dh=rt.Fh.length,t.count_emval_handles=()=>{for(var n=0,i=rt.Dh;i<rt.Fh.length;++i)rt.Fh[i]!==void 0&&++n;return n};var bt={ad:function(n,i,o){return Ur(async()=>{await t.ji(n,i,o)})},u:function(n){return n=new lr(n>>>0),n.Yh()||(n.Vh(!0),Vt--),n.Wh(!1),At.push(n),jn(n.Jh),n.Zh()},O:()=>{j(0,0);var n=At.pop();Un(n.Jh),tt=0},a:function(){return vt([])},m:function(n){return vt([n>>>0])},x:function(n,i){return vt([n>>>0,i>>>0])},q:function(n,i,o){return vt([n>>>0,i>>>0,o>>>0])},zb:()=>{var n=At.pop();n||Ye("no exception to throw");var i=n.Jh;throw n.di()||(At.push(n),n.Wh(!0),n.Vh(!1),Vt++),tt=i,tt},r:function(n,i,o){throw n>>>=0,new lr(n).$h(i>>>0,o>>>0),tt=n,Vt++,tt},eb:()=>Vt,g:function(n){throw tt||=n>>>0,tt},Ab:function(){return 0},Xc:function(){},Ic:function(){},Kc:function(){},Bc:function(){return 0},Vc:function(){},Qc:function(){},Uc:function(){},Vb:function(){},Jc:function(){},Gc:function(){},Wc:function(){},Hc:function(){},Yb:function(n,i,o,a,l){i>>>=0,i=ut(i);var c=i.indexOf("u")!=-1;c&&(l=(1n<<64n)-1n),yt(n>>>0,{name:i,fromWireType:h=>h,toWireType:function(h,g){if(typeof g!="bigint"&&typeof g!="number")throw new TypeError(`Cannot convert "${cr(g)}" to ${this.name}`);if(g<a||g>l)throw new TypeError(`Passing a number "${cr(g)}" from JS side to C/C++ side to an argument of type "${i}", which is outside the valid range [${a}, ${l}]!`);return g},argPackAdvance:8,readValueFromPointer:mr(i,o>>>0,!c),Ih:null})},_c:function(n,i,o,a){i=ut(i>>>0),yt(n>>>0,{name:i,fromWireType:function(l){return!!l},toWireType:function(l,c){return c?o:a},argPackAdvance:8,readValueFromPointer:function(l){return this.fromWireType(J[l>>>0])},Ih:null})},Zc:function(n,i){i=ut(i>>>0),yt(n>>>0,{name:i,fromWireType:o=>{var a=it(o);return hr(o),a},toWireType:(o,a)=>dt(a),argPackAdvance:8,readValueFromPointer:yn,Ih:null})},Xb:function(n,i,o){i=ut(i>>>0),yt(n>>>0,{name:i,fromWireType:a=>a,toWireType:(a,l)=>l,argPackAdvance:8,readValueFromPointer:bn(i,o>>>0),Ih:null})},za:function(n,i,o,a,l){if(n>>>=0,o>>>=0,i=ut(i>>>0),l===-1&&(l=4294967295),l=g=>g,a===0){var c=32-8*o;l=g=>g<<c>>>c}var h=i.includes("unsigned")?function(g,v){return v>>>0}:function(g,v){return v};yt(n,{name:i,fromWireType:l,toWireType:h,argPackAdvance:8,readValueFromPointer:mr(i,o,a!==0),Ih:null})},aa:function(n,i,o){function a(c){return new l(Y.buffer,ue[c+4>>>2>>>0],ue[c>>>2>>>0])}var l=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][i];o=ut(o>>>0),yt(n>>>0,{name:o,fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{ei:!0})},Zb:function(n,i){i=ut(i>>>0);var o=i==="std::string";yt(n>>>0,{name:i,fromWireType:function(a){var l=ue[a>>>2>>>0],c=a+4;if(o)for(var h=c,g=0;g<=l;++g){var v=c+g;if(g==l||J[v>>>0]==0){if(h=Xe(h,v-h),_===void 0)var _=h;else _+=String.fromCharCode(0),_+=h;h=v+1}}else{for(_=Array(l),g=0;g<l;++g)_[g]=String.fromCharCode(J[c+g>>>0]);_=_.join("")}return gt(a),_},toWireType:function(a,l){l instanceof ArrayBuffer&&(l=new Uint8Array(l));var c=typeof l=="string";if(!(c||l instanceof Uint8Array||l instanceof Uint8ClampedArray||l instanceof Int8Array))throw new _t("Cannot pass non-string to std::string");var h=o&&c?dr(l):l.length,g=Gt(4+h+1),v=g+4;if(ue[g>>>2>>>0]=h,o&&c)wt(l,J,v,h+1);else if(c)for(c=0;c<h;++c){var _=l.charCodeAt(c);if(255<_)throw gt(v),new _t("String has UTF-16 code units that do not fit in 8 bits");J[v+c>>>0]=_}else for(c=0;c<h;++c)J[v+c>>>0]=l[c];return a!==null&&a.push(gt,g),g},argPackAdvance:8,readValueFromPointer:vn,Ih(a){gt(a)}})},Cb:function(n,i,o){if(i>>>=0,o>>>=0,o=ut(o),i===2)var a=wn,l=kr,c=_n,h=()=>ge,g=1;else i===4&&(a=$n,l=Cn,c=Sn,h=()=>ue,g=2);yt(n>>>0,{name:o,fromWireType:v=>{for(var _=ue[v>>>2>>>0],x=h(),E,B=v+4,I=0;I<=_;++I){var U=v+4+I*i;(I==_||x[U>>>g]==0)&&(B=a(B,U-B),E===void 0?E=B:(E+=String.fromCharCode(0),E+=B),B=U+i)}return gt(v),E},toWireType:(v,_)=>{if(typeof _!="string")throw new _t(`Cannot pass non-string to C++ string type ${o}`);var x=c(_),E=Gt(4+x+i);return ue[E>>>2]=x>>g,l(_,E+4,x+i),v!==null&&v.push(gt,E),E},argPackAdvance:8,readValueFromPointer:yn,Ih(v){gt(v)}})},$c:function(n,i){i=ut(i>>>0),yt(n>>>0,{fi:!0,name:i,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},Yc:()=>1,jd:function(n,i,o){return i>>>=0,o>>>=0,n=it(n>>>0),i=gr(i,"emval::as"),Rr(i,o,n)},zd:function(n){return n>>>=0,Ur(()=>(n=it(n),n.then(dt)))},rd:function(n,i,o,a){return o>>>=0,a>>>=0,n=Qt[n>>>0],i=it(i>>>0),n(null,i,o,a)},fa:function(n,i,o,a,l){return o>>>=0,a>>>=0,l>>>=0,n=Qt[n>>>0],i=it(i>>>0),o=yr(o),n(i,i[o],a,l)},Ac:hr,od:function(n,i){return i>>>=0,n=it(n>>>0),i=it(i),n==i},wd:function(n){return n>>>=0,n===0?dt(En()):(n=yr(n),dt(En()[n]))},ea:function(n,i,o){i=Vr(n,i>>>0);var a=i.shift();n--;var l=`return function (obj, func, destructorsRef, args) {\n`,c=0,h=[];o===0&&h.push("obj");for(var g=["retType"],v=[a],_=0;_<n;++_)h.push("arg"+_),g.push("argType"+_),v.push(i[_]),l+=`  var arg${_} = argType${_}.readValueFromPointer(args${c?"+"+c:""});\n`,c+=i[_].argPackAdvance;for(l+=`  var rv = ${o===1?"new func":"func.call"}(${h.join(", ")});\n`,_=0;_<n;++_)i[_].deleteObject&&(l+=`  argType${_}.deleteObject(arg${_});\n`);return a.fi||(g.push("emval_returnValue"),v.push(Rr),l+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),g.push(l+`};\n`),n=Pn(g).apply(null,v),o=`methodCaller<(${i.map(x=>x.name).join(", ")}) => ${a.name}>`,Le(br(o,n))},vd:function(n,i){return i>>>=0,n=it(n>>>0),i=it(i),dt(n[i])},U:function(n){n>>>=0,4<n&&(rt.get(n).Uh+=1)},kc:function(){return dt([])},fd:function(n){n=it(n>>>0);for(var i=Array(n.length),o=0;o<n.length;o++)i[o]=n[o];return dt(i)},W:function(n){return dt(yr(n>>>0))},Wa:function(){return dt({})},td:function(n){n>>>=0;for(var i=it(n);i.length;){var o=i.pop();i.pop()(o)}hr(n)},qd:function(n,i,o){i>>>=0,o>>>=0,n=it(n>>>0),i=it(i),o=it(o),n[i]=o},yb:function(n,i){return i>>>=0,n=gr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(i),dt(n)},Nc:function(n,i){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),i>>>=0,n=new Date(1e3*n),L[i>>>2>>>0]=n.getUTCSeconds(),L[i+4>>>2>>>0]=n.getUTCMinutes(),L[i+8>>>2>>>0]=n.getUTCHours(),L[i+12>>>2>>>0]=n.getUTCDate(),L[i+16>>>2>>>0]=n.getUTCMonth(),L[i+20>>>2>>>0]=n.getUTCFullYear()-1900,L[i+24>>>2>>>0]=n.getUTCDay(),L[i+28>>>2>>>0]=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Oc:function(n,i){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),i>>>=0,n=new Date(1e3*n),L[i>>>2>>>0]=n.getSeconds(),L[i+4>>>2>>>0]=n.getMinutes(),L[i+8>>>2>>>0]=n.getHours(),L[i+12>>>2>>>0]=n.getDate(),L[i+16>>>2>>>0]=n.getMonth(),L[i+20>>>2>>>0]=n.getFullYear()-1900,L[i+24>>>2>>>0]=n.getDay(),L[i+28>>>2>>>0]=(Et(n.getFullYear())?Nr:Wr)[n.getMonth()]+n.getDate()-1|0,L[i+36>>>2>>>0]=-(60*n.getTimezoneOffset());var o=new Date(n.getFullYear(),6,1).getTimezoneOffset(),a=new Date(n.getFullYear(),0,1).getTimezoneOffset();L[i+32>>>2>>>0]=(o!=a&&n.getTimezoneOffset()==Math.min(a,o))|0},Pc:function(n){n>>>=0;var i=new Date(L[n+20>>>2>>>0]+1900,L[n+16>>>2>>>0],L[n+12>>>2>>>0],L[n+8>>>2>>>0],L[n+4>>>2>>>0],L[n>>>2>>>0],0),o=L[n+32>>>2>>>0],a=i.getTimezoneOffset(),l=new Date(i.getFullYear(),6,1).getTimezoneOffset(),c=new Date(i.getFullYear(),0,1).getTimezoneOffset(),h=Math.min(c,l);return 0>o?L[n+32>>>2>>>0]=+(l!=c&&h==a):0<o!=(h==a)&&(l=Math.max(c,l),i.setTime(i.getTime()+6e4*((0<o?h:l)-a))),L[n+24>>>2>>>0]=i.getDay(),L[n+28>>>2>>>0]=(Et(i.getFullYear())?Nr:Wr)[i.getMonth()]+i.getDate()-1|0,L[n>>>2>>>0]=i.getSeconds(),L[n+4>>>2>>>0]=i.getMinutes(),L[n+8>>>2>>>0]=i.getHours(),L[n+12>>>2>>>0]=i.getDate(),L[n+16>>>2>>>0]=i.getMonth(),L[n+20>>>2>>>0]=i.getYear(),n=i.getTime(),isNaN(n)?(L[Jt()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},Lc:function(){return-52},Mc:function(){},Dc:function(n,i,o){function a(v){return(v=v.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?v[1]:"GMT"}o>>>=0;var l=new Date().getFullYear(),c=new Date(l,0,1),h=new Date(l,6,1);l=c.getTimezoneOffset();var g=h.getTimezoneOffset();ue[n>>>0>>>2>>>0]=60*Math.max(l,g),L[i>>>0>>>2>>>0]=+(l!=g),n=a(c),i=a(h),n=Gr(n),i=Gr(i),g<l?(ue[o>>>2>>>0]=n,ue[o+4>>>2>>>0]=i):(ue[o>>>2>>>0]=i,ue[o+4>>>2>>>0]=n)},jb:()=>{Ye("")},A:function(n,i,o){return n>>>=0,i=Hr(i>>>0,o>>>0),Qe[n].apply(null,i)},_b:function(n,i,o){return n>>>=0,i=Hr(i>>>0,o>>>0),Qe[n].apply(null,i)},Wb:()=>Date.now(),Ec:function(){return 4294901760},ha:()=>performance.now(),Cc:function(n){n>>>=0;var i=J.length;if(4294901760<n)return!1;for(var o=1;4>=o;o*=2){var a=i*(1+.2/o);a=Math.min(a,n+100663296);var l=Math;a=Math.max(n,a);e:{l=(l.min.call(l,4294901760,a+(65536-a%65536)%65536)-G.buffer.byteLength+65535)/65536;try{G.grow(l),ye();var c=1;break e}catch{}c=void 0}if(c)return!0}return!1},Sc:function(n,i){n>>>=0,i>>>=0;var o=0;return Fr().forEach((a,l)=>{var c=i+o;for(l=ue[n+4*l>>>2>>>0]=c,c=0;c<a.length;++c)Y[l++>>>0>>>0]=a.charCodeAt(c);Y[l>>>0>>>0]=0,o+=a.length+1}),0},Tc:function(n,i){n>>>=0,i>>>=0;var o=Fr();ue[n>>>2>>>0]=o.length;var a=0;return o.forEach(l=>a+=l.length+1),ue[i>>>2>>>0]=a,0},Bb:()=>52,Ub:function(){return 52},Rc:function(){return 70},Tb:function(n,i,o,a){i>>>=0,o>>>=0,a>>>=0;for(var l=0,c=0;c<o;c++){var h=ue[i>>>2>>>0],g=ue[i+4>>>2>>>0];i+=8;for(var v=0;v<g;v++){var _=J[h+v>>>0],x=On[n];_===0||_===10?((n===1?D:k)(hn(x,0)),x.length=0):x.push(_)}l+=g}return ue[a>>>2>>>0]=l,0},wb:jf,bd:uh,la:lm,Z:Qm,ka:Xm,ta:Up,na:zf,cd:sh,ob:um,N:bp,y:$f,b:of,Sb:vf,xa:bf,f:rf,Eb:Ym,h:tf,_:Um,i:cf,dd:oh,j:df,t:lf,s:Tf,o:Df,Va:Gf,Ba:Cm,oa:Pf,Pb:hp,bb:vp,Ib:Sm,mb:pm,hc:Vm,wc:Ff,ec:Hm,fc:Wm,$b:ih,qa:Wp,xb:Rf,Aa:zm,Db:rh,da:Gp,gc:Nm,Sa:_p,E:sf,G:ip,Gb:jm,id:Gm,sa:nm,M:up,X:op,V:Cp,z:yf,Fb:qm,dc:Lm,D:Pm,Hb:Rm,hd:Fm,Ta:yp,wa:Yp,ic:Dm,ac:nh,Mb:Vp,Y:Uf,I:wf,C:Qf,Za:Om,P:sp,d:uf,$a:dp,n:af,Xa:Km,va:sm,vb:qf,e:nf,xc:Lf,ca:Mm,fb:fp,Ca:jp,lb:mm,hb:Yf,c:ff,uc:Jf,md:xm,oc:tm,k:pf,sc:cp,l:mf,vc:Zf,rc:pp,pd:gm,p:hf,Qa:Ap,tb:Ip,Pa:Tp,Kb:dm,B:Ef,K:_f,T:kf,_a:Im,nc:rm,gb:lp,ya:$p,ja:gf,Q:gp,cb:Of,Ka:im,kb:ah,Fa:vm,lc:wm,Ga:bm,Ha:hm,ed:th,ud:mp,ra:am,nd:$m,La:Jp,Ja:om,Rb:xf,qc:Hp,Ia:cm,Ma:Xp,pb:Np,ma:Zp,Da:Sp,jc:km,pc:qp,Jb:_m,Ea:Tm,ia:rp,xd:Nf,ld:Am,S:Fp,db:Af,Ya:Bm,cc:Jm,ib:Kf,F:Mf,R:Sf,Ua:Hf,kd:Em,ba:Wf,nb:fm,pa:Kp,bc:eh,zc:If,v:Cf,L:ep,sd:em,Nb:Dp,mc:ym,yd:Vf,Ob:Rp,Lb:Lp,ab:wp,yc:Bf,Qb:np,Na:Qp,$:Bp,tc:tp,J:ap,gd:Zm,ub:Xf,ua:zp,H:Mp,rb:Op,Oa:Pp,Ra:xp,qb:kp,sb:Ep,w:function(n){return n>>>0},Fc:Xt,ga:function(n,i,o,a){return Xt(n>>>0,i>>>0,o>>>0,a>>>0)}},z=function(){function n(o){return z=o.exports,z=xn(),z=lh(),G=z.Ad,ye(),Ae.unshift(z.Bd),Se--,Se==0&&(xe!==null&&(clearInterval(xe),xe=null),De&&(o=De,De=null,o())),z}var i={a:bt};if(Se++,t.instantiateWasm)try{return t.instantiateWasm(i,n)}catch(o){k(`Module.instantiateWasm callback failed with error: ${o}`),s(o)}return Fe(i,function(o){n(o.instance)}).catch(s),{}}();t._OrtInit=(n,i)=>(t._OrtInit=z.Cd)(n,i),t._OrtGetLastError=(n,i)=>(t._OrtGetLastError=z.Dd)(n,i),t._OrtCreateSessionOptions=(n,i,o,a,l,c,h,g,v,_)=>(t._OrtCreateSessionOptions=z.Ed)(n,i,o,a,l,c,h,g,v,_),t._OrtAppendExecutionProvider=(n,i)=>(t._OrtAppendExecutionProvider=z.Fd)(n,i),t._OrtAddFreeDimensionOverride=(n,i,o)=>(t._OrtAddFreeDimensionOverride=z.Gd)(n,i,o),t._OrtAddSessionConfigEntry=(n,i,o)=>(t._OrtAddSessionConfigEntry=z.Hd)(n,i,o),t._OrtReleaseSessionOptions=n=>(t._OrtReleaseSessionOptions=z.Id)(n),t._OrtCreateSession=(n,i,o)=>(t._OrtCreateSession=z.Jd)(n,i,o),t._OrtReleaseSession=n=>(t._OrtReleaseSession=z.Kd)(n),t._OrtGetInputOutputCount=(n,i,o)=>(t._OrtGetInputOutputCount=z.Ld)(n,i,o),t._OrtGetInputName=(n,i)=>(t._OrtGetInputName=z.Md)(n,i),t._OrtGetOutputName=(n,i)=>(t._OrtGetOutputName=z.Nd)(n,i),t._OrtFree=n=>(t._OrtFree=z.Od)(n),t._OrtCreateTensor=(n,i,o,a,l,c)=>(t._OrtCreateTensor=z.Pd)(n,i,o,a,l,c),t._OrtGetTensorData=(n,i,o,a,l)=>(t._OrtGetTensorData=z.Qd)(n,i,o,a,l),t._OrtReleaseTensor=n=>(t._OrtReleaseTensor=z.Rd)(n),t._OrtCreateRunOptions=(n,i,o,a)=>(t._OrtCreateRunOptions=z.Sd)(n,i,o,a),t._OrtAddRunConfigEntry=(n,i,o)=>(t._OrtAddRunConfigEntry=z.Td)(n,i,o),t._OrtReleaseRunOptions=n=>(t._OrtReleaseRunOptions=z.Ud)(n),t._OrtCreateBinding=n=>(t._OrtCreateBinding=z.Vd)(n),t._OrtBindInput=(n,i,o)=>(t._OrtBindInput=z.Wd)(n,i,o),t._OrtBindOutput=(n,i,o,a)=>(t._OrtBindOutput=z.Xd)(n,i,o,a),t._OrtClearBoundOutputs=n=>(t._OrtClearBoundOutputs=z.Yd)(n),t._OrtReleaseBinding=n=>(t._OrtReleaseBinding=z.Zd)(n),t._OrtRunWithBinding=(n,i,o,a,l)=>(t._OrtRunWithBinding=z._d)(n,i,o,a,l),t._OrtRun=(n,i,o,a,l,c,h,g)=>(t._OrtRun=z.$d)(n,i,o,a,l,c,h,g),t._OrtEndProfiling=n=>(t._OrtEndProfiling=z.ae)(n),t._JsepOutput=(n,i,o)=>(t._JsepOutput=z.be)(n,i,o),t._JsepGetNodeName=n=>(t._JsepGetNodeName=z.ce)(n);var Jt=()=>(Jt=z.de)(),Gt=t._malloc=n=>(Gt=t._malloc=z.ee)(n),gt=t._free=n=>(gt=t._free=z.fe)(n),Mn=n=>(Mn=z.ge)(n),j=(n,i)=>(j=z.ie)(n,i),er=n=>(er=z.je)(n),N=()=>(N=z.ke)(),W=n=>(W=z.le)(n),zn=n=>(zn=z.me)(n),Un=n=>(Un=z.ne)(n),jn=n=>(jn=z.oe)(n),Vn=(n,i,o)=>(Vn=z.pe)(n,i,o),Nn=n=>(Nn=z.qe)(n),tr=t.dynCall_vii=(n,i,o)=>(tr=t.dynCall_vii=z.re)(n,i,o),_r=t.dynCall_iiii=(n,i,o,a)=>(_r=t.dynCall_iiii=z.se)(n,i,o,a),qr=t.dynCall_iii=(n,i,o)=>(qr=t.dynCall_iii=z.te)(n,i,o),Kr=t.dynCall_ii=(n,i)=>(Kr=t.dynCall_ii=z.ue)(n,i),Yr=t.dynCall_iiiiiii=(n,i,o,a,l,c,h)=>(Yr=t.dynCall_iiiiiii=z.ve)(n,i,o,a,l,c,h),$r=t.dynCall_vi=(n,i)=>($r=t.dynCall_vi=z.we)(n,i),Cr=t.dynCall_v=n=>(Cr=t.dynCall_v=z.xe)(n),Zr=t.dynCall_iiiiii=(n,i,o,a,l,c)=>(Zr=t.dynCall_iiiiii=z.ye)(n,i,o,a,l,c),Qr=t.dynCall_iiij=(n,i,o,a)=>(Qr=t.dynCall_iiij=z.ze)(n,i,o,a),Xr=t.dynCall_iiiii=(n,i,o,a,l)=>(Xr=t.dynCall_iiiii=z.Ae)(n,i,o,a,l),Sr=t.dynCall_viii=(n,i,o,a)=>(Sr=t.dynCall_viii=z.Be)(n,i,o,a),rr=t.dynCall_viiiii=(n,i,o,a,l,c)=>(rr=t.dynCall_viiiii=z.Ce)(n,i,o,a,l,c),xr=t.dynCall_viiii=(n,i,o,a,l)=>(xr=t.dynCall_viiii=z.De)(n,i,o,a,l),Jr=t.dynCall_viiiiii=(n,i,o,a,l,c,h)=>(Jr=t.dynCall_viiiiii=z.Ee)(n,i,o,a,l,c,h),en=t.dynCall_viiji=(n,i,o,a,l)=>(en=t.dynCall_viiji=z.Fe)(n,i,o,a,l),tn=t.dynCall_viiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(tn=t.dynCall_viiiiiiiiiii=z.Ge)(n,i,o,a,l,c,h,g,v,_,x,E),rn=t.dynCall_viiijjjii=(n,i,o,a,l,c,h,g,v)=>(rn=t.dynCall_viiijjjii=z.He)(n,i,o,a,l,c,h,g,v),nn=t.dynCall_iij=(n,i,o)=>(nn=t.dynCall_iij=z.Ie)(n,i,o),Wn=t.dynCall_iif=(n,i,o)=>(Wn=t.dynCall_iif=z.Je)(n,i,o),nr=t.dynCall_iid=(n,i,o)=>(nr=t.dynCall_iid=z.Ke)(n,i,o),on=t.dynCall_jii=(n,i,o)=>(on=t.dynCall_jii=z.Le)(n,i,o),p=t.dynCall_i=n=>(p=t.dynCall_i=z.Me)(n),b=t.dynCall_viiiiiiii=(n,i,o,a,l,c,h,g,v)=>(b=t.dynCall_viiiiiiii=z.Ne)(n,i,o,a,l,c,h,g,v),S=t.dynCall_viiiiij=(n,i,o,a,l,c,h)=>(S=t.dynCall_viiiiij=z.Oe)(n,i,o,a,l,c,h),M=t.dynCall_ji=(n,i)=>(M=t.dynCall_ji=z.Pe)(n,i),H=t.dynCall_viij=(n,i,o,a)=>(H=t.dynCall_viij=z.Qe)(n,i,o,a),Z=t.dynCall_iiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Z=t.dynCall_iiiiiiiiiiii=z.Re)(n,i,o,a,l,c,h,g,v,_,x,E),ee=t.dynCall_viiiiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(ee=t.dynCall_viiiiiiiii=z.Se)(n,i,o,a,l,c,h,g,v,_),pe=t.dynCall_ij=(n,i)=>(pe=t.dynCall_ij=z.Te)(n,i),ce=t.dynCall_iiiiij=(n,i,o,a,l,c)=>(ce=t.dynCall_iiiiij=z.Ue)(n,i,o,a,l,c),de=t.dynCall_j=n=>(de=t.dynCall_j=z.Ve)(n),me=t.dynCall_vij=(n,i,o)=>(me=t.dynCall_vij=z.We)(n,i,o),ke=t.dynCall_viijjjiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(ke=t.dynCall_viijjjiiiiii=z.Xe)(n,i,o,a,l,c,h,g,v,_,x,E),Be=t.dynCall_viiijiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Be=t.dynCall_viiijiiiiiii=z.Ye)(n,i,o,a,l,c,h,g,v,_,x,E),F=t.dynCall_iiiiiiii=(n,i,o,a,l,c,h,g)=>(F=t.dynCall_iiiiiiii=z.Ze)(n,i,o,a,l,c,h,g),we=t.dynCall_viiiiiii=(n,i,o,a,l,c,h,g)=>(we=t.dynCall_viiiiiii=z._e)(n,i,o,a,l,c,h,g),ze=t.dynCall_iiiiiiiij=(n,i,o,a,l,c,h,g,v)=>(ze=t.dynCall_iiiiiiiij=z.$e)(n,i,o,a,l,c,h,g,v),Pt=t.dynCall_viiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I)=>(Pt=t.dynCall_viiiiiiiiiiiii=z.af)(n,i,o,a,l,c,h,g,v,_,x,E,B,I),an=t.dynCall_iiiiiiiii=(n,i,o,a,l,c,h,g,v)=>(an=t.dynCall_iiiiiiiii=z.bf)(n,i,o,a,l,c,h,g,v),co=t.dynCall_iiiiijiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(co=t.dynCall_iiiiijiiiii=z.cf)(n,i,o,a,l,c,h,g,v,_,x),fo=t.dynCall_vijjjiiij=(n,i,o,a,l,c,h,g,v)=>(fo=t.dynCall_vijjjiiij=z.df)(n,i,o,a,l,c,h,g,v),po=t.dynCall_fi=(n,i)=>(po=t.dynCall_fi=z.ef)(n,i),mo=t.dynCall_fii=(n,i,o)=>(mo=t.dynCall_fii=z.ff)(n,i,o),ho=t.dynCall_di=(n,i)=>(ho=t.dynCall_di=z.gf)(n,i),go=t.dynCall_dii=(n,i,o)=>(go=t.dynCall_dii=z.hf)(n,i,o),yo=t.dynCall_vijj=(n,i,o,a)=>(yo=t.dynCall_vijj=z.jf)(n,i,o,a),bo=t.dynCall_iiiiiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(bo=t.dynCall_iiiiiiiiii=z.kf)(n,i,o,a,l,c,h,g,v,_),vo=t.dynCall_viijiii=(n,i,o,a,l,c,h)=>(vo=t.dynCall_viijiii=z.lf)(n,i,o,a,l,c,h),wo=t.dynCall_viid=(n,i,o,a)=>(wo=t.dynCall_viid=z.mf)(n,i,o,a),_o=t.dynCall_viffiii=(n,i,o,a,l,c,h)=>(_o=t.dynCall_viffiii=z.nf)(n,i,o,a,l,c,h),$o=t.dynCall_viifiii=(n,i,o,a,l,c,h)=>($o=t.dynCall_viifiii=z.of)(n,i,o,a,l,c,h),Co=t.dynCall_viiiiidiidi=(n,i,o,a,l,c,h,g,v,_,x)=>(Co=t.dynCall_viiiiidiidi=z.pf)(n,i,o,a,l,c,h,g,v,_,x),So=t.dynCall_viiiiiiiiidi=(n,i,o,a,l,c,h,g,v,_,x,E)=>(So=t.dynCall_viiiiiiiiidi=z.qf)(n,i,o,a,l,c,h,g,v,_,x,E),xo=t.dynCall_jiii=(n,i,o,a)=>(xo=t.dynCall_jiii=z.rf)(n,i,o,a),Io=t.dynCall_vjiiiiii=(n,i,o,a,l,c,h,g)=>(Io=t.dynCall_vjiiiiii=z.sf)(n,i,o,a,l,c,h,g),Ao=t.dynCall_viiid=(n,i,o,a,l)=>(Ao=t.dynCall_viiid=z.tf)(n,i,o,a,l),To=t.dynCall_viiiiiiiiiji=(n,i,o,a,l,c,h,g,v,_,x,E)=>(To=t.dynCall_viiiiiiiiiji=z.uf)(n,i,o,a,l,c,h,g,v,_,x,E),Eo=t.dynCall_viji=(n,i,o,a)=>(Eo=t.dynCall_viji=z.vf)(n,i,o,a),Po=t.dynCall_vijjjjjjjjjjjjji=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>(Po=t.dynCall_vijjjjjjjjjjjjji=z.wf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K),Oo=t.dynCall_viiiji=(n,i,o,a,l,c)=>(Oo=t.dynCall_viiiji=z.xf)(n,i,o,a,l,c),ko=t.dynCall_vijjjiiji=(n,i,o,a,l,c,h,g,v)=>(ko=t.dynCall_vijjjiiji=z.yf)(n,i,o,a,l,c,h,g,v),Ro=t.dynCall_iiiji=(n,i,o,a,l)=>(Ro=t.dynCall_iiiji=z.zf)(n,i,o,a,l),Do=t.dynCall_iiijiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I)=>(Do=t.dynCall_iiijiiiiiiiiii=z.Af)(n,i,o,a,l,c,h,g,v,_,x,E,B,I),Bo=t.dynCall_vj=(n,i)=>(Bo=t.dynCall_vj=z.Bf)(n,i),Mo=t.dynCall_jjj=(n,i,o)=>(Mo=t.dynCall_jjj=z.Cf)(n,i,o),zo=t.dynCall_iiijiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(zo=t.dynCall_iiijiiiiii=z.Df)(n,i,o,a,l,c,h,g,v,_),Uo=t.dynCall_vfiii=(n,i,o,a,l)=>(Uo=t.dynCall_vfiii=z.Ef)(n,i,o,a,l),jo=t.dynCall_viiiiff=(n,i,o,a,l,c,h)=>(jo=t.dynCall_viiiiff=z.Ff)(n,i,o,a,l,c,h),Vo=t.dynCall_viiiiiff=(n,i,o,a,l,c,h,g)=>(Vo=t.dynCall_viiiiiff=z.Gf)(n,i,o,a,l,c,h,g),No=t.dynCall_viiff=(n,i,o,a,l)=>(No=t.dynCall_viiff=z.Hf)(n,i,o,a,l),Wo=t.dynCall_viiiiiiiiifiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I)=>(Wo=t.dynCall_viiiiiiiiifiii=z.If)(n,i,o,a,l,c,h,g,v,_,x,E,B,I),Go=t.dynCall_viiiiiiiijj=(n,i,o,a,l,c,h,g,v,_,x)=>(Go=t.dynCall_viiiiiiiijj=z.Jf)(n,i,o,a,l,c,h,g,v,_,x),Ho=t.dynCall_iiiiiiiiiiiiiifii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)=>(Ho=t.dynCall_iiiiiiiiiiiiiifii=z.Kf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re),Lo=t.dynCall_viiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(Lo=t.dynCall_viiiiiiiiiiii=z.Lf)(n,i,o,a,l,c,h,g,v,_,x,E,B),Fo=t.dynCall_iiiiiiiiiiiiiiiiifii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)=>(Fo=t.dynCall_iiiiiiiiiiiiiiiiifii=z.Mf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re),qo=t.dynCall_vijjiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(qo=t.dynCall_vijjiiiiii=z.Nf)(n,i,o,a,l,c,h,g,v,_),Ko=t.dynCall_iiiijjj=(n,i,o,a,l,c,h)=>(Ko=t.dynCall_iiiijjj=z.Of)(n,i,o,a,l,c,h),Yo=t.dynCall_viiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(Yo=t.dynCall_viiiiiiiiii=z.Pf)(n,i,o,a,l,c,h,g,v,_,x),Zo=t.dynCall_iiijjj=(n,i,o,a,l,c)=>(Zo=t.dynCall_iiijjj=z.Qf)(n,i,o,a,l,c),Qo=t.dynCall_fffffff=(n,i,o,a,l,c,h)=>(Qo=t.dynCall_fffffff=z.Rf)(n,i,o,a,l,c,h),Xo=t.dynCall_viiiij=(n,i,o,a,l,c)=>(Xo=t.dynCall_viiiij=z.Sf)(n,i,o,a,l,c),Jo=t.dynCall_viijj=(n,i,o,a,l)=>(Jo=t.dynCall_viijj=z.Tf)(n,i,o,a,l),ea=t.dynCall_vjjjjjjffiifiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le)=>(ea=t.dynCall_vjjjjjjffiifiiiiii=z.Uf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le),ta=t.dynCall_viiiiiiffiifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)=>(ta=t.dynCall_viiiiiiffiifiiiii=z.Vf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re),ra=t.dynCall_viiiiiiffifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>(ra=t.dynCall_viiiiiiffifiiiii=z.Wf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K),na=t.dynCall_viiiiiiffiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)=>(na=t.dynCall_viiiiiiffiiiiii=z.Xf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U),ia=t.dynCall_vjjjjjjjjfffiifiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We)=>(ia=t.dynCall_vjjjjjjjjfffiifiiiiii=z.Yf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We),oa=t.dynCall_vjjjjjjfffifiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he)=>(oa=t.dynCall_vjjjjjjfffifiiiiiii=z.Zf)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he),aa=t.dynCall_vjjjjjjfffifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)=>(aa=t.dynCall_vjjjjjjfffifiiiii=z._f)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re),sa=t.dynCall_vjjjjjjjjfffiifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)=>(sa=t.dynCall_vjjjjjjjjfffiifiiiii=z.$f)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re),ua=t.dynCall_vijjfffiii=(n,i,o,a,l,c,h,g,v,_)=>(ua=t.dynCall_vijjfffiii=z.ag)(n,i,o,a,l,c,h,g,v,_),la=t.dynCall_vijiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(la=t.dynCall_vijiiiiiiii=z.bg)(n,i,o,a,l,c,h,g,v,_,x),da=t.dynCall_vijjjjjjifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)=>(da=t.dynCall_vijjjjjjifiiiii=z.cg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U),ca=t.dynCall_vjjjjjiiii=(n,i,o,a,l,c,h,g,v,_)=>(ca=t.dynCall_vjjjjjiiii=z.dg)(n,i,o,a,l,c,h,g,v,_),fa=t.dynCall_vjjjjfiii=(n,i,o,a,l,c,h,g,v)=>(fa=t.dynCall_vjjjjfiii=z.eg)(n,i,o,a,l,c,h,g,v),pa=t.dynCall_viifi=(n,i,o,a,l)=>(pa=t.dynCall_viifi=z.fg)(n,i,o,a,l),ma=t.dynCall_vijjii=(n,i,o,a,l,c)=>(ma=t.dynCall_vijjii=z.gg)(n,i,o,a,l,c),ha=t.dynCall_viiiiijjiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(ha=t.dynCall_viiiiijjiiiii=z.hg)(n,i,o,a,l,c,h,g,v,_,x,E,B),ga=t.dynCall_iiiiiji=(n,i,o,a,l,c,h)=>(ga=t.dynCall_iiiiiji=z.ig)(n,i,o,a,l,c,h),ya=t.dynCall_iiiiji=(n,i,o,a,l,c)=>(ya=t.dynCall_iiiiji=z.jg)(n,i,o,a,l,c),ba=t.dynCall_viiiiijiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(ba=t.dynCall_viiiiijiiiiii=z.kg)(n,i,o,a,l,c,h,g,v,_,x,E,B),va=t.dynCall_viiijiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(va=t.dynCall_viiijiiiiii=z.lg)(n,i,o,a,l,c,h,g,v,_,x),wa=t.dynCall_viiiijii=(n,i,o,a,l,c,h,g)=>(wa=t.dynCall_viiiijii=z.mg)(n,i,o,a,l,c,h,g),_a=t.dynCall_viijjiii=(n,i,o,a,l,c,h,g)=>(_a=t.dynCall_viijjiii=z.ng)(n,i,o,a,l,c,h,g),$a=t.dynCall_ijii=(n,i,o,a)=>($a=t.dynCall_ijii=z.og)(n,i,o,a),Ca=t.dynCall_viiiiijjji=(n,i,o,a,l,c,h,g,v,_)=>(Ca=t.dynCall_viiiiijjji=z.pg)(n,i,o,a,l,c,h,g,v,_),Sa=t.dynCall_vijjjjiij=(n,i,o,a,l,c,h,g,v)=>(Sa=t.dynCall_vijjjjiij=z.qg)(n,i,o,a,l,c,h,g,v),xa=t.dynCall_viiiiijij=(n,i,o,a,l,c,h,g,v)=>(xa=t.dynCall_viiiiijij=z.rg)(n,i,o,a,l,c,h,g,v),Ia=t.dynCall_viiiiiijij=(n,i,o,a,l,c,h,g,v,_)=>(Ia=t.dynCall_viiiiiijij=z.sg)(n,i,o,a,l,c,h,g,v,_),Aa=t.dynCall_vijiii=(n,i,o,a,l,c)=>(Aa=t.dynCall_vijiii=z.tg)(n,i,o,a,l,c),Ta=t.dynCall_viiifii=(n,i,o,a,l,c,h)=>(Ta=t.dynCall_viiifii=z.ug)(n,i,o,a,l,c,h),Ea=t.dynCall_viiiiiiiiifi=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Ea=t.dynCall_viiiiiiiiifi=z.vg)(n,i,o,a,l,c,h,g,v,_,x,E),Pa=t.dynCall_iiijiiii=(n,i,o,a,l,c,h,g)=>(Pa=t.dynCall_iiijiiii=z.wg)(n,i,o,a,l,c,h,g),Oa=t.dynCall_viiiiiijjiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I)=>(Oa=t.dynCall_viiiiiijjiiiii=z.xg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I),ka=t.dynCall_viiiiiiijiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)=>(ka=t.dynCall_viiiiiiijiiiiii=z.yg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U),Ra=t.dynCall_vif=(n,i,o)=>(Ra=t.dynCall_vif=z.zg)(n,i,o),Da=t.dynCall_viif=(n,i,o,a)=>(Da=t.dynCall_viif=z.Ag)(n,i,o,a),Ba=t.dynCall_fiii=(n,i,o,a)=>(Ba=t.dynCall_fiii=z.Bg)(n,i,o,a),Ma=t.dynCall_diii=(n,i,o,a)=>(Ma=t.dynCall_diii=z.Cg)(n,i,o,a),za=t.dynCall_viiiiiifii=(n,i,o,a,l,c,h,g,v,_)=>(za=t.dynCall_viiiiiifii=z.Dg)(n,i,o,a,l,c,h,g,v,_),Ua=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We,qe,Ct,_i,$i,Ci)=>(Ua=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=z.Eg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We,qe,Ct,_i,$i,Ci),ja=t.dynCall_viijji=(n,i,o,a,l,c)=>(ja=t.dynCall_viijji=z.Fg)(n,i,o,a,l,c),Va=t.dynCall_iiiiiiiiiiiji=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(Va=t.dynCall_iiiiiiiiiiiji=z.Gg)(n,i,o,a,l,c,h,g,v,_,x,E,B),Na=t.dynCall_viifiifijjjii=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(Na=t.dynCall_viifiifijjjii=z.Hg)(n,i,o,a,l,c,h,g,v,_,x,E,B),Wa=t.dynCall_viiiiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We)=>(Wa=t.dynCall_viiiiiiiiiiiiiiiiiiii=z.Ig)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We),Ga=t.dynCall_viiiiifiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(Ga=t.dynCall_viiiiifiiiiii=z.Jg)(n,i,o,a,l,c,h,g,v,_,x,E,B),Ha=t.dynCall_vijiiiiiiijjii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I)=>(Ha=t.dynCall_vijiiiiiiijjii=z.Kg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I),La=t.dynCall_viiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he)=>(La=t.dynCall_viiiiiiiiiiiiiiiiii=z.Lg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he),Fa=t.dynCall_viiiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)=>(Fa=t.dynCall_viiiiiiiiiiiiiiiiiii=z.Mg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re),qa=t.dynCall_viiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)=>(qa=t.dynCall_viiiiiiiiiiiiiii=z.Ng)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K),Ka=t.dynCall_viiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)=>(Ka=t.dynCall_viiiiiiiiiiiiiiii=z.Og)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re),Ya=t.dynCall_viiiijjj=(n,i,o,a,l,c,h,g)=>(Ya=t.dynCall_viiiijjj=z.Pg)(n,i,o,a,l,c,h,g),Za=t.dynCall_iiiiid=(n,i,o,a,l,c)=>(Za=t.dynCall_iiiiid=z.Qg)(n,i,o,a,l,c),Qa=t.dynCall_viiiiiiijjj=(n,i,o,a,l,c,h,g,v,_,x)=>(Qa=t.dynCall_viiiiiiijjj=z.Rg)(n,i,o,a,l,c,h,g,v,_,x),Xa=t.dynCall_iiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(Xa=t.dynCall_iiiiiiiiiii=z.Sg)(n,i,o,a,l,c,h,g,v,_,x),Ja=t.dynCall_iiiiiiiiiiiiiiiiiifi=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)=>(Ja=t.dynCall_iiiiiiiiiiiiiiiiiifi=z.Tg)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re),es=t.dynCall_viiif=(n,i,o,a,l)=>(es=t.dynCall_viiif=z.Ug)(n,i,o,a,l),ts=t.dynCall_viiijiiiii=(n,i,o,a,l,c,h,g,v,_)=>(ts=t.dynCall_viiijiiiii=z.Vg)(n,i,o,a,l,c,h,g,v,_),rs=t.dynCall_viiij=(n,i,o,a,l)=>(rs=t.dynCall_viiij=z.Wg)(n,i,o,a,l),ns=t.dynCall_iijjj=(n,i,o,a,l)=>(ns=t.dynCall_iijjj=z.Xg)(n,i,o,a,l),is=t.dynCall_viiiiji=(n,i,o,a,l,c,h)=>(is=t.dynCall_viiiiji=z.Yg)(n,i,o,a,l,c,h),os=t.dynCall_iijjji=(n,i,o,a,l,c)=>(os=t.dynCall_iijjji=z.Zg)(n,i,o,a,l,c),as=t.dynCall_ijijji=(n,i,o,a,l,c)=>(as=t.dynCall_ijijji=z._g)(n,i,o,a,l,c),ss=t.dynCall_viiijjiii=(n,i,o,a,l,c,h,g,v)=>(ss=t.dynCall_viiijjiii=z.$g)(n,i,o,a,l,c,h,g,v),us=t.dynCall_iiiiijji=(n,i,o,a,l,c,h,g)=>(us=t.dynCall_iiiiijji=z.ah)(n,i,o,a,l,c,h,g),ls=t.dynCall_iiiifi=(n,i,o,a,l,c)=>(ls=t.dynCall_iiiifi=z.bh)(n,i,o,a,l,c),ds=t.dynCall_iiijii=(n,i,o,a,l,c)=>(ds=t.dynCall_iiijii=z.ch)(n,i,o,a,l,c),cs=t.dynCall_iiiiiiiiijii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(cs=t.dynCall_iiiiiiiiijii=z.dh)(n,i,o,a,l,c,h,g,v,_,x,E),fs=t.dynCall_iiiijjii=(n,i,o,a,l,c,h,g)=>(fs=t.dynCall_iiiijjii=z.eh)(n,i,o,a,l,c,h,g),ps=t.dynCall_iiiiiijjjii=(n,i,o,a,l,c,h,g,v,_,x)=>(ps=t.dynCall_iiiiiijjjii=z.fh)(n,i,o,a,l,c,h,g,v,_,x),ms=t.dynCall_iiijiii=(n,i,o,a,l,c,h)=>(ms=t.dynCall_iiijiii=z.gh)(n,i,o,a,l,c,h),hs=t.dynCall_iiiiiiiijjjfi=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(hs=t.dynCall_iiiiiiiijjjfi=z.hh)(n,i,o,a,l,c,h,g,v,_,x,E,B),gs=t.dynCall_iijiiii=(n,i,o,a,l,c,h)=>(gs=t.dynCall_iijiiii=z.ih)(n,i,o,a,l,c,h),ys=t.dynCall_iijjjii=(n,i,o,a,l,c,h)=>(ys=t.dynCall_iijjjii=z.jh)(n,i,o,a,l,c,h),bs=t.dynCall_iiji=(n,i,o,a)=>(bs=t.dynCall_iiji=z.kh)(n,i,o,a),vs=t.dynCall_iiif=(n,i,o,a)=>(vs=t.dynCall_iiif=z.lh)(n,i,o,a),ws=t.dynCall_vidi=(n,i,o,a)=>(ws=t.dynCall_vidi=z.mh)(n,i,o,a),_s=t.dynCall_vjiii=(n,i,o,a,l)=>(_s=t.dynCall_vjiii=z.nh)(n,i,o,a,l),$s=t.dynCall_diiii=(n,i,o,a,l)=>($s=t.dynCall_diiii=z.oh)(n,i,o,a,l),Cs=t.dynCall_diiiii=(n,i,o,a,l,c)=>(Cs=t.dynCall_diiiii=z.ph)(n,i,o,a,l,c),Ss=t.dynCall_viiijjiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Ss=t.dynCall_viiijjiiiiii=z.qh)(n,i,o,a,l,c,h,g,v,_,x,E),xs=t.dynCall_viijjijjjjiii=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(xs=t.dynCall_viijjijjjjiii=z.rh)(n,i,o,a,l,c,h,g,v,_,x,E,B),Is=t.dynCall_iiiij=(n,i,o,a,l)=>(Is=t.dynCall_iiiij=z.sh)(n,i,o,a,l),As=t.dynCall_viiijii=(n,i,o,a,l,c,h)=>(As=t.dynCall_viiijii=z.th)(n,i,o,a,l,c,h),Ts=t.dynCall_viijiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B)=>(Ts=t.dynCall_viijiiiiiiiii=z.uh)(n,i,o,a,l,c,h,g,v,_,x,E,B),Es=t.dynCall_fiiii=(n,i,o,a,l)=>(Es=t.dynCall_fiiii=z.vh)(n,i,o,a,l),Ps=t.dynCall_jfi=(n,i,o)=>(Ps=t.dynCall_jfi=z.wh)(n,i,o),Os=t.dynCall_viiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)=>(Os=t.dynCall_viiiiiiiiiiiiii=z.xh)(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U),ks=t.dynCall_jiij=(n,i,o,a)=>(ks=t.dynCall_jiij=z.yh)(n,i,o,a),Rs=n=>(Rs=z.zh)(n),Ds=()=>(Ds=z.Ah)(),Bs=n=>(Bs=z.Bh)(n),Ms=()=>(Ms=z.Ch)();t.___start_em_js=1392963,t.___stop_em_js=1393124;function tf(n,i,o,a){var l=N();try{return _r(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function rf(n,i,o){var a=N();try{return qr(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function nf(n,i,o){var a=N();try{tr(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function of(n,i){var o=N();try{return Kr(n,i)}catch(a){if(W(o),a!==a+0)throw a;j(1,0)}}function af(n,i){var o=N();try{$r(n,i)}catch(a){if(W(o),a!==a+0)throw a;j(1,0)}}function sf(n,i,o,a){var l=N();try{return Qr(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function uf(n){var i=N();try{Cr(n)}catch(o){if(W(i),o!==o+0)throw o;j(1,0)}}function lf(n,i,o,a,l,c,h){var g=N();try{return Yr(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function df(n,i,o,a,l,c){var h=N();try{return Zr(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function cf(n,i,o,a,l){var c=N();try{return Xr(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function ff(n,i,o,a){var l=N();try{Sr(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function pf(n,i,o,a,l){var c=N();try{xr(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function mf(n,i,o,a,l,c){var h=N();try{rr(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function hf(n,i,o,a,l,c,h){var g=N();try{Jr(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function gf(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{tn(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function yf(n,i,o){var a=N();try{return nn(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function bf(n,i,o){var a=N();try{return Wn(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function vf(n,i,o){var a=N();try{return nr(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function wf(n,i,o){var a=N();try{return on(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;return j(1,0),0n}}function _f(n,i,o,a,l,c,h,g,v){var _=N();try{b(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function $f(n){var i=N();try{return p(n)}catch(o){if(W(i),o!==o+0)throw o;j(1,0)}}function Cf(n,i,o){var a=N();try{me(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function Sf(n,i,o,a,l){var c=N();try{en(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function xf(n,i,o,a,l,c,h){var g=N();try{S(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function If(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{ke(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function Af(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{Be(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function Tf(n,i,o,a,l,c,h,g){var v=N();try{return F(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function Ef(n,i,o,a,l,c,h,g){var v=N();try{we(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function Pf(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{return Z(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function Of(n,i,o,a,l,c,h,g,v,_,x,E,B,I){var U=N();try{Pt(n,i,o,a,l,c,h,g,v,_,x,E,B,I)}catch(K){if(W(U),K!==K+0)throw K;j(1,0)}}function kf(n,i,o,a,l,c,h,g,v,_){var x=N();try{ee(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function Rf(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{return co(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function Df(n,i,o,a,l,c,h,g,v){var _=N();try{return an(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function Bf(n,i,o,a,l,c,h,g,v){var _=N();try{fo(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function Mf(n,i,o,a){var l=N();try{H(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function zf(n,i){var o=N();try{return po(n,i)}catch(a){if(W(o),a!==a+0)throw a;j(1,0)}}function Uf(n,i){var o=N();try{return M(n,i)}catch(a){if(W(o),a!==a+0)throw a;return j(1,0),0n}}function jf(n,i){var o=N();try{return ho(n,i)}catch(a){if(W(o),a!==a+0)throw a;j(1,0)}}function Vf(n,i,o,a){var l=N();try{yo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function Nf(n,i,o,a,l,c,h){var g=N();try{As(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Wf(n,i,o,a,l){var c=N();try{Jo(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function Gf(n,i,o,a,l,c,h,g,v,_){var x=N();try{return bo(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function Hf(n,i,o,a,l,c,h){var g=N();try{vo(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Lf(n,i,o,a){var l=N();try{wo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function Ff(n,i,o,a,l,c,h,g,v){var _=N();try{return ze(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function qf(n,i,o,a,l,c,h){var g=N();try{_o(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Kf(n,i,o,a,l,c,h,g,v){var _=N();try{rn(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function Yf(n,i,o,a,l,c,h){var g=N();try{$o(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Zf(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Co(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function Qf(n,i,o,a){var l=N();try{return xo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;return j(1,0),0n}}function Xf(n,i,o,a,l,c,h,g){var v=N();try{Io(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function Jf(n,i,o,a,l){var c=N();try{Ao(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function ep(n,i,o,a){var l=N();try{Eo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function tp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K){var re=N();try{Po(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)}catch(le){if(W(re),le!==le+0)throw le;j(1,0)}}function rp(n,i,o,a,l,c){var h=N();try{Oo(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function np(n,i,o,a,l,c,h,g,v){var _=N();try{ko(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function ip(n,i,o,a,l){var c=N();try{return Ro(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function op(n,i,o,a,l,c,h,g,v,_,x,E,B,I){var U=N();try{return Do(n,i,o,a,l,c,h,g,v,_,x,E,B,I)}catch(K){if(W(U),K!==K+0)throw K;j(1,0)}}function ap(n,i){var o=N();try{Bo(n,i)}catch(a){if(W(o),a!==a+0)throw a;j(1,0)}}function sp(n,i,o){var a=N();try{return Mo(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;return j(1,0),0n}}function up(n,i,o,a,l,c,h,g,v,_){var x=N();try{return zo(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function lp(n,i,o,a,l,c,h,g,v,_,x,E,B,I){var U=N();try{Wo(n,i,o,a,l,c,h,g,v,_,x,E,B,I)}catch(K){if(W(U),K!==K+0)throw K;j(1,0)}}function dp(n,i,o,a,l){var c=N();try{Uo(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function cp(n,i,o,a,l,c,h){var g=N();try{jo(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function fp(n,i,o,a,l){var c=N();try{No(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function pp(n,i,o,a,l,c,h,g){var v=N();try{Vo(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function mp(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Go(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function hp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re){var le=N();try{return Ho(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)}catch(he){if(W(le),he!==he+0)throw he;j(1,0)}}function gp(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{Lo(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function yp(n,i){var o=N();try{return pe(n,i)}catch(a){if(W(o),a!==a+0)throw a;j(1,0)}}function bp(n,i,o,a,l){var c=N();try{return Es(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function vp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re){var We=N();try{return Fo(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)}catch(qe){if(W(We),qe!==qe+0)throw qe;j(1,0)}}function wp(n,i,o,a,l,c,h,g,v,_){var x=N();try{qo(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function _p(n,i,o,a,l,c,h){var g=N();try{return Ko(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function $p(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Yo(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function Cp(n,i,o,a,l,c){var h=N();try{return Zo(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function Sp(n,i,o,a,l,c){var h=N();try{Xo(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function xp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le){var he=N();try{ea(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le)}catch(Re){if(W(he),Re!==Re+0)throw Re;j(1,0)}}function Ip(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re){var le=N();try{ta(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)}catch(he){if(W(le),he!==he+0)throw he;j(1,0)}}function Ap(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K){var re=N();try{ra(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)}catch(le){if(W(re),le!==le+0)throw le;j(1,0)}}function Tp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U){var K=N();try{na(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)}catch(re){if(W(K),re!==re+0)throw re;j(1,0)}}function Ep(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We){var qe=N();try{ia(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We)}catch(Ct){if(W(qe),Ct!==Ct+0)throw Ct;j(1,0)}}function Pp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he){var Re=N();try{oa(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he)}catch(We){if(W(Re),We!==We+0)throw We;j(1,0)}}function Op(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re){var le=N();try{aa(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)}catch(he){if(W(le),he!==he+0)throw he;j(1,0)}}function kp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re){var We=N();try{sa(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)}catch(qe){if(W(We),qe!==qe+0)throw qe;j(1,0)}}function Rp(n,i,o,a,l,c,h,g,v,_){var x=N();try{ua(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function Dp(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{la(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function Bp(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U){var K=N();try{da(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)}catch(re){if(W(K),re!==re+0)throw re;j(1,0)}}function Mp(n,i,o,a,l,c,h,g,v,_){var x=N();try{ca(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function zp(n,i,o,a,l,c,h,g,v){var _=N();try{fa(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function Up(n,i,o,a,l,c,h){var g=N();try{return Qo(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function jp(n,i,o,a,l){var c=N();try{pa(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function Vp(n,i,o){var a=N();try{return Ps(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;return j(1,0),0n}}function Np(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{ha(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function Wp(n,i,o,a,l,c,h){var g=N();try{return ga(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Gp(n,i,o,a,l,c){var h=N();try{return ya(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function Hp(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{ba(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function Lp(n,i,o,a,l,c){var h=N();try{ma(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function Fp(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{va(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function qp(n,i,o,a,l,c,h,g){var v=N();try{wa(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function Kp(n,i,o,a,l,c,h,g){var v=N();try{_a(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function Yp(n,i,o,a){var l=N();try{return $a(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function Zp(n,i,o,a,l,c,h,g,v,_){var x=N();try{Ca(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function Qp(n,i,o,a,l,c,h,g,v){var _=N();try{Sa(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function Xp(n,i,o,a,l,c,h,g,v){var _=N();try{xa(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function Jp(n,i,o,a,l,c,h,g,v,_){var x=N();try{Ia(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function em(n,i,o,a,l,c){var h=N();try{Aa(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function tm(n,i,o,a,l,c,h){var g=N();try{Ta(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function rm(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{Ea(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function nm(n,i,o,a,l,c,h,g){var v=N();try{return Pa(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function im(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U){var K=N();try{Os(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)}catch(re){if(W(K),re!==re+0)throw re;j(1,0)}}function om(n,i,o,a,l,c,h,g,v,_,x,E,B,I){var U=N();try{Oa(n,i,o,a,l,c,h,g,v,_,x,E,B,I)}catch(K){if(W(U),K!==K+0)throw K;j(1,0)}}function am(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U){var K=N();try{ka(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U)}catch(re){if(W(K),re!==re+0)throw re;j(1,0)}}function sm(n,i,o){var a=N();try{Ra(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function um(n,i,o,a){var l=N();try{return Ba(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function lm(n,i,o,a){var l=N();try{return Ma(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function dm(n,i,o,a,l,c,h,g,v,_){var x=N();try{za(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function cm(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We,qe,Ct,_i,$i,Ci){var dh=N();try{Ua(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We,qe,Ct,_i,$i,Ci)}catch(Si){if(W(dh),Si!==Si+0)throw Si;j(1,0)}}function fm(n,i,o,a,l,c){var h=N();try{ja(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function pm(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{return Va(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function mm(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{Na(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function hm(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We){var qe=N();try{Wa(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re,We)}catch(Ct){if(W(qe),Ct!==Ct+0)throw Ct;j(1,0)}}function gm(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{Ga(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function ym(n,i,o,a,l,c,h,g,v,_,x,E,B,I){var U=N();try{Ha(n,i,o,a,l,c,h,g,v,_,x,E,B,I)}catch(K){if(W(U),K!==K+0)throw K;j(1,0)}}function bm(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re){var We=N();try{Fa(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)}catch(qe){if(W(We),qe!==qe+0)throw qe;j(1,0)}}function vm(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re){var le=N();try{Ka(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re)}catch(he){if(W(le),he!==he+0)throw he;j(1,0)}}function wm(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he){var Re=N();try{La(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he)}catch(We){if(W(Re),We!==We+0)throw We;j(1,0)}}function _m(n,i,o,a,l,c,h,g){var v=N();try{Ya(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function $m(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Qa(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function Cm(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{return Xa(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function Sm(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re){var We=N();try{return Ja(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K,re,le,he,Re)}catch(qe){if(W(We),qe!==qe+0)throw qe;j(1,0)}}function xm(n,i,o,a,l){var c=N();try{es(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function Im(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{So(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function Am(n,i,o,a,l,c,h,g,v,_){var x=N();try{ts(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;j(1,0)}}function Tm(n,i,o,a,l){var c=N();try{rs(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function Em(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{Ts(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function Pm(n,i,o,a,l){var c=N();try{return ns(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function Om(n,i,o,a){var l=N();try{return ks(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;return j(1,0),0n}}function km(n,i,o,a,l,c,h){var g=N();try{is(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Rm(n,i,o,a,l,c){var h=N();try{return os(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function Dm(n,i,o,a,l,c){var h=N();try{return as(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function Bm(n,i,o,a,l,c,h,g,v){var _=N();try{ss(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;j(1,0)}}function Mm(n,i,o,a){var l=N();try{Da(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function zm(n,i,o,a,l,c,h,g){var v=N();try{return us(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function Um(n,i,o,a,l,c){var h=N();try{return ls(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function jm(n,i,o,a,l,c){var h=N();try{return ds(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function Vm(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{return cs(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function Nm(n,i,o,a,l,c,h,g){var v=N();try{return fs(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;j(1,0)}}function Wm(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{return ps(n,i,o,a,l,c,h,g,v,_,x)}catch(B){if(W(E),B!==B+0)throw B;j(1,0)}}function Gm(n,i,o,a,l,c,h){var g=N();try{return ms(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Hm(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{return hs(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function Lm(n,i,o,a,l,c,h){var g=N();try{return gs(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function Fm(n,i,o,a,l,c,h){var g=N();try{return ys(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;j(1,0)}}function qm(n,i,o,a){var l=N();try{return bs(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function Km(n,i,o,a){var l=N();try{ws(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function Ym(n,i,o,a){var l=N();try{return vs(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;j(1,0)}}function Zm(n,i,o,a,l){var c=N();try{_s(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function Qm(n,i,o,a,l){var c=N();try{return $s(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function Xm(n,i,o,a,l,c){var h=N();try{return Cs(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function Jm(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{Ss(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function eh(n,i,o,a,l,c,h,g,v,_,x,E,B){var I=N();try{xs(n,i,o,a,l,c,h,g,v,_,x,E,B)}catch(U){if(W(I),U!==U+0)throw U;j(1,0)}}function th(n,i,o,a,l,c,h,g,v,_,x,E){var B=N();try{To(n,i,o,a,l,c,h,g,v,_,x,E)}catch(I){if(W(B),I!==I+0)throw I;j(1,0)}}function rh(n,i,o,a,l){var c=N();try{return Is(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;j(1,0)}}function nh(n){var i=N();try{return de(n)}catch(o){if(W(i),o!==o+0)throw o;return j(1,0),0n}}function ih(n,i,o,a,l,c){var h=N();try{return ce(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function oh(n,i,o,a,l,c){var h=N();try{return Za(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;j(1,0)}}function ah(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K){var re=N();try{qa(n,i,o,a,l,c,h,g,v,_,x,E,B,I,U,K)}catch(le){if(W(re),le!==le+0)throw le;j(1,0)}}function sh(n,i,o){var a=N();try{return mo(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function uh(n,i,o){var a=N();try{return go(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;j(1,0)}}function lh(){var n=z;n=Object.assign({},n);var i=a=>()=>a()>>>0,o=a=>l=>a(l)>>>0;return n.de=i(n.de),n.ee=o(n.ee),n.ge=o(n.ge),n.ke=i(n.ke),n.me=o(n.me),n}t.stackAlloc=zn,t.stackSave=N,t.stackRestore=W,t.UTF8ToString=Xe,t.stringToUTF8=(n,i,o)=>wt(n,J,i,o),t.lengthBytesUTF8=dr;var Gn;De=function n(){Gn||zs(),Gn||(De=n)};function zs(){if(!(0<Se)){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;){var n=t.preRun.shift();Me.unshift(n)}for(;0<Me.length;)Me.shift()(t);if(!(0<Se||Gn||(Gn=!0,t.calledRun=!0,V))){for(;0<Ae.length;)Ae.shift()(t);for(u(t);0<$e.length;)$e.shift()(t)}}}return zs(),r.ready}})();typeof Vs=="object"&&typeof Ti=="object"?Ti.exports=js:typeof define=="function"&&define.amd&&define([],()=>js)});var Ws=sn(()=>{});var Gs=sn(()=>{});var Hs={};Hn(Hs,{cpus:()=>bh});var bh,Ls=oe(()=>{bh=void 0});var Ks=sn((qs,Ei)=>{"use strict";var Fs=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){function t(){return _e.buffer!=$e.buffer&&te(),$e}function u(){return _e.buffer!=$e.buffer&&te(),Se}function s(){return _e.buffer!=$e.buffer&&te(),xe}function f(){return _e.buffer!=$e.buffer&&te(),De}function m(){return _e.buffer!=$e.buffer&&te(),Ye}var d=r,y,w;d.ready=new Promise((p,b)=>{y=p,w=b}),d.jsepInit=(p,b,S,M,H,Z,ee,pe)=>{d.Qb=p,d.wb=b,d.yb=S,d.jb=M,d.xb=H,d.Ea=Z,d.zb=ee,d.Ab=pe,b=(ce,de,me)=>(...ke)=>{let Be=bt,F=de?.();ke=ce(...ke);let we=de?.();return F!==we&&(ce=we,me(F),de=me=null),bt!=Be?N():ke},S=ce=>async(...de)=>{try{if(d.bb)throw Error("Session already started");let me=d.bb={Fb:de[0],errors:[]},ke=await ce(...de);if(d.bb!==me)throw Error("Session mismatch");p.flush();let Be=me.errors;if(0<Be.length){let F=await Promise.all(Be);if(F=F.filter(we=>we),0<F.length)throw Error(F.join(`\n`))}return ke}finally{d.bb=null}},d._OrtRun=S(b(d._OrtRun,()=>d._OrtRun,ce=>d._OrtRun=ce)),d._OrtRunWithBinding=S(b(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,ce=>d._OrtRunWithBinding=ce)),d._OrtBindInput=b(d._OrtBindInput,()=>d._OrtBindInput,ce=>d._OrtBindInput=ce),d.jsepRegisterBuffer=(ce,de,me,ke)=>p.registerBuffer(ce,de,me,ke),d.jsepUnregisterBuffers=ce=>{p.unregisterBuffers(ce)},d.jsepGetBuffer=ce=>p.getBuffer(ce),d.jsepCreateDownloader=(ce,de,me)=>p.createDownloader(ce,de,me)};var C=Object.assign({},d),$="./this.program",T=(p,b)=>{throw b},P=typeof window=="object",A=typeof importScripts=="function",O=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",R=d.ENVIRONMENT_IS_PTHREAD||!1,D="";function k(p){return d.locateFile?d.locateFile(p,D):D+p}var G,V,q;if(O){var Y=(Fn(),ir(Ln)),J=(Ai(),ir(Ii));D=A?J.dirname(D)+"/":__dirname+"/",G=(b,S)=>(b=b.startsWith("file://")?new URL(b):J.normalize(b),Y.readFileSync(b,S?void 0:"utf8")),q=b=>(b=G(b,!0),b.buffer||(b=new Uint8Array(b)),b),V=(b,S,M,H=!0)=>{b=b.startsWith("file://")?new URL(b):J.normalize(b),Y.readFile(b,H?void 0:"utf8",(Z,ee)=>{Z?M(Z):S(H?ee.buffer:ee)})},!d.thisProgram&&1<process.argv.length&&($=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),T=(b,S)=>{throw process.exitCode=b,S},d.inspect=()=>"[Emscripten Module object]";let p;try{p=Ws()}catch(b){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),b}global.Worker=p.Worker}else(P||A)&&(A?D=self.location.href:typeof document<"u"&&document.currentScript&&(D=document.currentScript.src),typeof e<"u"&&e&&(D=e),D.indexOf("blob:")!==0?D=D.substr(0,D.replace(/[?#].*/,"").lastIndexOf("/")+1):D="",O||(G=p=>{var b=new XMLHttpRequest;return b.open("GET",p,!1),b.send(null),b.responseText},A&&(q=p=>{var b=new XMLHttpRequest;return b.open("GET",p,!1),b.responseType="arraybuffer",b.send(null),new Uint8Array(b.response)}),V=(p,b,S)=>{var M=new XMLHttpRequest;M.open("GET",p,!0),M.responseType="arraybuffer",M.onload=()=>{M.status==200||M.status==0&&M.response?b(M.response):S()},M.onerror=S,M.send(null)}));O&&typeof performance>"u"&&(global.performance=Gs().performance);var ie=console.log.bind(console),ge=console.error.bind(console);O&&(ie=(...p)=>Y.writeSync(1,p.join(" ")+`\n`),ge=(...p)=>Y.writeSync(2,p.join(" ")+`\n`));var L=d.print||ie,ue=d.printErr||ge;Object.assign(d,C),C=null,d.thisProgram&&($=d.thisProgram),d.quit&&(T=d.quit);var je;d.wasmBinary&&(je=d.wasmBinary);var Ne=d.noExitRuntime||!0;typeof WebAssembly!="object"&&tt("no native wasm support detected");var _e,ae,ye,Me=!1,Ae,$e,Se,xe,De,Ye;function te(){var p=_e.buffer;d.HEAP8=$e=new Int8Array(p),d.HEAP16=new Int16Array(p),d.HEAP32=xe=new Int32Array(p),d.HEAPU8=Se=new Uint8Array(p),d.HEAPU16=new Uint16Array(p),d.HEAPU32=De=new Uint32Array(p),d.HEAPF32=new Float32Array(p),d.HEAPF64=Ye=new Float64Array(p)}var fe=d.INITIAL_MEMORY||16777216;if(5242880<=fe||tt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+fe+"! (STACK_SIZE=5242880)"),R)_e=d.wasmMemory;else if(d.wasmMemory)_e=d.wasmMemory;else if(_e=new WebAssembly.Memory({initial:fe/65536,maximum:65536,shared:!0}),!(_e.buffer instanceof SharedArrayBuffer))throw ue("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),O&&ue("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");te(),fe=_e.buffer.byteLength;var Ie=[],st=[],et=[],lt=0;function It(){return Ne||0<lt}var Fe=0,Qe=null,pt=null;function At(){Fe++,d.monitorRunDependencies&&d.monitorRunDependencies(Fe)}function Vt(){if(Fe--,d.monitorRunDependencies&&d.monitorRunDependencies(Fe),Fe==0&&(Qe!==null&&(clearInterval(Qe),Qe=null),pt)){var p=pt;pt=null,p()}}function tt(p){throw d.onAbort&&d.onAbort(p),p="Aborted("+p+")",ue(p),Me=!0,Ae=1,p=new WebAssembly.RuntimeError(p+". Build with -sASSERTIONS for more info."),w(p),p}function lr(p){return p.startsWith("data:application/octet-stream;base64,")}var vt;vt="ort-wasm-simd-threaded.wasm",lr(vt)||(vt=k(vt));function Pr(p){if(p==vt&&je)return new Uint8Array(je);if(q)return q(p);throw"both async and sync fetching of the wasm failed"}function hn(p){if(!je&&(P||A)){if(typeof fetch=="function"&&!p.startsWith("file://"))return fetch(p,{credentials:"same-origin"}).then(b=>{if(!b.ok)throw"failed to load wasm binary file at \'"+p+"\'";return b.arrayBuffer()}).catch(()=>Pr(p));if(V)return new Promise((b,S)=>{V(p,M=>b(new Uint8Array(M)),S)})}return Promise.resolve().then(()=>Pr(p))}function Xe(p,b,S){return hn(p).then(M=>WebAssembly.instantiate(M,b)).then(M=>M).then(S,M=>{ue("failed to asynchronously prepare wasm: "+M),tt(M)})}function dr(p,b){var S=vt;return je||typeof WebAssembly.instantiateStreaming!="function"||lr(S)||S.startsWith("file://")||O||typeof fetch!="function"?Xe(S,p,b):fetch(S,{credentials:"same-origin"}).then(M=>WebAssembly.instantiateStreaming(M,p).then(b,function(H){return ue("wasm streaming compile failed: "+H),ue("falling back to ArrayBuffer instantiation"),Xe(S,p,b)}))}var wt,cr={906828:p=>{d.Ea("Abs",p,void 0)},906879:p=>{d.Ea("Neg",p,void 0)},906930:p=>{d.Ea("Floor",p,void 0)},906983:p=>{d.Ea("Ceil",p,void 0)},907035:p=>{d.Ea("Reciprocal",p,void 0)},907093:p=>{d.Ea("Sqrt",p,void 0)},907145:p=>{d.Ea("Exp",p,void 0)},907196:p=>{d.Ea("Erf",p,void 0)},907247:p=>{d.Ea("Sigmoid",p,void 0)},907302:p=>{d.Ea("Log",p,void 0)},907353:p=>{d.Ea("Sin",p,void 0)},907404:p=>{d.Ea("Cos",p,void 0)},907455:p=>{d.Ea("Tan",p,void 0)},907506:p=>{d.Ea("Asin",p,void 0)},907558:p=>{d.Ea("Acos",p,void 0)},907610:p=>{d.Ea("Atan",p,void 0)},907662:p=>{d.Ea("Sinh",p,void 0)},907714:p=>{d.Ea("Cosh",p,void 0)},907766:p=>{d.Ea("Asinh",p,void 0)},907819:p=>{d.Ea("Acosh",p,void 0)},907872:p=>{d.Ea("Atanh",p,void 0)},907925:p=>{d.Ea("Tanh",p,void 0)},907977:p=>{d.Ea("Not",p,void 0)},908028:(p,b,S)=>{d.Ea("ClipV10",p,{min:b,max:S})},908100:p=>{d.Ea("Clip",p,void 0)},908152:(p,b)=>{d.Ea("Elu",p,{alpha:b})},908210:p=>{d.Ea("Relu",p,void 0)},908262:(p,b)=>{d.Ea("LeakyRelu",p,{alpha:b})},908326:(p,b)=>{d.Ea("ThresholdedRelu",p,{alpha:b})},908396:(p,b)=>{d.Ea("Cast",p,{to:b})},908454:p=>{d.Ea("Add",p,void 0)},908505:p=>{d.Ea("Sub",p,void 0)},908556:p=>{d.Ea("Mul",p,void 0)},908607:p=>{d.Ea("Div",p,void 0)},908658:p=>{d.Ea("Pow",p,void 0)},908709:p=>{d.Ea("Equal",p,void 0)},908762:p=>{d.Ea("Greater",p,void 0)},908817:p=>{d.Ea("GreaterOrEqual",p,void 0)},908879:p=>{d.Ea("Less",p,void 0)},908931:p=>{d.Ea("LessOrEqual",p,void 0)},908990:(p,b,S,M,H)=>{d.Ea("ReduceMean",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},909154:(p,b,S,M,H)=>{d.Ea("ReduceMax",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},909317:(p,b,S,M,H)=>{d.Ea("ReduceMin",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},909480:(p,b,S,M,H)=>{d.Ea("ReduceProd",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},909644:(p,b,S,M,H)=>{d.Ea("ReduceSum",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},909807:(p,b,S,M,H)=>{d.Ea("ReduceL1",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},909969:(p,b,S,M,H)=>{d.Ea("ReduceL2",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},910131:(p,b,S,M,H)=>{d.Ea("ReduceLogSum",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},910297:(p,b,S,M,H)=>{d.Ea("ReduceSumSquare",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},910466:(p,b,S,M,H)=>{d.Ea("ReduceLogSumExp",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},910635:p=>{d.Ea("Where",p,void 0)},910688:(p,b,S)=>{d.Ea("Transpose",p,{perm:b?Array.from(s().subarray(S>>>0,S+b>>>0)):[]})},910801:(p,b,S,M,H,Z,ee,pe,ce,de)=>{d.Ea("Conv",p,{format:ce?"NHWC":"NCHW",auto_pad:b,dilations:[S],group:M,kernel_shape:[H],pads:[Z,ee],strides:[pe],w_is_const:()=>!!t()[de>>>0]})},911029:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F,we)=>{d.Ea("Conv",p,{format:F?"NHWC":"NCHW",auto_pad:b,dilations:[S,M],group:H,kernel_shape:[Z,ee],pads:[pe,ce,de,me],strides:[ke,Be],w_is_const:()=>!!t()[we>>>0]})},911288:(p,b,S,M,H,Z,ee,pe,ce,de)=>{d.Ea("Conv",p,{format:ce?"NHWC":"NCHW",auto_pad:b,dilations:[S],group:M,kernel_shape:[H],pads:[Z,ee],strides:[pe],w_is_const:()=>!!t()[de>>>0]})},911516:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F,we)=>{d.Ea("Conv",p,{format:F?"NHWC":"NCHW",auto_pad:b,dilations:[S,M],group:H,kernel_shape:[Z,ee],pads:[pe,ce,de,me],strides:[ke,Be],w_is_const:()=>!!t()[we>>>0]})},911775:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F)=>{d.Ea("ConvTranspose",p,{format:ce?"NHWC":"NCHW",autoPad:b,dilations:[S],group:M,kernel_shape:[H],pads:[Z,ee],strides:[pe],wIsConst:()=>!!t()[de>>>0],outputPadding:me?Array.from(s().subarray(ke>>>0,ke+me>>>0)):[],outputShape:Be?Array.from(s().subarray(F>>>0,F+Be>>>0)):[]})},912155:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be)=>{d.Ea("ConvTranspose",p,{format:pe?"NHWC":"NCHW",autoPad:b,dilations:Array.from(s().subarray(S>>>0,S+2>>>0)),group:M,kernelShape:Array.from(s().subarray(H>>>0,H+2>>>0)),pads:Array.from(s().subarray(Z>>>0,Z+4>>>0)),strides:Array.from(s().subarray(ee>>>0,ee+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:0<de?Array.from(s().subarray(me>>>0,me+de>>>0)):[],outputShape:0<ke?Array.from(s().subarray(Be>>>0,Be+ke>>>0)):[]})},912678:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F)=>{d.Ea("ConvTranspose",p,{format:ce?"NHWC":"NCHW",autoPad:b,dilations:[S],group:M,kernel_shape:[H],pads:[Z,ee],strides:[pe],wIsConst:()=>!!t()[de>>>0],outputPadding:me?Array.from(s().subarray(ke>>>0,ke+me>>>0)):[],outputShape:Be?Array.from(s().subarray(F>>>0,F+Be>>>0)):[]})},913058:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be)=>{d.Ea("ConvTranspose",p,{format:pe?"NHWC":"NCHW",autoPad:b,dilations:Array.from(s().subarray(S>>>0,S+2>>>0)),group:M,kernelShape:Array.from(s().subarray(H>>>0,H+2>>>0)),pads:Array.from(s().subarray(Z>>>0,Z+4>>>0)),strides:Array.from(s().subarray(ee>>>0,ee+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:0<de?Array.from(s().subarray(me>>>0,me+de>>>0)):[],outputShape:0<ke?Array.from(s().subarray(Be>>>0,Be+ke>>>0)):[]})},913581:(p,b)=>{d.Ea("GlobalAveragePool",p,{format:b?"NHWC":"NCHW"})},913672:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F,we,ze)=>{d.Ea("AveragePool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:M,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,ke,Be],strides:[F,we]})},913956:(p,b)=>{d.Ea("GlobalAveragePool",p,{format:b?"NHWC":"NCHW"})},914047:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F,we,ze)=>{d.Ea("AveragePool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:M,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,ke,Be],strides:[F,we]})},914331:(p,b)=>{d.Ea("GlobalMaxPool",p,{format:b?"NHWC":"NCHW"})},914418:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F,we,ze)=>{d.Ea("MaxPool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:M,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,ke,Be],strides:[F,we]})},914698:(p,b)=>{d.Ea("GlobalMaxPool",p,{format:b?"NHWC":"NCHW"})},914785:(p,b,S,M,H,Z,ee,pe,ce,de,me,ke,Be,F,we,ze)=>{d.Ea("MaxPool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:M,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,ke,Be],strides:[F,we]})},915065:(p,b,S,M,H)=>{d.Ea("Gemm",p,{alpha:b,beta:S,transA:M,transB:H})},915169:p=>{d.Ea("MatMul",p,void 0)},915223:(p,b,S,M)=>{d.Ea("ArgMax",p,{keepDims:!!b,selectLastIndex:!!S,axis:M})},915331:(p,b,S,M)=>{d.Ea("ArgMin",p,{keepDims:!!b,selectLastIndex:!!S,axis:M})},915439:(p,b)=>{d.Ea("Softmax",p,{axis:b})},915502:(p,b)=>{d.Ea("Concat",p,{axis:b})},915562:(p,b,S,M,H)=>{d.Ea("Split",p,{axis:b,numOutputs:S,splitSizes:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},915707:p=>{d.Ea("Expand",p,void 0)},915761:(p,b)=>{d.Ea("Gather",p,{axis:Number(b)})},915832:(p,b)=>{d.Ea("GatherElements",p,{axis:Number(b)})},915911:(p,b,S,M,H,Z,ee,pe,ce,de,me)=>{d.Ea("Resize",p,{antialias:b,axes:S?Array.from(s().subarray(M>>>0,M+S>>>0)):[],coordinateTransformMode:Tt(H),cubicCoeffA:Z,excludeOutside:ee,extrapolationValue:pe,keepAspectRatioPolicy:Tt(ce),mode:Tt(de),nearestMode:Tt(me)})},916262:(p,b,S,M,H,Z,ee)=>{d.Ea("Slice",p,{starts:b?Array.from(s().subarray(S>>>0,S+b>>>0)):[],ends:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[],axes:Z?Array.from(s().subarray(ee>>>0,ee+Z>>>0)):[]})},916493:p=>{d.Ea("Tile",p,void 0)},916545:(p,b,S)=>{d.Ea("LayerNormalization",p,{axis:Number(b),epsilon:Number(S)})},916652:(p,b,S)=>{d.Ea("InstanceNormalization",p,{epsilon:b,format:S?"NHWC":"NCHW"})},916766:(p,b,S)=>{d.Ea("InstanceNormalization",p,{epsilon:b,format:S?"NHWC":"NCHW"})},916880:p=>{d.Ea("Range",p,void 0)},916933:(p,b)=>{d.Ea("Einsum",p,{equation:Tt(b)})},917014:(p,b,S,M,H)=>{d.Ea("Pad",p,{mode:b,value:S,pads:M?Array.from(s().subarray(H>>>0,H+M>>>0)):[]})},917146:p=>{d.Ea("Gelu",p,void 0)},917198:p=>{d.Ea("BiasAdd",p,void 0)},917253:p=>{d.Ea("BiasSplitGelu",p,void 0)},917314:(p,b)=>{d.Ea("SkipLayerNormalization",p,{epsilon:b})},917395:p=>{d.zb(p)},917429:(p,b)=>d.Ab(p,b,d.bb.Fb,d.bb.errors),917541:p=>d.wb(p),917574:p=>d.yb(p),917606:(p,b,S)=>{d.jb(p,b,S,!0)},917645:(p,b,S)=>{d.jb(p,b,S)}};function Kt(p){this.name="ExitStatus",this.message=`Program terminated with exit(${p})`,this.status=p}function ut(p){p.terminate(),p.onmessage=()=>{}}function fr(p){(p=be.Qa[p])||tt(),be.Eb(p)}function pr(p){var b=be.tb();if(!b)return 6;be.Ya.push(b),be.Qa[p.Xa]=b,b.Xa=p.Xa;var S={cmd:"run",start_routine:p.Gb,arg:p.rb,pthread_ptr:p.Xa};return O&&b.unref(),b.postMessage(S,p.Mb),0}var gn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,_t=(p,b,S)=>{b>>>=0;var M=b+S;for(S=b;p[S]&&!(S>=M);)++S;if(16<S-b&&p.buffer&&gn)return gn.decode(p.buffer instanceof SharedArrayBuffer?p.slice(b,S):p.subarray(b,S));for(M="";b<S;){var H=p[b++];if(H&128){var Z=p[b++]&63;if((H&224)==192)M+=String.fromCharCode((H&31)<<6|Z);else{var ee=p[b++]&63;H=(H&240)==224?(H&15)<<12|Z<<6|ee:(H&7)<<18|Z<<12|ee<<6|p[b++]&63,65536>H?M+=String.fromCharCode(H):(H-=65536,M+=String.fromCharCode(55296|H>>10,56320|H&1023))}}else M+=String.fromCharCode(H)}return M},Tt=(p,b)=>(p>>>=0)?_t(u(),p,b):"";function yt(p){if(R)return Le(1,1,p);Ae=p,It()||(be.Hb(),d.onExit&&d.onExit(p),Me=!0),T(p,new Kt(p))}var mr=p=>{if(Ae=p,R)throw hr(p),"unwind";yt(p)},be={ab:[],Ya:[],mb:[],Qa:{},gb:function(){R?be.vb():be.ub()},ub:function(){Ie.unshift(()=>{At(),be.Bb(()=>Vt())})},vb:function(){be.receiveObjectTransfer=be.Db,be.threadInitTLS=be.lb,be.setExitStatus=be.kb,Ne=!1},kb:function(p){Ae=p},Sb:["$terminateWorker"],Hb:function(){for(var p of be.Ya)ut(p);for(p of be.ab)ut(p);be.ab=[],be.Ya=[],be.Qa=[]},Eb:function(p){var b=p.Xa;delete be.Qa[b],be.ab.push(p),be.Ya.splice(be.Ya.indexOf(p),1),p.Xa=0,$r(b)},Db:function(){},lb:function(){be.mb.forEach(p=>p())},Cb:p=>new Promise(b=>{p.onmessage=Z=>{Z=Z.data;var ee=Z.cmd;if(Z.targetThread&&Z.targetThread!=tr()){var pe=be.Qa[Z.Rb];pe?pe.postMessage(Z,Z.transferList):ue(\'Internal error! Worker sent a message "\'+ee+\'" to target pthread \'+Z.targetThread+", but that thread no longer exists!")}else ee==="checkMailbox"?Nt():ee==="spawnThread"?pr(Z):ee==="cleanupThread"?fr(Z.thread):ee==="killThread"?(Z=Z.thread,ee=be.Qa[Z],delete be.Qa[Z],ut(ee),$r(Z),be.Ya.splice(be.Ya.indexOf(ee),1),ee.Xa=0):ee==="cancelThread"?be.Qa[Z.thread].postMessage({cmd:"cancel"}):ee==="loaded"?(p.loaded=!0,b(p)):ee==="alert"?alert("Thread "+Z.threadId+": "+Z.text):Z.target==="setimmediate"?p.postMessage(Z):ee==="callHandler"?d[Z.handler](...Z.args):ee&&ue("worker sent an unknown command "+ee)},p.onerror=Z=>{throw ue("worker sent an error! "+Z.filename+":"+Z.lineno+": "+Z.message),Z},O&&(p.on("message",function(Z){p.onmessage({data:Z})}),p.on("error",function(Z){p.onerror(Z)}));var S=[],M=["onExit","onAbort","print","printErr"],H;for(H of M)d.hasOwnProperty(H)&&S.push(H);p.postMessage({cmd:"load",handlers:S,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:_e,wasmModule:ye})}),Bb:function(p){p()},qb:function(){var p=k("ort-wasm-simd-threaded.worker.js");p=new Worker(p),be.ab.push(p)},tb:function(){return be.ab.length==0&&(be.qb(),be.Cb(be.ab[0])),be.ab.pop()}};d.PThread=be;var rt=p=>{for(;0<p.length;)p.shift()(d)};d.establishStackSpace=function(){var p=tr(),b=s()[p+52>>2>>>0];p=s()[p+56>>2>>>0],Xr(b,b-p),rr(b)};function hr(p){if(R)return Le(2,0,p);mr(p)}d.invokeEntryPoint=function(p,b){p=Jr.apply(null,[p,b]),It()?be.kb(p):Cr(p)};function it(p){this.fb=p-24,this.pb=function(b){f()[this.fb+4>>2>>>0]=b},this.ob=function(b){f()[this.fb+8>>2>>>0]=b},this.gb=function(b,S){this.nb(),this.pb(b),this.ob(S)},this.nb=function(){f()[this.fb+16>>2>>>0]=0}}var dt=0,yn=0;function bn(p,b,S,M){return R?Le(3,1,p,b,S,M):vn(p,b,S,M)}function vn(p,b,S,M){if(p>>>=0,b>>>=0,S>>>=0,M>>>=0,typeof SharedArrayBuffer>"u")return ue("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var H=[];return R&&H.length===0?bn(p,b,S,M):(p={Gb:S,Xa:p,rb:M,Mb:H},R?(p.Ob="spawnThread",postMessage(p,H),0):pr(p))}function Or(p,b,S){return R?Le(4,1,p,b,S):0}function wn(p,b){if(R)return Le(5,1,p,b)}var kr=p=>{for(var b=0,S=0;S<p.length;++S){var M=p.charCodeAt(S);127>=M?b++:2047>=M?b+=2:55296<=M&&57343>=M?(b+=4,++S):b+=3}return b},_n=(p,b,S,M)=>{if(S>>>=0,!(0<M))return 0;var H=S;M=S+M-1;for(var Z=0;Z<p.length;++Z){var ee=p.charCodeAt(Z);if(55296<=ee&&57343>=ee){var pe=p.charCodeAt(++Z);ee=65536+((ee&1023)<<10)|pe&1023}if(127>=ee){if(S>=M)break;b[S++>>>0]=ee}else{if(2047>=ee){if(S+1>=M)break;b[S++>>>0]=192|ee>>6}else{if(65535>=ee){if(S+2>=M)break;b[S++>>>0]=224|ee>>12}else{if(S+3>=M)break;b[S++>>>0]=240|ee>>18,b[S++>>>0]=128|ee>>12&63}b[S++>>>0]=128|ee>>6&63}b[S++>>>0]=128|ee&63}}return b[S>>>0]=0,S-H},$n=(p,b,S)=>_n(p,u(),b,S);function Cn(p,b){if(R)return Le(6,1,p,b)}function Sn(p,b,S){if(R)return Le(7,1,p,b,S)}function gr(p,b,S){return R?Le(8,1,p,b,S):0}function Rr(p,b){if(R)return Le(9,1,p,b)}function Yt(p,b,S){if(R)return Le(10,1,p,b,S)}function xn(p,b,S,M){if(R)return Le(11,1,p,b,S,M)}function $t(p,b,S,M){if(R)return Le(12,1,p,b,S,M)}function mt(p,b,S,M){if(R)return Le(13,1,p,b,S,M)}function Dr(p){if(R)return Le(14,1,p)}function Zt(p,b){if(R)return Le(15,1,p,b)}function Br(p,b,S){if(R)return Le(16,1,p,b,S)}var Mr=p=>{if(!Me)try{if(p(),!It())try{R?Cr(Ae):mr(Ae)}catch(b){b instanceof Kt||b=="unwind"||T(1,b)}}catch(b){b instanceof Kt||b=="unwind"||T(1,b)}};function zr(p){p>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(s(),p>>2,p).value.then(Nt),p+=128,Atomics.store(s(),p>>2,1))}d.__emscripten_thread_mailbox_await=zr;function Nt(){var p=tr();p&&(zr(p),Mr(()=>Zr()))}d.checkMailbox=Nt;var Wt=p=>p%4===0&&(p%100!==0||p%400===0),In=[0,31,60,91,121,152,182,213,244,274,305,335],An=[0,31,59,90,120,151,181,212,243,273,304,334];function Tn(p,b,S,M,H,Z,ee,pe){return R?Le(17,1,p,b,S,M,H,Z,ee,pe):-52}function Ur(p,b,S,M,H,Z,ee){if(R)return Le(18,1,p,b,S,M,H,Z,ee)}var Qt=p=>{var b=kr(p)+1,S=_r(b);return S&&$n(p,S,b),S},jr=[],yr=(p,b)=>{jr.length=0;var S;for(b>>=2;S=u()[p++>>>0];)b+=S!=105&b,jr.push(S==105?s()[b>>>0]:m()[b++>>>1]),++b;return jr},En=p=>{var b=Sr();return p=p(),rr(b),p};function Le(p,b){var S=arguments.length-2,M=arguments;return En(()=>{for(var H=xr(8*S),Z=H>>3,ee=0;ee<S;ee++){var pe=M[2+ee];m()[Z+ee>>>0]=pe}return Yr(p,S,H,b)})}var Vr=[],br={},Pn=()=>{if(!Et){var p={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:$||"./this.program"},b;for(b in br)br[b]===void 0?delete p[b]:p[b]=br[b];var S=[];for(b in p)S.push(`${b}=${p[b]}`);Et=S}return Et},Et;function Nr(p,b){if(R)return Le(19,1,p,b);p>>>=0,b>>>=0;var S=0;return Pn().forEach(function(M,H){var Z=b+S;for(H=f()[p+4*H>>2>>>0]=Z,Z=0;Z<M.length;++Z)t()[H++>>0>>>0]=M.charCodeAt(Z);t()[H>>0>>>0]=0,S+=M.length+1}),0}function Wr(p,b){if(R)return Le(20,1,p,b);p>>>=0,b>>>=0;var S=Pn();f()[p>>2>>>0]=S.length;var M=0;return S.forEach(function(H){M+=H.length+1}),f()[b>>2>>>0]=M,0}function Gr(p){return R?Le(21,1,p):52}function vr(p,b,S,M){return R?Le(22,1,p,b,S,M):52}function Hr(p,b,S,M,H){return R?Le(23,1,p,b,S,M,H):70}var Lr=[null,[],[]];function Fr(p,b,S,M){if(R)return Le(24,1,p,b,S,M);b>>>=0,S>>>=0,M>>>=0;for(var H=0,Z=0;Z<S;Z++){var ee=f()[b>>2>>>0],pe=f()[b+4>>2>>>0];b+=8;for(var ce=0;ce<pe;ce++){var de=u()[ee+ce>>>0],me=Lr[p];de===0||de===10?((p===1?L:ue)(_t(me,0)),me.length=0):me.push(de)}H+=pe}return f()[M>>2>>>0]=H,0}var wr=[31,29,31,30,31,30,31,31,30,31,30,31],On=[31,28,31,30,31,30,31,31,30,31,30,31];function kn(p){var b=Array(kr(p)+1);return _n(p,b,0,b.length),b}var Rn=(p,b)=>{t().set(p,b>>>0)};function Dn(p,b,S,M){function H(F,we,ze){for(F=typeof F=="number"?F.toString():F||"";F.length<we;)F=ze[0]+F;return F}function Z(F,we){return H(F,we,"0")}function ee(F,we){function ze(an){return 0>an?-1:0<an?1:0}var Pt;return(Pt=ze(F.getFullYear()-we.getFullYear()))===0&&(Pt=ze(F.getMonth()-we.getMonth()))===0&&(Pt=ze(F.getDate()-we.getDate())),Pt}function pe(F){switch(F.getDay()){case 0:return new Date(F.getFullYear()-1,11,29);case 1:return F;case 2:return new Date(F.getFullYear(),0,3);case 3:return new Date(F.getFullYear(),0,2);case 4:return new Date(F.getFullYear(),0,1);case 5:return new Date(F.getFullYear()-1,11,31);case 6:return new Date(F.getFullYear()-1,11,30)}}function ce(F){var we=F.Za;for(F=new Date(new Date(F.$a+1900,0,1).getTime());0<we;){var ze=F.getMonth(),Pt=(Wt(F.getFullYear())?wr:On)[ze];if(we>Pt-F.getDate())we-=Pt-F.getDate()+1,F.setDate(1),11>ze?F.setMonth(ze+1):(F.setMonth(0),F.setFullYear(F.getFullYear()+1));else{F.setDate(F.getDate()+we);break}}return ze=new Date(F.getFullYear()+1,0,4),we=pe(new Date(F.getFullYear(),0,4)),ze=pe(ze),0>=ee(we,F)?0>=ee(ze,F)?F.getFullYear()+1:F.getFullYear():F.getFullYear()-1}p>>>=0,b>>>=0,S>>>=0,M>>>=0;var de=s()[M+40>>2>>>0];M={Kb:s()[M>>2>>>0],Jb:s()[M+4>>2>>>0],cb:s()[M+8>>2>>>0],ib:s()[M+12>>2>>>0],eb:s()[M+16>>2>>>0],$a:s()[M+20>>2>>>0],Wa:s()[M+24>>2>>>0],Za:s()[M+28>>2>>>0],Tb:s()[M+32>>2>>>0],Ib:s()[M+36>>2>>>0],Lb:de?Tt(de):""},S=Tt(S),de={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var me in de)S=S.replace(new RegExp(me,"g"),de[me]);var ke="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Be="January February March April May June July August September October November December".split(" ");de={"%a":F=>ke[F.Wa].substring(0,3),"%A":F=>ke[F.Wa],"%b":F=>Be[F.eb].substring(0,3),"%B":F=>Be[F.eb],"%C":F=>Z((F.$a+1900)/100|0,2),"%d":F=>Z(F.ib,2),"%e":F=>H(F.ib,2," "),"%g":F=>ce(F).toString().substring(2),"%G":F=>ce(F),"%H":F=>Z(F.cb,2),"%I":F=>(F=F.cb,F==0?F=12:12<F&&(F-=12),Z(F,2)),"%j":F=>{for(var we=0,ze=0;ze<=F.eb-1;we+=(Wt(F.$a+1900)?wr:On)[ze++]);return Z(F.ib+we,3)},"%m":F=>Z(F.eb+1,2),"%M":F=>Z(F.Jb,2),"%n":()=>`\n`,"%p":F=>0<=F.cb&&12>F.cb?"AM":"PM","%S":F=>Z(F.Kb,2),"%t":()=>"\t","%u":F=>F.Wa||7,"%U":F=>Z(Math.floor((F.Za+7-F.Wa)/7),2),"%V":F=>{var we=Math.floor((F.Za+7-(F.Wa+6)%7)/7);if(2>=(F.Wa+371-F.Za-2)%7&&we++,we)we==53&&(ze=(F.Wa+371-F.Za)%7,ze==4||ze==3&&Wt(F.$a)||(we=1));else{we=52;var ze=(F.Wa+7-F.Za-1)%7;(ze==4||ze==5&&Wt(F.$a%400-1))&&we++}return Z(we,2)},"%w":F=>F.Wa,"%W":F=>Z(Math.floor((F.Za+7-(F.Wa+6)%7)/7),2),"%y":F=>(F.$a+1900).toString().substring(2),"%Y":F=>F.$a+1900,"%z":F=>{F=F.Ib;var we=0<=F;return F=Math.abs(F)/60,(we?"+":"-")+("0000"+(F/60*100+F%60)).slice(-4)},"%Z":F=>F.Lb,"%%":()=>"%"},S=S.replace(/%%/g,"\\0\\0");for(me in de)S.includes(me)&&(S=S.replace(new RegExp(me,"g"),de[me](M)));return S=S.replace(/\\0\\0/g,"%"),me=kn(S),me.length>b?0:(Rn(me,p),me.length-1)}function Xt(p){try{p()}catch(b){tt(b)}}function Bn(p){var b={},S;for(S in p)(function(M){var H=p[M];b[M]=typeof H=="function"?function(){Jt.push(M);try{return H.apply(null,arguments)}finally{Me||(Jt.pop()===M||tt(),bt&&ht===1&&Jt.length===0&&(ht=0,lt+=1,Xt(tn),typeof Fibers<"u"&&Fibers.Ub()))}}:H})(S);return b}var ht=0,bt=null,z=0,Jt=[],Gt={},gt={},Mn=0,j=null,er=[];function N(){return new Promise((p,b)=>{j={resolve:p,reject:b}})}function W(){var p=_r(65548),b=p+12;f()[p>>2>>>0]=b,f()[p+4>>2>>>0]=b+65536,b=Jt[0];var S=Gt[b];return S===void 0&&(S=Mn++,Gt[b]=S,gt[S]=b),b=S,s()[p+8>>2>>>0]=b,p}function zn(){var p=s()[bt+8>>2>>>0];return p=ae[gt[p]],--lt,p()}function Un(p){if(!Me){if(ht===0){var b=!1,S=!1;p((M=0)=>{if(!Me&&(z=M,b=!0,S)){ht=2,Xt(()=>rn(bt)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),M=!1;try{var H=zn()}catch(pe){H=pe,M=!0}var Z=!1;if(!bt){var ee=j;ee&&(j=null,(M?ee.reject:ee.resolve)(H),Z=!0)}if(M&&!Z)throw H}}),S=!0,b||(ht=1,bt=W(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Xt(()=>en(bt)))}else ht===2?(ht=0,Xt(nn),qr(bt),bt=null,er.forEach(M=>Mr(M))):tt(`invalid state: ${ht}`);return z}}function jn(p){return Un(b=>{p().then(b)})}be.gb();var Vn=[null,yt,hr,bn,Or,wn,Cn,Sn,gr,Rr,Yt,xn,$t,mt,Dr,Zt,Br,Tn,Ur,Nr,Wr,Gr,vr,Hr,Fr],Nn={r:function(p,b,S){return jn(async()=>{await d.xb(p,b,S)})},b:function(p,b,S){throw p>>>=0,new it(p).gb(b>>>0,S>>>0),dt=p,yn++,dt},O:function(p){Kr(p>>>0,!A,1,!P,131072,!1),be.lb()},l:function(p){p>>>=0,R?postMessage({cmd:"cleanupThread",thread:p}):fr(p)},I:vn,i:Or,U:wn,E:Cn,G:Sn,V:gr,S:Rr,K:Yt,R:xn,p:$t,F:mt,C:Dr,T:Zt,D:Br,q:()=>!0,A:function(p,b){p>>>=0,p==b>>>0?setTimeout(()=>Nt()):R?postMessage({targetThread:p,cmd:"checkMailbox"}):(p=be.Qa[p])&&p.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:zr,X:function(p){O&&be.Qa[p>>>0].ref()},u:function(p,b,S){p=b+2097152>>>0<4194305-!!p?(p>>>0)+4294967296*b:NaN,S>>>=0,p=new Date(1e3*p),s()[S>>2>>>0]=p.getUTCSeconds(),s()[S+4>>2>>>0]=p.getUTCMinutes(),s()[S+8>>2>>>0]=p.getUTCHours(),s()[S+12>>2>>>0]=p.getUTCDate(),s()[S+16>>2>>>0]=p.getUTCMonth(),s()[S+20>>2>>>0]=p.getUTCFullYear()-1900,s()[S+24>>2>>>0]=p.getUTCDay(),p=(p.getTime()-Date.UTC(p.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[S+28>>2>>>0]=p},v:function(p,b,S){p=b+2097152>>>0<4194305-!!p?(p>>>0)+4294967296*b:NaN,S>>>=0,p=new Date(1e3*p),s()[S>>2>>>0]=p.getSeconds(),s()[S+4>>2>>>0]=p.getMinutes(),s()[S+8>>2>>>0]=p.getHours(),s()[S+12>>2>>>0]=p.getDate(),s()[S+16>>2>>>0]=p.getMonth(),s()[S+20>>2>>>0]=p.getFullYear()-1900,s()[S+24>>2>>>0]=p.getDay(),b=(Wt(p.getFullYear())?In:An)[p.getMonth()]+p.getDate()-1|0,s()[S+28>>2>>>0]=b,s()[S+36>>2>>>0]=-(60*p.getTimezoneOffset()),b=new Date(p.getFullYear(),6,1).getTimezoneOffset();var M=new Date(p.getFullYear(),0,1).getTimezoneOffset();p=(b!=M&&p.getTimezoneOffset()==Math.min(M,b))|0,s()[S+32>>2>>>0]=p},w:function(p){p>>>=0;var b=new Date(s()[p+20>>2>>>0]+1900,s()[p+16>>2>>>0],s()[p+12>>2>>>0],s()[p+8>>2>>>0],s()[p+4>>2>>>0],s()[p>>2>>>0],0),S=s()[p+32>>2>>>0],M=b.getTimezoneOffset(),H=new Date(b.getFullYear(),6,1).getTimezoneOffset(),Z=new Date(b.getFullYear(),0,1).getTimezoneOffset(),ee=Math.min(Z,H);return 0>S?s()[p+32>>2>>>0]=+(H!=Z&&ee==M):0<S!=(ee==M)&&(H=Math.max(Z,H),b.setTime(b.getTime()+6e4*((0<S?ee:H)-M))),s()[p+24>>2>>>0]=b.getDay(),S=(Wt(b.getFullYear())?In:An)[b.getMonth()]+b.getDate()-1|0,s()[p+28>>2>>>0]=S,s()[p>>2>>>0]=b.getSeconds(),s()[p+4>>2>>>0]=b.getMinutes(),s()[p+8>>2>>>0]=b.getHours(),s()[p+12>>2>>>0]=b.getDate(),s()[p+16>>2>>>0]=b.getMonth(),s()[p+20>>2>>>0]=b.getYear(),p=b.getTime()/1e3,Qr((wt=p,1<=+Math.abs(wt)?0<wt?+Math.floor(wt/4294967296)>>>0:~~+Math.ceil((wt-+(~~wt>>>0))/4294967296)>>>0:0)),p>>>0},s:Tn,t:Ur,z:function(p,b,S){function M(de){return(de=de.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?de[1]:"GMT"}p>>>=0,b>>>=0,S>>>=0;var H=new Date().getFullYear(),Z=new Date(H,0,1),ee=new Date(H,6,1);H=Z.getTimezoneOffset();var pe=ee.getTimezoneOffset(),ce=Math.max(H,pe);f()[p>>2>>>0]=60*ce,s()[b>>2>>>0]=+(H!=pe),p=M(Z),b=M(ee),p=Qt(p),b=Qt(b),pe<H?(f()[S>>2>>>0]=p,f()[S+4>>2>>>0]=b):(f()[S>>2>>>0]=b,f()[S+4>>2>>>0]=p)},d:()=>{tt("")},c:function(p,b,S){return p>>>=0,b=yr(b>>>0,S>>>0),cr[p].apply(null,b)},k:function(p,b,S){return p>>>=0,b=yr(b>>>0,S>>>0),cr[p].apply(null,b)},m:function(){},j:function(){return Date.now()},W:()=>{throw lt+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return O?(Ls(),ir(Hs)).cpus().length:navigator.hardwareConcurrency},L:function(p,b,S,M){for(be.Pb=b>>>0,Vr.length=S,b=M>>>0>>3,M=0;M<S;M++)Vr[M]=m()[b+M>>>0];return(0>p?cr[-p-1]:Vn[p]).apply(null,Vr)},y:function(p){p>>>=0;var b=u().length;if(p<=b||4294901760<p)return!1;for(var S=1;4>=S;S*=2){var M=b*(1+.2/S);M=Math.min(M,p+100663296);var H=Math;M=Math.max(p,M);e:{H=H.min.call(H,4294901760,M+(65536-M%65536)%65536)-_e.buffer.byteLength+65535>>>16;try{_e.grow(H),te();var Z=1;break e}catch{}Z=void 0}if(Z)return!0}return!1},P:Nr,Q:Wr,H:mr,h:Gr,o:vr,x:Hr,n:Fr,a:_e||d.wasmMemory,J:Dn,e:function(p,b,S,M){return Dn(p>>>0,b>>>0,S>>>0,M>>>0)}};(function(){function p(S,M){return S=S.exports,S=Bn(S),ae=S=Wn(S),be.mb.push(ae.Da),st.unshift(ae.Y),ye=M,Vt(),S}var b={a:Nn};if(At(),d.instantiateWasm)try{return d.instantiateWasm(b,p)}catch(S){ue("Module.instantiateWasm callback failed with error: "+S),w(S)}return dr(b,function(S){p(S.instance,S.module)}).catch(w),{}})(),d._OrtInit=(p,b)=>(d._OrtInit=ae.Z)(p,b),d._OrtGetLastError=(p,b)=>(d._OrtGetLastError=ae._)(p,b),d._OrtCreateSessionOptions=(p,b,S,M,H,Z,ee,pe,ce,de)=>(d._OrtCreateSessionOptions=ae.$)(p,b,S,M,H,Z,ee,pe,ce,de),d._OrtAppendExecutionProvider=(p,b)=>(d._OrtAppendExecutionProvider=ae.aa)(p,b),d._OrtAddFreeDimensionOverride=(p,b,S)=>(d._OrtAddFreeDimensionOverride=ae.ba)(p,b,S),d._OrtAddSessionConfigEntry=(p,b,S)=>(d._OrtAddSessionConfigEntry=ae.ca)(p,b,S),d._OrtReleaseSessionOptions=p=>(d._OrtReleaseSessionOptions=ae.da)(p),d._OrtCreateSession=(p,b,S)=>(d._OrtCreateSession=ae.ea)(p,b,S),d._OrtReleaseSession=p=>(d._OrtReleaseSession=ae.fa)(p),d._OrtGetInputOutputCount=(p,b,S)=>(d._OrtGetInputOutputCount=ae.ga)(p,b,S),d._OrtGetInputName=(p,b)=>(d._OrtGetInputName=ae.ha)(p,b),d._OrtGetOutputName=(p,b)=>(d._OrtGetOutputName=ae.ia)(p,b),d._OrtFree=p=>(d._OrtFree=ae.ja)(p),d._OrtCreateTensor=(p,b,S,M,H,Z)=>(d._OrtCreateTensor=ae.ka)(p,b,S,M,H,Z),d._OrtGetTensorData=(p,b,S,M,H)=>(d._OrtGetTensorData=ae.la)(p,b,S,M,H),d._OrtReleaseTensor=p=>(d._OrtReleaseTensor=ae.ma)(p),d._OrtCreateRunOptions=(p,b,S,M)=>(d._OrtCreateRunOptions=ae.na)(p,b,S,M),d._OrtAddRunConfigEntry=(p,b,S)=>(d._OrtAddRunConfigEntry=ae.oa)(p,b,S),d._OrtReleaseRunOptions=p=>(d._OrtReleaseRunOptions=ae.pa)(p),d._OrtCreateBinding=p=>(d._OrtCreateBinding=ae.qa)(p),d._OrtBindInput=(p,b,S)=>(d._OrtBindInput=ae.ra)(p,b,S),d._OrtBindOutput=(p,b,S,M)=>(d._OrtBindOutput=ae.sa)(p,b,S,M),d._OrtClearBoundOutputs=p=>(d._OrtClearBoundOutputs=ae.ta)(p),d._OrtReleaseBinding=p=>(d._OrtReleaseBinding=ae.ua)(p),d._OrtRunWithBinding=(p,b,S,M,H)=>(d._OrtRunWithBinding=ae.va)(p,b,S,M,H),d._OrtRun=(p,b,S,M,H,Z,ee,pe)=>(d._OrtRun=ae.wa)(p,b,S,M,H,Z,ee,pe),d._OrtEndProfiling=p=>(d._OrtEndProfiling=ae.xa)(p),d._JsepOutput=(p,b,S)=>(d._JsepOutput=ae.ya)(p,b,S),d._JsepGetNodeName=p=>(d._JsepGetNodeName=ae.za)(p);var tr=d._pthread_self=()=>(tr=d._pthread_self=ae.Aa)(),_r=d._malloc=p=>(_r=d._malloc=ae.Ba)(p),qr=d._free=p=>(qr=d._free=ae.Ca)(p);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=ae.Da)();var Kr=d.__emscripten_thread_init=(p,b,S,M,H,Z)=>(Kr=d.__emscripten_thread_init=ae.Fa)(p,b,S,M,H,Z);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=ae.Ga)();var Yr=(p,b,S,M)=>(Yr=ae.Ha)(p,b,S,M),$r=p=>($r=ae.Ia)(p),Cr=d.__emscripten_thread_exit=p=>(Cr=d.__emscripten_thread_exit=ae.Ja)(p),Zr=d.__emscripten_check_mailbox=()=>(Zr=d.__emscripten_check_mailbox=ae.Ka)(),Qr=p=>(Qr=ae.La)(p),Xr=(p,b)=>(Xr=ae.Ma)(p,b),Sr=()=>(Sr=ae.Na)(),rr=p=>(rr=ae.Oa)(p),xr=p=>(xr=ae.Pa)(p),Jr=d.dynCall_ii=(p,b)=>(Jr=d.dynCall_ii=ae.Ra)(p,b),en=p=>(en=ae.Sa)(p),tn=()=>(tn=ae.Ta)(),rn=p=>(rn=ae.Ua)(p),nn=()=>(nn=ae.Va)();d.___start_em_js=917678,d.___stop_em_js=917839;function Wn(p){p=Object.assign({},p);var b=M=>()=>M()>>>0,S=M=>H=>M(H)>>>0;return p.__errno_location=b(p.__errno_location),p.pthread_self=b(p.pthread_self),p.malloc=S(p.malloc),p.stackSave=b(p.stackSave),p.stackAlloc=S(p.stackAlloc),p}d.keepRuntimeAlive=It,d.wasmMemory=_e,d.stackAlloc=xr,d.stackSave=Sr,d.stackRestore=rr,d.UTF8ToString=Tt,d.stringToUTF8=$n,d.lengthBytesUTF8=kr,d.ExitStatus=Kt,d.PThread=be;var nr;pt=function p(){nr||on(),nr||(pt=p)};function on(){function p(){if(!nr&&(nr=!0,d.calledRun=!0,!Me)&&(R||rt(st),y(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),!R)){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();et.unshift(b)}rt(et)}}if(!(0<Fe))if(R)y(d),R||rt(st),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Ie.unshift(d.preRun.shift());rt(Ie),0<Fe||(d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),p()},1)):p())}}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();return on(),r.ready}})();typeof qs=="object"&&typeof Ei=="object"?Ei.exports=Fs:typeof define=="function"&&define.amd&&define([],()=>Fs)});var Ys=sn((y0,vh)=>{vh.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var ki,Ht,ln,Kn,dn,tu,Ri,Ce=oe(()=>{"use strict";ki=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Ht=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},ln=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Kn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},dn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},tu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",Ri=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Yn=oe(()=>{"use strict"});var nu=oe(()=>{"use strict";Yn()});var iu,ou=oe(()=>{"use strict";iu="1.18.0"});var au,or,Di=oe(()=>{"use strict";ou();au="warning",or={wasm:{},webgl:{},webgpu:{},versions:{common:iu},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);au=e}},get logLevel(){return au}};Object.defineProperty(or,"logLevel",{enumerable:!0})});var Ir,su=oe(()=>{"use strict";Di();Ir=or});var uu=oe(()=>{"use strict"});var lu=oe(()=>{"use strict";Zn()});var cu=oe(()=>{"use strict"});var fu=oe(()=>{"use strict";Zn()});var Zn=oe(()=>{"use strict";uu();lu();cu();fu()});var Qn=oe(()=>{"use strict";Zn()});var Bi,pu,ar,Lt,Mi=oe(()=>{"use strict";Di();Bi=(e,r)=>{or.wasm.trace&&console.timeStamp(`${e}::ORT::${r}`)},pu=(e,r)=>{let t=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],u=!1;for(let s=0;s<t.length;s++){if(u&&!t[s].includes("TRACE_FUNC")){let f=`FUNC_${e}::${t[s].trim().split(" ")[1]}`;r&&(f+=`::${r}`),Bi("CPU",f);return}t[s].includes("TRACE_FUNC")&&(u=!0)}},ar=e=>{or.wasm.trace&&pu("BEGIN",e)},Lt=e=>{or.wasm.trace&&pu("END",e)}});var mu=oe(()=>{"use strict";Yn();Qn();Mi()});var hu=oe(()=>{"use strict";mu()});var gu=oe(()=>{"use strict"});var yu=oe(()=>{"use strict";Yn();Qn()});var bu=oe(()=>{"use strict";yu()});var Ar=oe(()=>{"use strict";nu();su();hu();Qn();Mi();gu();bu()});var Ph,Oh,vu,wu,_u,kh,He,Ft=oe(()=>{"use strict";Ce();Ph=["V","I","W","E","F"],Oh=(e,r)=>{console.log(`[${Ph[e]},${new Date().toISOString()}]${r}`)},_u=(e,r)=>{vu=e,wu=r},kh=(e,r)=>{let t=dn(e),u=dn(vu);t>=u&&Oh(t,typeof r=="function"?r():r)},He=(...e)=>{wu&&kh(...e)}});var $u,Cu=oe(()=>{"use strict";Ce();$u=(e,r)=>new(Kn(r))(e)});var Xn=oe(()=>{"use strict"});var Jn,Rh,Su,Ui,zi,Iu,Au=oe(()=>{"use strict";Ft();Xn();Jn=e=>Math.ceil(e/16)*16,Rh=1,Su=()=>Rh++,Ui=async(e,r,t,u)=>{let s=Jn(t),f=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let m=e.getCommandEncoder();e.endComputePass(),m.copyBufferToBuffer(r,0,f,0,s),e.flush(),await f.mapAsync(GPUMapMode.READ);let d=f.getMappedRange();if(u){let y=u();return y.set(new Uint8Array(d,0,t)),y}else return new Uint8Array(d.slice(0,t))}finally{f.destroy()}},zi=class{constructor(r){this.backend=r;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(r,t){let u=t.buffer,s=t.byteOffset,f=t.byteLength,m=Jn(f),d=this.storageCache.get(r);if(!d)throw new Error("gpu data for uploading does not exist");if(d.originalSize!==f)throw new Error(`inconsistent data size. gpu data size=${d.originalSize}, data size=${f}`);let y=this.backend.device.createBuffer({mappedAtCreation:!0,size:m,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),w=y.getMappedRange();new Uint8Array(w).set(new Uint8Array(u,s,f)),y.unmap();let C=this.backend.getCommandEncoder();this.backend.endComputePass(),C.copyBufferToBuffer(y,0,d.gpuData.buffer,0,m),He("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${r})`),this.buffersForUploadingPending.push(y)}memcpy(r,t){let u=this.storageCache.get(r);if(!u)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(t);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(u.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let f=Jn(u.originalSize),m=this.backend.getCommandEncoder();this.backend.endComputePass(),m.copyBufferToBuffer(u.gpuData.buffer,0,s.gpuData.buffer,0,f)}registerExternalBuffer(r,t,u){let s;if(u){if(s=this.externalBuffers.get(u),s===void 0)throw new Error("previous buffer is not registered");if(r===u)return He("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(u)}else s=Su();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:r},originalSize:t}),this.externalBuffers.set(r,s),He("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, registered.`),s}unregisterExternalBuffer(r){let t=this.externalBuffers.get(r);t!==void 0&&(this.storageCache.delete(t),this.externalBuffers.delete(r),He("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(r,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let u=Jn(r),s,f=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,m=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(f||m){let y=f?this.freeBuffers:this.freeUniformBuffers,w=y.get(u);w||(w=[],y.set(u,w)),w.length>0?s=w.pop():s=this.backend.device.createBuffer({size:u,usage:t})}else s=this.backend.device.createBuffer({size:u,usage:t});let d={id:Su(),type:0,buffer:s};return this.storageCache.set(d.id,{gpuData:d,originalSize:r}),He("verbose",()=>`[WebGPU] GpuDataManager.create(size=${r}) => id=${d.id}`),d}get(r){return this.storageCache.get(r)?.gpuData}release(r){let t=this.storageCache.get(r);if(!t)throw new Error("releasing data does not exist");return He("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(r,t){let u=this.storageCache.get(r);if(!u)throw new Error("data does not exist");await Ui(this.backend,u.gpuData.buffer,u.originalSize,t)}refreshPendingBuffers(){for(let r of this.buffersForUploadingPending)r.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let r of this.buffersPending)(r.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(r.size).push(r):(r.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(r.size).push(r):r.destroy();this.buffersPending=[]}else{let r=this.capturedPendingBuffers.get(this.backend.currentSessionId);r||(r=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,r));for(let t of this.buffersPending)r.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(r){let t=this.capturedPendingBuffers.get(r);t&&(t.forEach(u=>{u.destroy()}),this.capturedPendingBuffers.delete(r))}},Iu=(...e)=>new zi(...e)});var ji,Pe,nt=oe(()=>{"use strict";ji=class{constructor(r){Object.assign(this,r)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(r=>`${this[r]}`).join(";")),this.key}},Pe=e=>new ji(e)});var Vi,Ot,X,sr,ei,ti,ri,Oe=oe(()=>{"use strict";Vi=class{static calcMatMulShape(r,t){return r[1]!==t[0]?void 0:[r[0],t[1]]}},Ot=class{static calcShape(r,t,u=!1){let s=r.length,f=t.length;if(s===0)return t;if(f===0)return r;let m=Math.max(r.length,t.length),d=new Array(m);if(u){if(s<2||f<2)return;let y=Vi.calcMatMulShape([r[s-2],r[s-1]],[t[f-2],t[f-1]]);if(y===void 0)return;[d[m-2],d[m-1]]=y}for(let y=u?3:1;y<=m;y++){let w=s-y<0?1:r[s-y],C=f-y<0?1:t[f-y];if(w!==C&&w>1&&C>1)return;let $=Math.max(w,C);if(w&&C)d[m-y]=Math.max(w,C);else{if($>1)return;d[m-y]=0}}return d}static isValidBroadcast(r,t){let u=r.length,s=t.length;if(u>s)return!1;for(let f=1;f<=u;f++)if(r[u-f]!==1&&r[u-f]!==t[s-f])return!1;return!0}},X=class e{static size(r){return e.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let u=r.length;if(u===0)return[];let s=new Array(u),f=u-1;for(;f>=0;){if(r[f]%t===0){s[f]=r[f]/t;break}if(t%r[f]!==0)throw new Error("cannot convert shape");s[f]=1,t/=r[f],f--}for(f--;f>=0;f--)s[f]=r[f];return s}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,u){let s=1;for(let f=t;f<u;f++){if(r[f]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");s*=r[f]}return s}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let u=new Array(t);u[t-1]=1,u[t-2]=r[t-1];for(let s=t-3;s>=0;--s)u[s]=u[s+1]*r[s+1];return u}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(u=>this.normalizeAxis(u,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(u=>r[u]):r.slice().reverse()}static padShape(r,t){let u=r.length;return r.map((s,f)=>s+t[f]+t[f+u])}static areEqual(r,t){return r.length!==t.length?!1:r.every((u,s)=>u===t[s])}},sr=class e{static adjustPoolAttributes(r,t,u,s,f,m){if(!r&&u.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let d=0;d<t.length-2;d++)d>=u.length?u.push(t[d+2]):u[d]=t[d+2];for(let d=0;d<u.length;d++)if(d<s.length){if(s[d]<0)throw new Error("strides should be greater than or equal to 1")}else s.push(1);for(let d=0;d<u.length;d++)if(d<f.length){if(f[d]<0)throw new Error("dilations should be greater than or equal to 1")}else f.push(1);for(let d=0;d<u.length*2;d++)if(d<m.length){if(m[d]<0)throw new Error("pad should be greater than or equal to 1")}else m.push(0);for(let d=0;d<u.length;d++){if(u[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(m[d]>=u[d]||m[d+u.length]>=u[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,u,s,f,m,d){if(d){if(f.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let y=0;y<r.length-2;y++)e.adjustPadAndReturnShape(r[y+(m?1:2)],t[y],u[y],s[y],f,y,y+r.length-2,d)}}static computePoolOutputShape(r,t,u,s,f,m,d){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let y=[t[0],t[1]];return e.computeShapeHelper(r,t,y,u,s,f,m,d),y}static computeConvOutputShape(r,t,u,s,f,m,d){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let y=[r[0],t[0]];return e.computeShapeHelper(!1,r,y,u,s,f,m,d),y}static computeShapeHelper(r,t,u,s,f,m,d,y){if(r)for(let w=0;w<t.length-2;w++)u.push(1);else for(let w=0;w<t.length-2;w++)u.push(e.adjustPadAndReturnShape(t[w+2],s[w],f[w],m[w],d,w,w+t.length-2,y))}static adjustPadAndReturnShape(r,t,u,s,f,m,d,y){let w=u*(s-1)+1;if(y&&y!=="NOTSET")switch(y){case"VALID":return f[m]=0,f[d]=0,Math.floor((r-w)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(u!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let $=((r+t-1)/t-1)*t+s-r;return f[m]=Math.floor(y==="SAME_LOWER"?($+1)/2:$/2),f[d]=$-f[m],Math.floor((r+$-s)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+f[m]+f[d]-w)/t+1)}},ei=class{static getShapeOfGemmResult(r,t,u,s,f){if(r.length!==2||u.length!==2)throw new Error("shape need to be of size 2");let m,d,y;t?(m=r[1],d=r[0]):(m=r[0],d=r[1]);let w=-1;if(s?(y=u[0],w=1):(y=u[1],w=0),u[w]!==d)throw new Error("dimension mismatch");if(m<=0||y<=0||d<=0)throw new Error("invalid shape specified");if(f&&!Ot.isValidBroadcast(f,[m,y]))throw new Error("gemm: invalid bias shape for broadcast");return[m,y,d]}},ti=-34028234663852886e22,ri=34028234663852886e22});var ni,Wi,Ve,ct,se,Je,ot,St,ft,ve,Gi,Q,ne,ii,Ni,Tu,Tr,Ee=oe(()=>{"use strict";Ce();Oe();ni=64,Wi=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ve=(e,r=1)=>{let t=Wi(e,r);return typeof t=="string"?t:t[0]},ct=(e,r=1)=>{let t=Wi(e,r);return typeof t=="string"?t:t[1]},se=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:X.computeStrides(t)})}),r},Je=e=>e%4===0?4:e%2===0?2:1,ot=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,St=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}f(${t})`,ft=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ve=(e,r,t,u)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?u==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:u==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Gi=(e,r,t,u,s)=>{let f=typeof t=="number",m=f?t:t.length,d=[...new Array(m).keys()],y=m<2?"u32":m<=4?`vec${m}<u32>`:`array<u32, ${m}>`,w=Wi(r,s),C=typeof w=="string"?w:w[1],$=typeof w=="string"?w:w[0],T={indices:y,value:C,storage:$,tensor:r},P=te=>typeof te=="string"?te:`${te}u`,A={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},O=f?"uniforms.":"",R=`${O}${e}_shape`,D=`${O}${e}_strides`,k="";for(let te=0;te<m-1;te++)k+=`\n    let dim${te} = current / ${ve(D,te,m)};\n    let rest${te} = current % ${ve(D,te,m)};\n    indices[${te}] = dim${te};\n    current = rest${te};\n    `;k+=`indices[${m-1}] = current;`;let G=m<2?"":`\n  fn o2i_${e}(offset: u32) -> ${T.indices} {\n    var indices: ${T.indices};\n    var current = offset;\n    ${k}\n    return indices;\n  }`,V=te=>(A.offsetToIndices=!0,m<2?te:`o2i_${e}(${te})`),q=[];if(m>=2)for(let te=m-1;te>=0;te--)q.push(`${ve(D,te,m)} * (indices[${te}])`);let Y=m<2?"":`\n  fn i2o_${e}(indices: ${T.indices}) -> u32 {\n    return ${q.join("+")};\n  }`,J=te=>(A.indicesToOffset=!0,m<2?te:`i2o_${e}(${te})`),ie=(...te)=>m===0?"0u":`${T.indices}(${te.map(P).join(",")})`,ge=(te,fe)=>m<2?`${te}`:`${ve(te,fe,m)}`,L=(te,fe,Ie)=>m<2?`${te}=${Ie};`:`${ve(te,fe,m)}=${Ie};`,ue={},je=(te,fe)=>{A.broadcastedIndicesToOffset=!0;let Ie=`${fe.name}broadcastedIndicesTo${e}Offset`;if(Ie in ue)return`${Ie}(${te})`;let st=[];for(let et=m-1;et>=0;et--){let lt=fe.indicesGet("outputIndices",et+fe.rank-m);st.push(`${ge(D,et)} * (${lt} % ${ge(R,et)})`)}return ue[Ie]=`fn ${Ie}(outputIndices: ${fe.type.indices}) -> u32 {\n             return ${st.length>0?st.join("+"):"0u"};\n           }`,`${Ie}(${te})`},Ne=(te,fe)=>(()=>{if(T.storage===T.value)return`${e}[${te}]=${fe};`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`${e}[${te}]=vec2<u32>(u32(${fe}), select(0u, 0xFFFFFFFFu, ${fe} < 0));`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`${e}[${te}]=vec2<u32>(u32(${fe}), 0u);`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`${e}[${te}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${fe}));`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),_e=te=>(()=>{if(T.storage===T.value)return`${e}[${te}]`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`i32(${e}[${te}].x)`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`u32(${e}[${te}].x)`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${te}] & 0xFFu), bool(${e}[${te}] & 0xFF00u), bool(${e}[${te}] & 0xFF0000u), bool(${e}[${te}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),ae=m<2?"":`\n  fn get_${e}ByIndices(indices: ${T.indices}) -> ${C} {\n    return ${_e(`i2o_${e}(indices)`)};\n  }`,ye=m<2?"":(()=>{let te=d.map(Ie=>`d${Ie}: u32`).join(", "),fe=d.map(Ie=>`d${Ie}`).join(", ");return`\n  fn get_${e}(${te}) -> ${C} {\n    return get_${e}ByIndices(${ie(fe)});\n  }`})(),Me=(...te)=>{if(te.length!==m)throw new Error(`indices length must be ${m}`);let fe=te.map(P).join(",");return m===0?_e("0u"):m===1?_e(fe[0]):(A.get=!0,A.getByIndices=!0,A.indicesToOffset=!0,`get_${e}(${fe})`)},Ae=te=>m<2?_e(te):(A.getByIndices=!0,A.indicesToOffset=!0,`get_${e}ByIndices(${te})`),$e=m<2?"":`\n  fn set_${e}ByIndices(indices: ${T.indices}, value: ${C}) {\n    ${Ne(`i2o_${e}(indices)`,"value")}\n  }`,Se=m<2?"":(()=>{let te=d.map(Ie=>`d${Ie}: u32`).join(", "),fe=d.map(Ie=>`d${Ie}`).join(", ");return`\n  fn set_${e}(${te}, value: ${C}) {\n    set_${e}ByIndices(${ie(fe)}, value);\n  }`})();return{impl:()=>{let te=[],fe=!1;return A.offsetToIndices&&(te.push(G),fe=!0),A.indicesToOffset&&(te.push(Y),fe=!0),A.broadcastedIndicesToOffset&&(Object.values(ue).forEach(Ie=>te.push(Ie)),fe=!0),A.set&&(te.push(Se),fe=!0),A.setByIndices&&(te.push($e),fe=!0),A.get&&(te.push(ye),fe=!0),A.getByIndices&&(te.push(ae),fe=!0),!f&&fe&&te.unshift(`const ${R} = ${T.indices}(${t.join(",")});`,`const ${D} = ${T.indices}(${X.computeStrides(t).join(",")});`),te.join(`\n`)},type:T,offsetToIndices:V,indicesToOffset:J,broadcastedIndicesToOffset:je,indices:ie,indicesGet:ge,indicesSet:L,set:(...te)=>{if(te.length!==m+1)throw new Error(`indices length must be ${m}`);let fe=te[m];if(typeof fe!="string")throw new Error("value must be string");let Ie=te.slice(0,m).map(P).join(",");return m===0?Ne("0u",fe):m===1?Ne(Ie[0],fe):(A.set=!0,A.setByIndices=!0,A.indicesToOffset=!0,`set_${e}(${Ie}, ${fe})`)},setByOffset:Ne,setByIndices:(te,fe)=>m<2?Ne(te,fe):(A.setByIndices=!0,A.indicesToOffset=!0,`set_${e}ByIndices(${te}, ${fe});`),get:Me,getByOffset:_e,getByIndices:Ae,usage:u,name:e,strides:D,shape:R,rank:m}},Q=(e,r,t,u=1)=>Gi(e,r,t,"input",u),ne=(e,r,t,u=1)=>Gi(e,r,t,"output",u),ii=(e,r,t,u=1)=>Gi(e,r,t,"internal",u),Ni=class{constructor(r){this.normalizedDispatchGroup=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(r){return`if (global_idx >= ${typeof r=="number"?`${r}u`:r}) { return; }`}mainStart(r=ni){let t=typeof r=="number"?r:r[0],u=typeof r=="number"?1:r[1],s=typeof r=="number"?1:r[2],f=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,m=f?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,d=f?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*u*s}u + local_idx;`;return`@compute @workgroup_size(${t}, ${u}, ${s})\n  fn main(${m}) {\n    ${d}\n  `}appendVariableUniforms(r){r.rank!==0&&(r.shape.startsWith("uniforms.")&&this.uniforms.push({name:r.shape.replace("uniforms.",""),type:"u32",length:r.rank}),r.strides.startsWith("uniforms.")&&this.uniforms.push({name:r.strides.replace("uniforms.",""),type:"u32",length:r.rank}))}declareVariable(r,t){if(r.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(r),this.appendVariableUniforms(r);let u=r.usage==="input"?"read":"read_write",s=r.type.storage;return`@group(0) @binding(${t}) var<storage, ${u}> ${r.name}: array<${s}>;`}declareVariables(...r){return r.map(t=>this.declareVariable(t,this.variableIndex++)).join(`\n`)}registerInternalVariable(r){if(r.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(r),this.appendVariableUniforms(r)}registerInternalVariables(...r){return r.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(r,t,u=1){return this.uniforms.push({name:r,type:t,length:u}),this}registerUniforms(r){return this.uniforms=this.uniforms.concat(r),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let r=[];for(let{name:t,type:u,length:s}of this.uniforms)if(s&&s>4)u==="f16"?r.push(`@align(16) ${t}:array<mat2x4<${u}>, ${Math.ceil(s/8)}>`):r.push(`${t}:array<vec4<${u}>, ${Math.ceil(s/4)}>`);else{let f=s==null||s===1?u:`vec${s}<${u}>`;r.push(`${t}:${f}`)}return`\n      struct Uniforms { ${r.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(r=>r.impl()).join(`\n`)+this.internalVariables.map(r=>r.impl()).join(`\n`)}},Tu=e=>new Ni(e),Tr=(e,r)=>{let t=e.length,u=[];for(let s=0;s<t;s++){let f=t-1-s,m=e[f]||1;(r[r.length-1-s]||1)>1&&m===1&&u.unshift(f)}return u}});var Dh,Eu,Bh,Mh,xt,Pu,Ou,Er=oe(()=>{"use strict";Ce();Oe();nt();Ee();Dh=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Eu=(e,r)=>r&&r.length!==e?[...new Array(e).keys()].reverse():r,Bh=(e,r)=>X.sortBasedOnPerm(e,Eu(e.length,r)),Mh=(e,r,t,u)=>{let s=[];s.push(`fn perm(i: ${u.type.indices}) -> ${t.type.indices} {\n    var a: ${t.type.indices};`);for(let f=0;f<r;++f)s.push(t.indicesSet("a",e[f],`i[${f}]`));return s.push("return a;}"),s.join(`\n`)},xt=(e,r)=>{let t=e.dataType,u=e.dims.length,s=Eu(u,r),f=Bh(e.dims,s),m=ne("output",t,f.length),d=Q("a",t,u),y=w=>`\n  ${w.registerUniform("output_size","u32").declareVariables(d,m)}\n\n  ${Mh(s,u,d,m)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",d.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:w=>{let C=X.size(f);return{outputs:[{dims:f,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},...se(w[0].dims,f)]}},getShaderSource:y}},Pu=(e,r)=>{Dh(e.inputs),e.compute(xt(e.inputs[0],r.perm))},Ou=e=>Pe({perm:e.perm})});var zh,Uh,jh,Vh,Nh,Wh,Gh,Hh,Lh,Fh,kt,ku,Ru,Du,Bu,Mu,zu,Uu,ju,Vu,Nu,Wu=oe(()=>{"use strict";Ce();Oe();Ee();oi();Er();zh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Uh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},jh={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Vh={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Nh=(e,r)=>{let t=[];for(let u=r-e;u<r;++u)t.push(u);return t},Wh=(e,r)=>{let t=[],u=e.length;for(let f=0;f<u;f++)r.indexOf(f)===-1&&t.push(e[f]);let s=r.map(f=>e[f]);return[t,s]},Gh=(e,r)=>{let t=e.length+r.length,u=[],s=0;for(let f=0;f<t;f++)r.indexOf(f)===-1?u.push(e[s++]):u.push(1);return u},Hh=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},Lh=(e,r)=>{let t=[];if(!Hh(e,r)){for(let u=0;u<r;++u)e.indexOf(u)===-1&&t.push(u);e.forEach(u=>t.push(u))}return t},Fh=(e,r,t,u,s,f,m)=>{let d=t[0].dims,y=X.size(f),w=X.size(m),C=Q("_A",t[0].dataType,d),$=ne("output",s,f),T=32,P=`\n          var<workgroup> aBestValues : array<${$.type.storage}, ${T}>;\n       `;return{name:e,shaderCache:r,getShaderSource:O=>`\n        ${O.registerUniform("reduceSize","u32").declareVariables(C,$)}\n        ${P}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${O.mainStart(T)}\n\n          let outputIndex = global_idx / ${T};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${$.type.storage}(${jh[u]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${T}) {\n           let candidate = ${$.type.storage}(${C.getByOffset("offset + k")});\n           bestValue = ${zh[u]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${T}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Uh[u]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${$.setByOffset("outputIndex",`${u==="mean"?`bestValue / ${$.type.storage}(uniforms.reduceSize)`:`${Vh[u]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:f,dataType:s}],dispatchGroup:{x:y},programUniforms:[{type:12,data:w}]})}},kt=(e,r,t,u)=>{let s=e.inputs.length===1?t:Hi(e.inputs,t),f=s.axes;f.length===0&&!s.noopWithEmptyAxes&&(f=e.inputs[0].dims.map((P,A)=>A));let m=X.normalizeAxes(f,e.inputs[0].dims.length),d=m,y=e.inputs[0],w=Lh(d,e.inputs[0].dims.length);w.length>0&&(y=e.compute(xt(e.inputs[0],w),{inputs:[0],outputs:[-1]})[0],d=Nh(d.length,y.dims.length));let[C,$]=Wh(y.dims,d),T=C;s.keepDims&&(T=Gh(C,m)),e.compute(Fh(r,{hint:s.cacheKey,inputDependencies:["type"]},[y],u,e.inputs[0].dataType,T,$),{inputs:[y]})},ku=(e,r)=>{kt(e,"ReduceMeanShared",r,"mean")},Ru=(e,r)=>{kt(e,"ReduceL1Shared",r,"l1")},Du=(e,r)=>{kt(e,"ReduceL2Shared",r,"l2")},Bu=(e,r)=>{kt(e,"ReduceLogSumExpShared",r,"logSumExp")},Mu=(e,r)=>{kt(e,"ReduceMaxShared",r,"max")},zu=(e,r)=>{kt(e,"ReduceMinShared",r,"min")},Uu=(e,r)=>{kt(e,"ReduceProdShared",r,"prod")},ju=(e,r)=>{kt(e,"ReduceSumShared",r,"sum")},Vu=(e,r)=>{kt(e,"ReduceSumSquareShared",r,"sumSquare")},Nu=(e,r)=>{kt(e,"ReduceLogSumShared",r,"logSum")}});var Rt,qh,ai,Hi,Dt,Kh,Yh,Zh,Qh,Xh,Jh,eg,tg,rg,ng,Bt,Gu,Hu,Lu,Fu,qu,Ku,Yu,Zu,Qu,Xu,oi=oe(()=>{"use strict";Ce();Oe();nt();Ee();Wu();Rt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},qh=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ai=(e,r,t,u,s,f,m=!1,d=!1)=>{let y=[],w=t[0].dims,C=w.length,$=X.normalizeAxes(s,C),T=!d&&$.length===0;w.forEach((R,D)=>{T||$.indexOf(D)>=0?m&&y.push(1):y.push(R)});let P=y.length,A=X.size(y);return{name:e,shaderCache:r,getShaderSource:R=>{let D=[],k=Q("_A",t[0].dataType,C),G=ne("output",f,P),V=u(k,G,$),q=V[2];for(let Y=0,J=0;Y<C;Y++)T||$.indexOf(Y)>=0?(m&&J++,q=`for(var j${Y}: u32 = 0; j${Y} < ${w[Y]}; j${Y}++) {\n                  ${V[2].includes("last_index")?`let last_index = j${Y};`:""}\n                  ${k.indicesSet("input_indices",Y,`j${Y}`)}\n                  ${q}\n                }`):(D.push(`${k.indicesSet("input_indices",Y,G.indicesGet("output_indices",J))};`),J++);return`\n\n        ${R.registerUniform("output_size","u32").declareVariables(k,G)}\n\n        ${R.mainStart()}\n          ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${k.type.indices};\n          let output_indices = ${G.offsetToIndices("global_idx")};\n\n          ${D.join(`\n`)}\n          ${V[0]}       // init ops for reduce max/min\n          ${V[1]}\n          ${q}\n          ${V[3]}\n          ${V.length===4?G.setByOffset("global_idx","value"):V.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:y,dataType:f}],dispatchGroup:{x:Math.ceil(A/64)},programUniforms:[{type:12,data:A},...se(w,y)]})}},Hi=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(u=>t.push(Number(u))),Pe({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},Dt=(e,r,t,u)=>{let s=e.inputs,f=s.length===1?t:Hi(s,t);e.compute(ai(r,{hint:f.cacheKey,inputDependencies:["rank"]},[s[0]],f.noopWithEmptyAxes&&f.axes.length===0?qh:u,f.axes,s[0].dataType,f.keepDims,f.noopWithEmptyAxes),{inputs:[0]})},Kh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceLogSum",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${u.getByIndices("input_indices")};`,"value = log(value);"])},Yh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceL1",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${u.getByIndices("input_indices")});`,""])},Zh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceL2",r,(u,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${u.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Qh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceLogSumExp",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${u.getByIndices("input_indices")});`,"value = log(value);"])},Xh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceMax",r,(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(u.indicesSet("input_indices",d,0));return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};`,`value = max(value, ${u.getByIndices("input_indices")});`,""]})},Jh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceMean",r,(u,s,f)=>{let m=1;for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&(m*=e.inputs[0].dims[d]);return["var sum = f32(0);","",`sum += f32(${u.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${m});`]})},eg=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceMin",r,(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(`input_indices[${d}] = 0;`);return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};`,`value = min(value, ${u.getByIndices("input_indices")});`,""]})},tg=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceProd",r,(u,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${u.getByIndices("input_indices")};`,""])},rg=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceSum",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${u.getByIndices("input_indices")};`,""])},ng=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceSumSquare",r,(u,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${u.getByIndices("input_indices")}; value += t * t;`,""])},Bt=(e,r,t)=>{if(r.length===0)return t;let u=1,s=1;for(let f=0;f<r.length;f++)r.indexOf(f)===-1?u*=e[f]:s*=e[f];return s<32&&u>1024},Gu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Jh(e,r):ku(e,r)},Hu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Yh(e,r):Ru(e,r)},Lu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Zh(e,r):Du(e,r)},Fu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Qh(e,r):Bu(e,r)},qu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Xh(e,r):Mu(e,r)},Ku=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?eg(e,r):zu(e,r)},Yu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?tg(e,r):Uu(e,r)},Zu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rg(e,r):ju(e,r)},Qu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ng(e,r):Vu(e,r)},Xu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Kh(e,r):Nu(e,r)}});var Ju,el,tl,Li,rl=oe(()=>{"use strict";Ce();nt();oi();Ju=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},el=(e,r)=>{Ju(e.inputs);let t=(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(`input_indices[${d}] = 0;`);return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {\n         value = ${u.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(ai("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},tl=(e,r)=>{Ju(e.inputs);let t=(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(`input_indices[${d}] = 0;`);return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {\n         value = ${u.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(ai("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Li=e=>Pe(e)});var ig,og,ag,sg,si,ug,nl,Fi=oe(()=>{"use strict";Ce();Xn();Ee();ig=(e,r)=>{let t=e[0],u=e[1],s=e[2],f=e[3],m=e[4],d=e[5];if(m&&d)throw new Error("Attention cannot have both past and relative_position_bias");if(t.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let y=t.dims[0],w=t.dims[1],C=t.dims[2];if(s.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(u.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(u.dims[0]!==C)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==u.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let $=s.dims[0]/3,T=$,P=T;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let G of r.qkvHiddenSizes)if(G%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");$=r.qkvHiddenSizes[0],T=r.qkvHiddenSizes[1],P=r.qkvHiddenSizes[2]}let A=w;if($!==T)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==$+T+P)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let O=0;if(m){if(T!==P)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(m.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(m.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(m.dims[1]!==y)throw new Error(\'Input "past" second dimension must be batch_size\');if(m.dims[2]!==r.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(m.dims[4]!==T/r.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');r.pastPresentShareBuffer||(O=m.dims[3])}let R=A+O,D=-1,k=0;if(f)throw new Error("Mask not supported");if(m)throw new Error("past is not supported");if(d)throw new Error("relativePositionBias is not supported");return{batchSize:y,sequenceLength:w,pastSequenceLength:O,kvSequenceLength:A,totalSequenceLength:R,maxSequenceLength:D,inputHiddenSize:C,hiddenSize:$,vHiddenSize:P,headSize:Math.floor($/r.numHeads),vHeadSize:Math.floor(P/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:k,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},og=(e,r,t,u)=>{let s=Je(u),f=64,m=u/s;m<f?f=1:m/8<64&&(f=Math.ceil(m/8));let d=Math.ceil(u/s/f),y=[{type:r.dataType,data:1/u},{type:12,data:m},{type:12,data:d}],w=Ve(r.dataType,s),C=$=>{let T=ne("x",r.dataType,r.dims,s),P="thread_max_vector";s===2?P="max(thread_max_vector.x, thread_max_vector.y)":s===4&&(P="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let A=ct(r.dataType),O=[{name:"d_inv",type:A},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${f}>;\n  var<workgroup> wgSum: array<f32, ${f}>;\n  ${$.registerUniforms(O).declareVariables(T)}\n  ${$.mainStart([f,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${ot("f32",s,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${St(A,s,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${P};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${f}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${ot("f32",s,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${St(A,s,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${ft("sumVector",s)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${f}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${ot(A,s,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${St(A,s,"x[offset + i]")};\n        x[offset + i] = ${T.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${f};${w};${s}`},getShaderSource:C,getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:y})},{inputs:[r],outputs:[]})},ag=(e,r,t,u,s,f)=>{let m=[s.batchSize,s.numHeads,s.sequenceLength,s.kvSequenceLength+s.pastSequenceLength],d=f.scale===0?1/Math.sqrt(s.headSize):f.scale,y=Je(s.headSize),w=s.headSize/y,C=12,$={x:Math.ceil(s.totalSequenceLength/C),y:Math.ceil(s.sequenceLength/C),z:s.batchSize*s.numHeads},T=[{type:12,data:s.sequenceLength},{type:12,data:w},{type:12,data:s.totalSequenceLength},{type:12,data:s.kvSequenceLength},{type:r.dataType,data:d}],P=[r,t],A=R=>{let D=Q("q",r.dataType,r.dims,y),k=Q("key",t.dataType,t.dims,y),G=ne("output",r.dataType,m),V=Ve(r.dataType),q=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:V}];return`\n  const beta: ${V} = 1.0;\n  const TILE_SIZE = ${C}u;\n\n  var<workgroup> tileQ: array<${D.type.storage}, ${C*C}>;\n  var<workgroup> tileK: array<${D.type.storage}, ${C*C}>;\n  ${R.registerUniforms(q).declareVariables(D,k,G)}\n  ${R.mainStart([C,C,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${ot(V,y)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${ft("value",y)} * uniforms.alpha;\n    }\n  }`},O=e.compute({name:"AttentionProbs",shaderCache:{hint:`${y}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:m,dataType:r.dataType,gpuDataType:0}],dispatchGroup:$,programUniforms:T}),getShaderSource:A},{inputs:P,outputs:[-1]})[0];return og(e,O,s.batchSize*s.numHeads*s.sequenceLength,s.totalSequenceLength),O},sg=(e,r,t,u)=>{let s=[u.batchSize,u.sequenceLength,u.vHiddenSize],f=12,m={x:Math.ceil(u.vHeadSize/f),y:Math.ceil(u.sequenceLength/f),z:u.batchSize*u.numHeads},d=[{type:12,data:u.sequenceLength},{type:12,data:u.totalSequenceLength},{type:12,data:u.vHeadSize},{type:12,data:u.numHeads},{type:12,data:u.vHiddenSize}],y=w=>{let C=Q("probs",r.dataType,r.dims),$=Q("v",t.dataType,t.dims),T=ne("output",r.dataType,s),P=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${f}u;\n  var<workgroup> tileQ: array<${C.type.value}, ${f*f}>;\n  var<workgroup> tileK: array<${C.type.value}, ${f*f}>;\n  ${w.registerUniforms(P).declareVariables(C,$,T)}\n  ${w.mainStart([f,f,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${C.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:r.dataType,gpuDataType:0}],dispatchGroup:m,programUniforms:d}),getShaderSource:y},{inputs:[r,t],outputs:[0]})[0]},si=(e,r,t,u,s,f,m,d,y,w,C)=>{let $=ag(e,r,t,y,w,C);sg(e,$,u,w)},ug=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],u=r.sequenceLength,s=r.inputHiddenSize,f=r.headSize,m=12,d={x:Math.ceil(r.headSize/m),y:Math.ceil(r.sequenceLength/m),z:r.batchSize*r.numHeads},y=[e.inputs[0],e.inputs[1],e.inputs[2]],w=[{type:12,data:u},{type:12,data:s},{type:12,data:f},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],C=$=>{let T=ne("output_q",y[0].dataType,t),P=ne("output_k",y[0].dataType,t),A=ne("output_v",y[0].dataType,t),O=Q("input",y[0].dataType,y[0].dims),R=Q("weight",y[1].dataType,y[1].dims),D=Q("bias",y[2].dataType,y[2].dims),k=O.type.storage,G=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${m}u;\n  var<workgroup> tileInput: array<${k}, ${m*m}>;\n  var<workgroup> tileWeightQ: array<${k}, ${m*m}>;\n  var<workgroup> tileWeightK: array<${k}, ${m*m}>;\n  var<workgroup> tileWeightV: array<${k}, ${m*m}>;\n  ${$.registerUniforms(G).declareVariables(O,R,D,T,P,A)}\n  ${$.mainStart([m,m,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${k}(0);\n    var valueK = ${k}(0);\n    var valueV = ${k}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:w}),getShaderSource:C},{inputs:y,outputs:[-1,-1,-1]})},nl=(e,r)=>{let t=ig(e.inputs,r),[u,s,f]=ug(e,t);return si(e,u,s,f,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r)}});var lg,dg,cg,il,ol=oe(()=>{"use strict";Ar();Ce();Oe();nt();Ee();lg=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(u,s,f)=>{let m=s.length;if(m!==u.length)throw new Error(`${f}: num dimensions != ${m}`);s.forEach((d,y)=>{if(d!==u[y])throw new Error(`${f}: dim[${y}] do not match`)})};if(e[0].dims.length>1){let u=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,u,"Invalid input scale"),t(e[2].dims,u,"Invalid input B"),t(e[3].dims,u,"Invalid input mean"),t(e[4].dims,u,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},dg=(e,r)=>{let{epsilon:t,spatial:u,format:s}=r,f=e[0].dims,m=u?Je(f[f.length-1]):1,d=s==="NHWC"&&f.length>1?m:1,y=X.size(f)/m,w=u,C=w?f.length:f,$=Q("x",e[0].dataType,e[0].dims,m),T=Q("scale",e[1].dataType,e[1].dims,d),P=Q("bias",e[2].dataType,e[2].dims,d),A=Q("inputMean",e[3].dataType,e[3].dims,d),O=Q("inputVar",e[4].dataType,e[4].dims,d),R=ne("y",e[0].dataType,C,m),D=()=>{let G="";if(u)G=`let cOffset = ${f.length===1?"0u":s==="NHWC"?`outputIndices[${f.length-1}] / ${m}`:"outputIndices[1]"};`;else if(s==="NCHW")G=`\n            ${R.indicesSet("outputIndices","0","0")}\n            let cOffset = ${R.indicesToOffset("outputIndices")};`;else{G=`var cIndices = ${T.type.indices}(0);\n                       cIndices[0] = outputIndices[${f.length-1}];`;for(let V=1;V<T.rank;V++)G+=`cIndices[${V}] = outputIndices[${V}];`;G+=`let cOffset = ${T.indicesToOffset("cIndices")};`}return G},k=G=>`\n  const epsilon = ${t};\n  ${G.registerUniform("outputSize","u32").declareVariables($,T,P,A,O,R)}\n  ${G.mainStart()}\n  ${G.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${R.offsetToIndices(`global_idx * ${m}`)};\n    ${D()}\n    let scale = ${T.getByOffset("cOffset")};\n    let bias = ${P.getByOffset("cOffset")};\n    let inputMean = ${A.getByOffset("cOffset")};\n    let inputVar = ${O.getByOffset("cOffset")};\n    let x = ${$.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${R.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${u}_${m}`,inputDependencies:w?["rank","type","type","type","type"]:void 0},getShaderSource:k,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w?[{type:12,data:y},...se(f)]:[{type:12,data:y}]})}},cg=e=>Pe(e),il=(e,r)=>{let{inputs:t,outputCount:u}=e,s=cg({...r,outputCount:u});if(Ir.webgpu.validateInputContent&&lg(t,s),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(dg(t,s))}});var fg,pg,al,sl=oe(()=>{"use strict";Oe();Ee();fg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},pg=e=>{let r=e[0].dims,t=e[0].dims[2],u=X.size(r)/4,s=e[0].dataType,f=Q("input",s,r,4),m=Q("bias",s,[t],4),d=Q("residual",s,r,4),y=ne("output",s,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:C=>`\n  const channels = ${t}u / 4;\n  ${C.declareVariables(f,m,d,y)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let value = ${f.getByOffset("global_idx")}\n      + ${m.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};\n    ${y.setByOffset("global_idx","value")}\n  }`}},al=e=>{fg(e.inputs),e.compute(pg(e.inputs))}});var mg,Ue,ul,ll,dl,cl,fl,pl,ml,hl,gl,hg,yl,bl,vl,wl,ui,_l,li,$l,Cl,Sl,xl,Il,Al,Tl,El,Pl,Ol,kl,Rl,Dl,Bl,Ml,zl,Ul,jl,qi,Ki,Vl,Nl,Wl,di=oe(()=>{"use strict";Ce();Oe();nt();Ee();mg=(e,r,t,u,s,f)=>{let m=Math.ceil(r/4),d="";typeof s=="string"?d=`${s}(a)`:d=s("a");let y=Q("inputData",t,[m],4),w=ne("outputData",u,[m],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(y,w)}\n\n  ${f??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${y.getByOffset("global_idx")};\n    ${w.setByOffset("global_idx",d)}\n  }`},Ue=(e,r,t,u,s,f=e.dataType)=>({name:r,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:m=>mg(m,X.size(e.dims),e.dataType,f,t,u),getRunData:m=>({outputs:[{dims:e.dims,dataType:f}],dispatchGroup:{x:Math.ceil(X.size(m[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(e.dims)/4)}]})}),ul=e=>{e.compute(Ue(e.inputs[0],"Abs","abs"))},ll=e=>{e.compute(Ue(e.inputs[0],"Acos","acos"))},dl=e=>{e.compute(Ue(e.inputs[0],"Acosh","acosh"))},cl=e=>{e.compute(Ue(e.inputs[0],"Asin","asin"))},fl=e=>{e.compute(Ue(e.inputs[0],"Asinh","asinh"))},pl=e=>{e.compute(Ue(e.inputs[0],"Atan","atan"))},ml=e=>{e.compute(Ue(e.inputs[0],"Atanh","atanh"))},hl=e=>Pe(e),gl=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${r.to}`)}e.compute(Ue(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},hg=e=>{let r=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:ti,t=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:ri;return Pe({min:r,max:t})},yl=(e,r)=>{let t=e.inputs.length===1?r:hg(e.inputs),u=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Clip",s=>`clamp(${s}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${u}> = vec4(${u}(${t.min}));\n    const clip_max_: vec4<${u}> = vec4(${u}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},bl=e=>{e.compute(Ue(e.inputs[0],"Ceil","ceil"))},vl=e=>{e.compute(Ue(e.inputs[0],"Cos","cos"))},wl=e=>{e.compute(Ue(e.inputs[0],"Cosh","cosh"))},ui=e=>Pe(e),_l=(e,r)=>{let t=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Elu",u=>`elu_vf32(${u})`,`\n  const elu_alpha_ = ${t}(${r.alpha});\n\n  fn elu_f32(a: ${t}) -> ${t} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,r.cacheKey))},li=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,$l=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,li(r)))},Cl=e=>{e.compute(Ue(e.inputs[0],"Exp","exp"))},Sl=e=>{e.compute(Ue(e.inputs[0],"Floor","floor"))},xl=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,li(r)))},Il=(e,r)=>{let t=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"LeakyRelu",u=>`select(leaky_relu_alpha_ * ${u}, ${u}, ${u} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},Al=e=>{e.compute(Ue(e.inputs[0],"Not",r=>`!${r}`))},Tl=e=>{e.compute(Ue(e.inputs[0],"Neg",r=>`-${r}`))},El=e=>{e.compute(Ue(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},Pl=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},Ol=e=>{e.compute(Ue(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},kl=e=>Pe(e),Rl=(e,r)=>{let t=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"HardSigmoid",u=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${u} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},Dl=e=>{e.compute(Ue(e.inputs[0],"Sin","sin"))},Bl=e=>{e.compute(Ue(e.inputs[0],"Sinh","sinh"))},Ml=e=>{e.compute(Ue(e.inputs[0],"Sqrt","sqrt"))},zl=e=>{e.compute(Ue(e.inputs[0],"Tan","tan"))},Ul=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,jl=e=>{e.compute(Ue(e.inputs[0],"Tanh",Ul))},qi=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Ul("v")};\n}\n`,Ki=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Vl=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"FastGelu",Ki,qi(r),void 0,e.inputs[0].dataType))},Nl=(e,r)=>{let t=ct(e.inputs[0].dataType);return e.compute(Ue(e.inputs[0],"ThresholdedRelu",u=>`select(vec4<${t}>(0.0), ${u}, ${u} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},Wl=e=>{e.compute(Ue(e.inputs[0],"Log","log"))}});var gg,yg,Hl,Ll=oe(()=>{"use strict";Oe();Ee();di();gg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},yg=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Q("input",e[0].dataType,e[0].dims,4),u=Q("bias",e[0].dataType,[e[0].dims[2]],4),s=ne("output",e[0].dataType,r,4),f=X.size(r)/4,m=Ve(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)}}),getShaderSource:y=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${y.declareVariables(t,u,s)}\n\n  ${li(m)}\n\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${s.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Hl=e=>{gg(e.inputs),e.compute(yg(e.inputs))}});var bg,vg,Mt,Fl,ql,Kl,Yl,Zl,Ql,Xl,Jl,ed,td,rd=oe(()=>{"use strict";Ce();Oe();Ee();bg=(e,r,t,u,s,f,m,d,y,w,C,$)=>{let T,P;typeof d=="string"?T=P=(k,G)=>`${d}((${k}),(${G}))`:typeof d=="function"?T=P=d:(T=d.scalar,P=d.vector);let A=ne("outputData",C,u.length,4),O=Q("aData",y,r.length,4),R=Q("bData",w,t.length,4),D;if(s)if(f){let k=X.size(r)===1,G=X.size(t)===1,V=r.length>0&&r[r.length-1]%4===0,q=t.length>0&&t[t.length-1]%4===0;k||G?D=A.setByOffset("global_idx",P(k?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"),G?`${R.type.value}(${R.getByOffset("0")}.x)`:R.getByOffset("global_idx"))):D=`\n            let outputIndices = ${A.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${O.broadcastedIndicesToOffset("outputIndices",A)};\n            let offsetB = ${R.broadcastedIndicesToOffset("outputIndices",A)};\n            ${A.setByOffset("global_idx",P(m||V?O.getByOffset("offsetA / 4u"):`${O.type.value}(${O.getByOffset("offsetA / 4u")}[offsetA % 4u])`,m||q?R.getByOffset("offsetB / 4u"):`${R.type.value}(${R.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else D=A.setByOffset("global_idx",P(O.getByOffset("global_idx"),R.getByOffset("global_idx")));else{if(!f)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let k=(G,V,q="")=>{let Y=`aData[indexA${V}][componentA${V}]`,J=`bData[indexB${V}][componentB${V}]`;return`\n            let outputIndices${V} = ${A.offsetToIndices(`global_idx * 4u + ${V}u`)};\n            let offsetA${V} = ${O.broadcastedIndicesToOffset(`outputIndices${V}`,A)};\n            let offsetB${V} = ${R.broadcastedIndicesToOffset(`outputIndices${V}`,A)};\n            let indexA${V} = offsetA${V} / 4u;\n            let indexB${V} = offsetB${V} / 4u;\n            let componentA${V} = offsetA${V} % 4u;\n            let componentB${V} = offsetB${V} % 4u;\n            ${G}[${V}] = ${q}(${T(Y,J)});\n          `};C===9?D=`\n            var data = vec4<u32>(0);\n            ${k("data",0,"u32")}\n            ${k("data",1,"u32")}\n            ${k("data",2,"u32")}\n            ${k("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:D=`\n            ${k("outputData[global_idx]",0)}\n            ${k("outputData[global_idx]",1)}\n            ${k("outputData[global_idx]",2)}\n            ${k("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(O,R,A)}\n\n        ${$??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${D}\n      }`},vg=(e,r,t,u,s,f,m=t.dataType)=>{let d=!X.areEqual(t.dims,u.dims),y=t.dims,w=X.size(t.dims),C=!1,$=!1,T=[d];if(d){let P=Ot.calcShape(t.dims,u.dims,!1);if(!P)throw new Error("Can\'t perform binary op on the given tensors");y=P,w=X.size(y);let A=X.size(t.dims)===1,O=X.size(u.dims)===1,R=t.dims.length>0&&t.dims[t.dims.length-1]%4===0,D=u.dims.length>0&&u.dims[u.dims.length-1]%4===0;T.push(A),T.push(O),T.push(R),T.push(D);let k=1;for(let G=1;G<y.length;G++){let V=t.dims[t.dims.length-G]??1,q=u.dims[u.dims.length-G]??1;if(V===q)k*=V;else break}k%4===0?($=!0,C=!0):(A||O||R||D)&&(C=!0)}else C=!0;return T.push(C),{name:e,shaderCache:{hint:r+T.map(P=>P.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:P=>bg(P,t.dims,u.dims,y,C,d,$,s,t.dataType,u.dataType,m,f),getRunData:()=>({outputs:[{dims:y,dataType:m}],dispatchGroup:{x:Math.ceil(w/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(y)/4)},...se(t.dims,u.dims,y)]})}},Mt=(e,r,t,u,s,f)=>{e.compute(vg(r,s??"",e.inputs[0],e.inputs[1],t,u,f))},Fl=e=>{Mt(e,"Add",(r,t)=>`${r}+${t}`)},ql=e=>{Mt(e,"Div",(r,t)=>`${r}/${t}`)},Kl=e=>{Mt(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},Yl=e=>{Mt(e,"Mul",(r,t)=>`${r}*${t}`)},Zl=e=>{let r=Q("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Mt(e,"Pow",{scalar:(u,s)=>`pow_custom(${u},${s})`,vector:(u,s)=>`pow_vector_custom(${u},${s})`},`\n    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {\n      if (b == ${r}(0.0)) {\n        return ${r}(1.0);\n      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {\n        return ${r}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {\n      // TODO: implement vectorized pow\n      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Ql=e=>{Mt(e,"Sub",(r,t)=>`${r}-${t}`)},Xl=e=>{Mt(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Jl=e=>{Mt(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},ed=e=>{Mt(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},td=e=>{Mt(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}});var _g,$g,Cg,Sg,nd,id,od=oe(()=>{"use strict";Ce();Oe();nt();Ee();_g=e=>{if(!e||e.length<1)throw new Error("too few inputs");let r=e[0].dataType,t=e[0].dims.length;for(let u of e){if(u.dataType!==r)throw new Error("input tensors should be one type");if(u.dims.length!==t)throw new Error("input tensors should have the same shape")}},$g=(e,r)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${r});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Cg=(e,r)=>{let t=e.length,u=[];for(let s=0;s<t;++s){let f=r.setByOffset("global_idx",e[s].getByIndices("indices"));t===1?u.push(f):s===0?u.push(`if (inputIndex == ${s}u) { ${f} }`):s===t-1?u.push(`else { ${f} }`):u.push(`else if (inputIndex == ${s}) { ${f} }`)}return u.join(`\n`)},Sg=(e,r)=>{let t=e[0].dims.slice();if(r>=t.length||r<-1*t.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let u=r<0?t.length+r:r,s=t.slice(0);for(let D=1;D<e.length;D++){let k=e[D].dims.slice();for(let G=0;G<t.length;G++)if(G===u)s[u]+=k[G];else if(t[G]!==k[G])throw new Error("non concat dimensions must match")}let f=X.size(s),m=new Array(e.length),d=new Array(e.length),y=e[0].dataType,w=0,C=[],$=[],T=[{type:12,data:f}];for(let D=0;D<e.length;++D)w+=e[D].dims[u],m[D]=w,$.push(e[D].dims.length),d[D]=Q(`input${D}`,y,$[D]),C.push("rank"),T.push({type:12,data:m[D]});for(let D=0;D<e.length;++D)T.push(...se(e[D].dims));T.push(...se(s));let P=ne("output",y,s.length),A=P.indicesGet("indices",u),O=Array.from(Array(m.length).keys()).map(D=>`uniforms.sizeInConcatAxis${D}`).join(","),R=D=>`\n\n  ${(()=>{D.registerUniform("outputSize","u32");for(let k=0;k<e.length;k++)D.registerUniform(`sizeInConcatAxis${k}`,"u32");return D.declareVariables(...d,P)})()}\n\n  ${$g(m.length,O)}\n\n  ${D.mainStart()}\n    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${P.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${A});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${m.length}u>(${O});\n      ${A} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Cg(d,P)}\n  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:T}),getShaderSource:R}},nd=(e,r)=>{_g(e.inputs);let t=e.inputs.filter(u=>X.size(u.dims)>0);e.compute(Sg(t,r.axis),{inputs:t})},id=e=>Pe({axis:e.axis})});var zt,Ut,jt,ci,qt=oe(()=>{"use strict";Ce();Oe();zt=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ut=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},jt=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},ci=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,u]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:u}}else if(r==="Clip"){let[t,u]=e?.activation_params||[ti,ri];return{activation:r,clipMax:u,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}});var at,fi,pi=oe(()=>{"use strict";at=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},fi=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var mi,Yi=oe(()=>{"use strict";mi=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var xg,Ig,cn,ad,Ag,fn,Tg,hi,pn=oe(()=>{"use strict";Ce();Oe();Ee();qt();pi();xg=(e,r)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `,Ig=(e,r)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,cn=(e,r,t="f32",u,s=!1,f=32,m=!1,d=32)=>{let y=r[1]*e[1],w=r[0]*e[0],C=s?y:f,$=s?f:y,T=C/r[0],P=f/r[1];if(!((s&&T===4&&e[1]===4||!s&&(T===3||T===4))&&C%r[0]===0&&f%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${s} is true, innerElementSize ${T} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${T} must be 3 or 4.\n  tileAWidth ${C} must be divisible by workgroupSize[0]${r[0]}. tileInner ${f} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${T}<${t}>, ${C/T}>, ${$}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${t}>, ${w/e[0]}>, ${f}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${T};\nconst tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${m?"0":"i32(globalId.z)"};\n  ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${y};\n\n  let num_tiles = ${m?`${Math.ceil(d/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${m?`i32(globalId.z) * ${d}`:"0"};\n\n  var acc: array<vec4<${t}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${P};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${xg(s,u)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${u?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${T===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Ig(s,T)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},ad=(e,r)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${r?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${r?", batchIndices":""});\n            `,Ag=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",fn=(e,r,t="f32",u,s=!1,f=32,m=!1,d=32,y=!1)=>{let w=e[1]*r[1],C=e[0]*r[0],$=s?w:f,T=s?f:w;if(!(T%r[1]===0&&$%r[0]===0&&f%r[1]===0))throw new Error(`tileAHight ${T} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${$} must be divisible by workgroupSize[0]${r[0]}, tileInner ${f} must be divisible by workgroupSize[1]${r[1]}`);let P=T/r[1],A=$/r[0],O=f/r[1],R=y?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${w};\n    let globalColStart = i32(workgroupId.x) * ${C};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${T}; inputRow = inputRow + ${r[1]}) {\n        for (var inputCol = localCol; inputCol < ${$}; inputCol = inputCol + ${r[0]}) {\n          ${ad(s,u)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${f}; inputRow = inputRow + ${r[1]}) {\n            for (var inputCol = localCol; inputCol < ${C}; inputCol = inputCol + ${r[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${u?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${t}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${r[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${r[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${w};\n\nlet tileRowA = i32(localId.y) * ${P};\nlet tileColA = i32(localId.x) * ${A};\nlet tileRowB = i32(localId.y) * ${O};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${A}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${ad(s,u)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${u?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${t}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Ag(s)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${t}, ${$}>, ${T}>;\n  var<workgroup> mm_Bsub : array<array<${t}, ${C}>, ${f}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${m?"0":"i32(globalId.z)"};\n    ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${m?`${Math.ceil(d/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${m?`i32(globalId.z) * ${d}`:"0"};\n\n    var acc : array<array<${t}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${R}\n  }\n`},Tg=(e,r,t,u,s,f=!1)=>{let[m,d,y]=s,[w,C,$,T]=u,P=Tr(m,y),A=Tr(d,y),O=Ve(u[0].type.tensor),R=()=>{let G=C.rank,V=w.rank,q=`var aIndices: ${C.type.indices};`;for(let Y=G-2-1,J=V-1;Y>=0;Y--,J--)q+=`\naIndices[${Y}] = ${V>1?`batchIndices[${J}]`:"batchIndices"};`;return P.forEach(Y=>{q+=`\naIndices[${Y}] = 0;`}),q+=`\naIndices[${G-2}] = u32(row);\n                   aIndices[${G-1}] = u32(colIn);`,q},D=()=>{let G=$.rank,V=w.rank,q=`var bIndices: ${$.type.indices};`;for(let Y=G-2-1,J=V-1;Y>=0;Y--,J--)q+=`\nbIndices[${Y}] = ${V>1?`batchIndices[${J}]`:"batchIndices"};`;return A.forEach(Y=>{q+=`\nbIndices[${Y}] = 0;`}),q+=`\nbIndices[${G-2}] = u32(row);\n                   bIndices[${G-1}] = u32(colIn);`,q};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${at(e,O)} {\n      var value = ${at(e,O)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${R()}\n        value = ${C.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${at(e,O)} {\n      var value = ${at(e,O)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${D()}\n        value = ${$.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${at(e,O)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${r?`value = value + ${f?"bias[colIn]":`${at(e,O)}(bias[row])`};`:""}\n        ${t}\n        ${T.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},hi=(e,r,t,u,s=!1)=>{let f=e[0].dims,m=e[1].dims,d=f.slice(0,-2),y=m.slice(0,-2),w=u?u.slice(0,-2):t.slice(0,-2),C=X.size(w),$=f[f.length-2],T=f[f.length-1],P=m[m.length-1],A=T%4===0&&P%4===0,O=$<=8?[4,1,1]:[4,4,1],R=[8,8,1],D=[Math.ceil(P/R[0]/O[0]),Math.ceil($/R[1]/O[1]),Math.ceil(C/R[2]/O[2])],k=A?4:1,G=[...d,$,T/k],V=G.length,q=[...y,T,P/k],Y=q.length,J=[C,$,P/k],ie=[{type:6,data:$},{type:6,data:P},{type:6,data:T}];Ut(r,ie),ie.push(...se(w,G,q));let ge=["rank","rank"],L=e.length>2;L&&(ie.push(...se(e[2].dims)),ge.push("rank")),ie.push(...se(J));let ue=je=>{let Ne=w.length,_e=ii("batchDims",e[0].dataType,Ne,1),ae=Ve(e[0].dataType),ye=Q("a",e[0].dataType,V,k),Me=Q("b",e[1].dataType,Y,k),Ae=ne("result",e[0].dataType,J.length,k),$e=[ye,Me];if(L){let te=s?k:1;$e.push(Q("bias",e[2].dataType,e[2].dims.length,te))}let Se=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];jt(r,Se);let xe=Ve(Ae.type.tensor),De=zt(r,Ae.type.value,xe),Ye=Tg(k,L,De,[_e,ye,Me,Ae],[d,y,w],s);return`\n  ${je.registerUniforms(Se).registerInternalVariables(_e).declareVariables(...$e,Ae)}\n  ${Ye}\n  ${A?cn(O,R,ae,_e):fn(O,R,ae,_e)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${O};${r.activation};${A};${s}`,inputDependencies:ge},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:D[0],y:D[1],z:D[2]},programUniforms:ie}),getShaderSource:ue}}});var Eg,sd,ud=oe(()=>{"use strict";Ce();Ft();Ee();qt();pi();Yi();pn();Eg=(e,r,t,u,s=!1,f,m=4,d=4,y=4,w="f32")=>{let C=L=>{switch(L){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${w}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${L} is not supported.`)}},$=L=>{switch(L){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${L} is not supported.`)}},T=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,P=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,A=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",O=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",R=e?"row":"col",D=e?"col":"row",k=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${R} / outWidth;\n    let outCol = ${R} % outWidth;\n\n    let WRow = ${D} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${D} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${D} % inChannels;\n    var resData = ${at(m,w)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${A} && xCol >= 0 && xCol < ${O}) {\n      ${T}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${C(m)}\n    }\n    return resData;`,G=e?r&&u?`\n    let col = colIn * ${m};\n    ${k}`:`\n    let col = colIn * ${m};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${k}\n    }\n    return ${at(m,w)}(0.0);`:u&&t?`\n    let col = colIn * ${m};\n    ${k}`:`\n    let col = colIn * ${m};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${k}\n    }\n    return ${at(m,w)}(0.0);`,V=`${$(d)}`,q=at(y,w),Y=e?at(m,w):at(d,w),J=e?at(d,w):at(m,w),ie=zt(f,q,w);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Y} {\n      ${e?G:V}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${J} {\n      ${e?V:G}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${q}) {\n      let col = colIn * ${y};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${P}\n      ${fi(s)}\n      ${ie}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},sd=(e,r,t,u,s,f,m,d)=>{let y=r.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],C=t[0],$=y?t[2]:t[3],T=y?t[1]:t[2],P=y?t[3]:t[1],A=y&&(w%4===0||w%3===0)&&P%4===0,O=y?P:$*T,R=y?$*T:P,D=[8,8,1],k=u<=8?[4,1,1]:[4,4,1],G=[Math.ceil(O/D[0]/k[0]),Math.ceil(R/D[1]/k[1]),Math.ceil(C/D[2]/k[2])];He("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${G}`);let V=A?y&&w%4!==0?3:4:1,q=D[1]*k[1],Y=D[0]*k[0],J=Math.max(D[0]*V,D[1]),ie=u%q===0,ge=s%Y===0,L=f%J===0,ue=A?[V,4,4]:[1,1,1],je=[{type:6,data:u},{type:6,data:s},{type:6,data:f},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];Ut(r,je),je.push(...se(e[0].dims,e[1].dims));let Ne=["rank","rank"];m&&(je.push(...se(e[2].dims)),Ne.push("rank")),je.push(...se(t));let _e=ae=>{let ye=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];jt(r,ye);let Me=A?4:1,Ae=Ve(e[0].dataType),$e=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${A?`vec4<${Ae}>`:Ae}) {\n        result[flatIndex] = ${A?`vec4<${Ae}>`:Ae}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${A?`vec4<${Ae}>`:Ae}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${A?"/ 4":""}, value);\n      }`,Se=Q("x",e[0].dataType,e[0].dims.length,V===3?1:V),xe=Q("w",e[1].dataType,e[1].dims.length,Me),De=[Se,xe],Ye=ne("result",e[0].dataType,t.length,Me);if(m){let te=Q("bias",e[2].dataType,e[2].dims.length,Me);De.push(te),$e+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${A?`vec4<${Ae}>`:Ae} {\n          return bias[coords.${y?"w":"y"}${A?"/ 4":""}];\n        }`}return`\n        ${mi("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${ae.registerUniforms(ye).declareVariables(...De,Ye)}\n        ${$e}\n        ${Eg(y,ie,ge,L,m,r,ue[0],ue[1],ue[2],Ae)}\n        ${A?cn(k,D,Ae,void 0,!y,J):fn(k,D,Ae,void 0,!y,J,!1,void 0,d)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${V};${A};${ie};${ge};${L};${q};${Y};${J}`,inputDependencies:Ne},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:G[0],y:G[1],z:G[2]},programUniforms:je}),getShaderSource:_e}}});var Zi,ld=oe(()=>{"use strict";Ce();Oe();Ee();Xi();qt();Zi=(e,r,t)=>{let u=e.length>2,s=u?"value += b[output_channel];":"",f=e[0].dims,m=e[1].dims,d=m[0]/r.group,y=r.format==="NHWC",w=Qi(f,m,r.dilations,r.pads,r.strides,y),C=X.size(w),$=[{type:12,data:C},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:d}];Ut(r,$),$.push(...se(f,m,w));let T=["rank","rank"];u&&($.push(...se(e[2].dims)),T.push("rank")),$.push(...se(w));let P=A=>{let O=ne("output",e[0].dataType,w.length),R=Ve(O.type.tensor),D=zt(r,O.type.value,R),k=Q("x",e[0].dataType,f.length),G=Q("w",e[1].dataType,m.length),V=[k,G];u&&V.push(Q("b",e[2].dataType,e[2].dims));let q=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return jt(r,q),`\n  ${A.registerUniforms(q).declareVariables(...V,O)}\n\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${O.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${y?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${y?1:2}], outputIndices[${y?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${O.type.value} = ${O.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${y?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${y?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${y?k.get("batch","xHeight","xWidth","input_channel"):k.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${G.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${s}\n    ${D}\n    ${O.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:r.cacheKey,inputDependencies:T},getRunData:()=>({outputs:[{dims:t?t(w):w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:$}),getShaderSource:P}}});var Ji,Pg,dd,eo=oe(()=>{"use strict";Ce();Oe();pn();Ee();qt();Ji=(e,r,t,u,s=!1)=>{let f=e[0].dims,m=e[1].dims,d=f[f.length-2],y=m[m.length-1],w=f[f.length-1],C=Je(y),$=Je(w),T=Je(d),P=X.size(t)/C/T,A=e.length>2,O=u?u.slice(0,-2):t.slice(0,-2),D=[X.size(O),d,y],k=[{type:12,data:P},{type:12,data:d},{type:12,data:y},{type:12,data:w}];Ut(r,k),k.push(...se(O,f,m)),A&&k.push(...se(e[2].dims)),k.push(...se(D));let G=V=>{let q=ii("batch_dims",e[0].dataType,O.length),Y=Q("a",e[0].dataType,f.length,$),J=Q("b",e[1].dataType,m.length,C),ie=ne("output",e[0].dataType,D.length,C),ge=Ve(ie.type.tensor),L=zt(r,ie.type.value,ge),ue=[Y,J],je="";if(A){let Se=s?C:1;ue.push(Q("bias",e[2].dataType,e[2].dims.length,Se)),je=`${s?`value += bias[col / ${Se}];`:`value += ${ie.type.value}(bias[row + i]);`}`}let Ne=f.slice(0,-2),_e=m.slice(0,-2),ae=Tr(Ne,O),ye=Tr(_e,O),Me=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];jt(r,Me);let Ae=(Se,xe)=>{let De=Se.rank,Ye=Se.name;if(De===2)return`var ${Ye}_indices = ${Se.type.indices}(0u, 0u);`;let te=q.rank,fe=`var ${Ye}_indices: ${Se.type.indices};`;for(let Ie=De-2-1,st=te-1;Ie>=0;Ie--,st--)fe+=`\n${Ye}_indices[${Ie}] = ${te>1?`batch_indices[${st}]`:"batch_indices"};`;return xe.forEach(Ie=>{fe+=`\n${Ye}_indices[${Ie}] = 0;`}),fe+=`${Ye}_indices[${De-2}] = 0u;\n                     ${Ye}_indices[${De-1}] = 0u;`,fe},$e=()=>{let Se=`var a_data: ${Y.type.value};`;for(let xe=0;xe<$;xe++)Se+=`\n              let b_data${xe} = b[(b_offset + (k + ${xe}) * uniforms.N + col) / ${C}];`;for(let xe=0;xe<T;xe++){Se+=`a_data = a[(a_offset + (row + ${xe}) * uniforms.K + k) / ${$}];`;for(let De=0;De<$;De++)Se+=`\n            values[${xe}] = fma(${J.type.value}(a_data${$===1?"":`[${De}]`}), b_data${De}, values[${xe}]);\n`}return Se};return`\n  ${V.registerUniforms(Me).registerInternalVariables(q).declareVariables(...ue,ie)}\n  ${V.mainStart()}\n    ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${C})) * ${C};\n    var index1 = global_idx / (uniforms.N / ${C});\n    let stride1 = uniforms.M / ${T};\n    let row = (index1 % stride1) * ${T};\n    let batch = index1 / stride1;\n\n    ${t.length===2?"":`let batch_indices = ${q.offsetToIndices("batch")};`}\n    ${Ae(Y,ae)}\n    let a_offset = ${Y.indicesToOffset("a_indices")};\n    ${Ae(J,ye)}\n    let b_offset = ${J.indicesToOffset("b_indices")};\n    var values: array<${ie.type.value}, ${T}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${$}) {\n      ${$e()}\n    }\n    for (var i = 0u; i < ${T}u; i++) {\n      var value = values[i];\n      ${je}\n      ${L}\n      let cur_indices = ${ie.type.indices}(batch, row + i, col);\n      let offset = ${ie.indicesToOffset("cur_indices")};\n      ${ie.setByOffset(`offset / ${C}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${C};${$};${T};${s}`,inputDependencies:A?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:k}),getShaderSource:G}},Pg=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},dd=e=>{Pg(e.inputs);let r=Ot.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can\'t use matmul on the given tensors");let t=r[r.length-1],u=e.inputs[0].dims[e.inputs[0].dims.length-1];t<8&&u<8?e.compute(Ji(e.inputs,{activation:""},r)):e.compute(hi(e.inputs,{activation:""},r))}});var Qi,cd,Og,fd,to,kg,Rg,ro,Xi=oe(()=>{"use strict";Oe();ud();pn();ld();qt();eo();Er();Qi=(e,r,t,u,s,f)=>{let m=e[0],d=e.slice(f?1:2,f?3:4),y=d.length,w=r[0],$=r.slice(2).map((A,O)=>A+(A-1)*(t[O]-1)),P=d.map((A,O)=>A+u[O]+u[O+y]).map((A,O)=>Math.floor((A-$[O]+s[O])/s[O]));return P.splice(0,0,m),P.splice(f?3:1,0,w),P},cd=[2,3,1,0],Og=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],u=e[1].dims[1]*r.group;if(t!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let s=e[0].dims.length-2;if(r.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(r.strides.length!==s)throw new Error(`strides should be ${s}D`);if(r.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},fd=(e,r)=>{let t=e.kernelShape.slice();for(let f=2;f<r[1].dims.length;++f)t[f-2]===0&&(t[f-2]=r[1].dims[f]);let u=e.pads.slice();sr.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,u,e.format==="NHWC",e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:t,pads:u}),s},to=e=>{let r=ci(e),t=e.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],s=e.dilations,f=e.group,m=e.kernel_shape,d=e.pads,y=e.strides,w=e.w_is_const();return{autoPad:u,format:t,dilations:s,group:f,kernelShape:m,pads:d,strides:y,wIsConst:w,...r,cacheKey:`${e.format};${r.activation};`}},kg=(e,r,t)=>{let u=fd(t,r),s=t.format==="NHWC";if(t.group!==1){e.compute(Zi(r,u));return}let f=r.length===3,m=r[0].dims[s?1:2],d=r[0].dims[s?2:3],y=r[0].dims[s?3:1],w=r[1].dims[2],C=r[1].dims[3],$=Qi(r[0].dims,r[1].dims,t.dilations,u.pads,t.strides,s),T=$[s?1:2],P=$[s?2:3],A=$[s?3:1],O=s&&w===m&&C===d&&t.pads[0]===0&&t.pads[1]===0;if(O||w===1&&C===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let Y=$[0],J,ie,ge,L=[];if(s){let Ne=e.kernelCustomData.wT??e.compute(xt(r[1],cd),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ne),O){let _e=m*d*y;J=r[0].reshape([1,Y,_e]),ie=Ne.reshape([1,_e,A]),ge=[1,Y,A]}else J=r[0].reshape([Y,m*d,y]),ie=Ne.reshape([1,y,A]),ge=[Y,T*P,A];L.push(J),L.push(ie)}else J=r[0].reshape([Y,y,m*d]),ie=r[1].reshape([1,A,y]),ge=[Y,A,T*P],L.push(ie),L.push(J);f&&L.push(r[2]);let ue=ge[2],je=L[0].dims[L[0].dims.length-1];ue<8&&je<8?e.compute(Ji(L,u,$,ge,s),{inputs:L}):e.compute(hi(L,u,$,ge,s),{inputs:L});return}let R=!0,D=e.kernelCustomData.wT??e.compute(xt(r[1],cd),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=D);let k=[r[0],D];f&&k.push(r[2]);let G=s?T*P:A,V=s?A:T*P,q=w*C*y;e.compute(sd(k,u,$,G,V,q,f,R),{inputs:k})},Rg=(e,r)=>{let t=r.format==="NHWC",u=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&u.push(e.inputs[2]);let s=[0,r.pads[0],0,r.pads[1]],f=[1].concat(r.strides),m=[1].concat(r.dilations),d=[1].concat(r.kernelShape),y=fd({...r,pads:s,strides:f,dilations:m,kernelShape:d},u);e.compute(Zi(u,y,w=>t?[w[0],w[2],w[3]]:[]))},ro=(e,r)=>{Og(e.inputs,r),e.inputs[0].dims.length===3?Rg(e,r):kg(e,e.inputs,r)}});var Dg,pd,md=oe(()=>{"use strict";Ce();Ft();Ee();qt();pi();Yi();pn();Dg=(e,r=!1,t,u,s=4)=>{let f=D=>{switch(D){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${u}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${D} is not supported.`)}},m=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,d=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,y=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",C=e?"row":"col",$=e?"col":"row",T=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${C} / outWidth;\n      let outCol = ${C} % outWidth;\n\n      let WRow = ${$} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${$} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${y}) || fract(xR) > 0.0) {\n        return ${u}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${w}) || fract(xC) > 0.0) {\n        return ${u}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${$} % inChannels;\n      ${m}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${s}];`,P=e?`\n      let col = colIn * ${s};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${T}\n      }\n      return ${u}(0.0);`:`\n      let col = colIn * ${s};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${T}\n      }\n      return ${u}(0.0);`,A=`\n      let col = colIn * ${s};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${f(s)}\n      }\n      return ${u}(0.0);\n      `,O=zt(t,u);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${u} {\n    ${e?P:A}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${u} {\n    ${e?A:P}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${u}) {\n    let col = colIn * ${s};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${d}\n      ${fi(r)}\n      ${O}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${s}] = value;\n    }\n  }`},pd=(e,r,t,u,s,f,m,d)=>{let y=r.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],C=t[0],$=y?t[2]:t[3],T=y?t[1]:t[2],P=y?t[3]:t[1],A=y?w%4===0&&P%4===0:$%4===0&&P%4===0,O=y?P:$*T,R=y?$*T:P,D=A?[8,8,1]:[O<=4||R<=4?4:16,O>4&&R<=4?4:16,1],k=A?[4,4,1]:[O<=4?1:4,O>4&&R<=4?1:4,1],G=[Math.ceil(O/D[0]/k[0]),Math.ceil(R/D[1]/k[1]),Math.ceil(C/D[2]/k[2])];He("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${G}`);let V=A?4:1,q=Math.max(D[0]*V,D[1]),Y=A?4:1,J=[r.kernelShape[y?1:2],r.kernelShape[y?2:3]],ie=[J[0]+(r.dilations[0]<=1?0:(J[0]-1)*(r.dilations[0]-1)),J[1]+(r.dilations[1]<=1?0:(J[1]-1)*(r.dilations[1]-1))],ge=[ie[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),ie[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],L=[{type:6,data:u},{type:6,data:s},{type:6,data:f},{type:6,data:r.strides},{type:6,data:r.dilations},{type:6,data:J},{type:6,data:ge}];Ut(r,L),L.push(...se(e[0].dims,e[1].dims));let ue=["rank","rank"];m&&(L.push(...se(e[2].dims)),ue.push("rank")),L.push(...se(t));let je=Ne=>{let _e=Q("x",e[0].dataType,e[0].dims.length,Y),ae=Q("w",e[1].dataType,e[1].dims.length,1),ye=ne("result",e[0].dataType,t.length,Y),Me=[_e,ae],Ae="";if(m){let xe=Q("bias",e[2].dataType,e[2].dims.length,Y);Me.push(xe),Ae+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${xe.type.value} {\n            return bias[coords.${y?"w":"y"}${A?"/ 4":""}];\n          }`}let $e=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:J.length},{name:"pads",type:"i32",length:ge.length}];jt(r,$e);let Se=Ve(e[0].dataType,1);if(Se!=="f16"&&Se!=="f32")throw new Error(`elemType ${Se} is not supported.`);return`\n        ${mi("uniforms.result_strides")}\n        ${Ne.registerUniforms($e).declareVariables(...Me,ye)};\n        ${Ae}\n        ${Dg(y,m,r,_e.type.value,V)}\n        ${A?cn(k,D,Se,void 0,!y,q):fn(k,D,Se,void 0,!y,q,!1,void 0,d)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${r.cacheKey};${k};${D};${A}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:G[0],y:G[1],z:G[2]},programUniforms:L}),getShaderSource:je}}});var Bg,no,hd=oe(()=>{"use strict";Ce();Ft();Oe();Ee();Bg=(e,r,t,u,s,f=!1,m,d,y=!1)=>{let w=y?1:2,C=y?2:3,$=y?3:1,T=f?2:1,P=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${f?`vec4<${m}>`:m}) {\n    result[flatIndex] = ${f?`vec4<${m}>`:m}(value);\n  }`;u&&(P+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${f?`vec4<${m}>`:m} {\n      return bias[coords.${y?"w":"y"}${f?"/ 4":""}];\n    }`);let A=f?4:1,O=Q("W",r[1].dataType,r[1].dims.length,A),R=Q("Dy",r[0].dataType,r[0].dims.length,A),D=[R,O];u&&D.push(Q("bias",r[2].dataType,[t[$]].length,A));let k=ne("result",r[0].dataType,t.length,A),G=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${T};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${m}>, ${T}>;\n        for (var i = 0; i < ${T}; i++) {\n          dotProd[i] = vec4<${m}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${m}(dyCorner.x) + ${m}(wR)) / ${m}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${m}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${m}(dyCorner.y) + ${m}(wC)) / ${m}(uniforms.strides.y);\n            let dyC2 = (${m}(dyCorner.y) + 1.0 + ${m}(wC)) / ${m}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${m}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${m}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${R.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${m}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${R.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${m}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${$}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${R.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${m}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${R.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${m}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${T}; i = i + 1) {\n          let value = dotProd[i] + ${u?"bias[c+i]":`vec4<${m}>(0.0)`};\n          ${k.set("batch","r","c + i","d1","value")};\n        }\n      }`,V=`\n          let outputIndices = ${k.offsetToIndices("global_idx")};\n          let batch = ${k.indicesGet("outputIndices",0)};\n          let d1 = ${k.indicesGet("outputIndices",$)};\n          let r = ${k.indicesGet("outputIndices",w)};\n          let c = ${k.indicesGet("outputIndices",C)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${m}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${m}(dyRCorner) + ${m}(wR)) / ${m}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${m}(uniforms.Dy_shape[${w}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${m}(dyCCorner) + ${m}(wC)) / ${m}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${m}(uniforms.Dy_shape[${C}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${y?R.get("batch","idyR","idyC","inputChannel"):R.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${O.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${u?"bias[d1]":`${m}(0.0)`};\n          ${k.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(d).declareVariables(...D,k)}\n  ${P}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${f?G:V}}`},no=(e,r,t)=>{let u=e.length>2,s=r.outputShape,f=X.size(s),m=[Math.ceil(f/64),1,1];He("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${m}`);let d=r.format==="NHWC",y=["rank","rank"],w=[r.strides[0],r.strides[1]],C=[r.kernelShape[d?1:2],r.kernelShape[d?2:3]],$=[r.dilations[0],r.dilations[1]],T=[C[0]+(r.dilations[0]<=1?0:(r.kernelShape[d?1:2]-1)*(r.dilations[0]-1)),C[1]+(r.dilations[1]<=1?0:(r.kernelShape[d?2:3]-1)*(r.dilations[1]-1))],P=[T[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),T[1]-1-Math.floor(r.pads[1]+r.pads[3])/2],A=!1,O=r.group,R=e[1].dims,D=R[0]/O,k=R[1],G=[{type:6,data:f},{type:12,data:w},{type:12,data:C},{type:12,data:$},{type:12,data:T},{type:6,data:P},{type:12,data:D},{type:12,data:k},...se(e[0].dims,e[1].dims)];u&&(G.push(...se(e[2].dims)),y.push("rank")),G.push(...se(s));let V=m[1]===1&&m[2]===1,q=Y=>{let J=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:w.length},{name:"filter_dims",type:"u32",length:C.length},{name:"dilations",type:"u32",length:C.length},{name:"effective_filter_dims",type:"u32",length:T.length},{name:"pads",type:"i32",length:P.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],ie=Ve(e[0].dataType);return`${Bg(Y,e,s,u,V,A,ie,J,d)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:m[0],y:m[1],z:m[2]},outputs:[{dims:t?t(s):s,dataType:e[0].dataType}],programUniforms:G}),getShaderSource:q}}});var Mg,zg,Ug,gd,yd,jg,Vg,Ng,Wg,bd,vd=oe(()=>{"use strict";md();hd();qt();Er();Mg=(e,r,t,u,s,f)=>(e-1)*r+t+(u-1)*s+1-f,zg=(e,r,t,u,s)=>{let f=Math.floor(e/2);r==="SAME_UPPER"?(t[u]=f,t[s]=e-f):r==="SAME_LOWER"&&(t[u]=e-f,t[s]=f)},Ug=(e,r,t,u,s,f,m,d,y,w)=>{let C=e.length-2,$=w.length===0;if(y.length===0)for(let A=0;A<C;++A)y.push(0);let T=e[0],P=r[d?3:1]*s;for(let A=0,O=e.length-C-(d?1:0);A<C;++A,++O){let R=e[O],D=$?R*m[A]:w[A],k=Mg(R,m[A],f[A],r[O],t[A],D);zg(k,u,f,A,A+C),$&&w.push(m[A]*(R-1)+y[A]+(r[O]-1)*t[A]+1-f[A]-f[A+C])}w.splice(0,0,T),w.splice(d?3:1,0,P)},gd=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce(($,T)=>$*T,1)===0){t.length=0;for(let $=2;$<r[1].dims.length;++$)t.push(r[1].dims[$])}let u=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(u?3:1,0,r[1].dims[1]);let s=e.pads.slice(),f=e.outputShape.slice(),m=e.outputPadding.slice(),d=r[0].dims,y=e.dilations.slice();if(y.reduce(($,T)=>$+T,0)===0){let $=r[0].dims.length-2;y=new Array($).fill(1)}let w=e.strides.slice();if(w.reduce(($,T)=>$+T,0)===0){let $=r[0].dims.length-2;w=new Array($).fill(1)}Ug(d,t,y,e.autoPad,e.group,s,w,u,m,f);let C=Object.assign({},e);return Object.assign(C,{kernelShape:t,pads:s,outputPadding:m,outputShape:f,dilations:y,strides:w}),C},yd=e=>{let r=ci(e),t=e.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,f=e.group,m=e.kernelShape,d=e.pads,y=e.strides,w=e.wIsConst(),C=e.outputPadding,$=e.outputShape;return{autoPad:u,format:t,dilations:s,group:f,kernelShape:m,outputPadding:C,outputShape:$,pads:d,strides:y,wIsConst:w,...r,cacheKey:`${e.format};${r.activation};`}},jg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],u=e[1].dims[0];if(t!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==s))throw new Error("invalid bias");let f=e[0].dims.length-2;if(r.dilations.reduce((C,$)=>C+$,0)>0&&r.dilations.length!==f)throw new Error(`dilations should be ${f}D`);if(r.strides.reduce((C,$)=>C+$,0)>0&&r.strides.length!==f)throw new Error(`strides should be ${f}D`);if(r.pads.reduce((C,$)=>C+$,0)>0&&r.pads.length!==f*2)throw new Error(`pads should be ${f*2}D`);if(r.outputPadding.length!==f&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${f}D`);if(r.kernelShape.reduce((C,$)=>C+$,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Vg=[2,3,1,0],Ng=(e,r,t)=>{let u=gd(t,r),s=t.format==="NHWC",f=u.outputShape,m=f[s?3:1],d=r[0].dims[s?3:1];if(u.group!==1||m===1&&d===1){e.compute(no(r,u));return}let y=f[s?1:2],w=f[s?2:3],C=r[1].dims[2],$=r[1].dims[3],T=s?y*w:m,P=s?m:y*w,A=C*$*d,O=!0,R=e.kernelCustomData.wT??e.compute(xt(r[1],Vg),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=R);let D=[r[0],R],k=r.length===3;k&&(!s&&r[2].dims.length===1?D.push(r[2].reshape([r[2].dims[0],1,1])):D.push(r[2])),e.compute(pd(D,u,f,T,P,A,k,O),{inputs:D})},Wg=(e,r)=>{let t=r.format==="NHWC",u=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];u.length===3&&u.push(e.inputs[2]);let s=r.kernelShape;(s.length===0||s[0]===0)&&(s=[e.inputs[1].dims[2]]);let f=r.dilations;(f.length===0||f[0]===0)&&(f=[1]);let m=r.strides;(m.length===0||m[0]===0)&&(m=[1]);let d=r.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],m=[1].concat(m),f=[1].concat(f),s=[1].concat(s);let y=gd({...r,pads:d,strides:m,dilations:f,kernelShape:s},u);e.compute(no(u,y,w=>t?[w[0],w[2],w[3]]:[w[0],w[1],w[3]]))},bd=(e,r)=>{jg(e.inputs,r),e.inputs[0].dims.length===3?Wg(e,r):Ng(e,e.inputs,r)}});var Gg,wd,_d,$d=oe(()=>{"use strict";Ce();Oe();nt();Ee();Gg=(e,r,t,u)=>{let s=X.size(r),f=r.length,m=Q("input",e,f),d=ne("output",e,f),y=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),w=X.normalizeAxis(y,f),C=$=>{let T=` i32(${m.indicesGet("inputIndices","uniforms.axis")}) `,P=ve("uniforms.input_shape","uniforms.axis",f),A=u.reverse?T+(u.exclusive?" + 1":""):"0",O=u.reverse?P:T+(u.exclusive?"":" + 1");return`\n                ${$.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(m,d)}\n                ${$.mainStart()}\n                  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${d.offsetToIndices("global_idx")};\n                  var sum = ${d.type.value}(0);\n                  let first : i32 = ${A};\n                  let last : i32 = ${O};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${m.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${m.getByIndices("inputIndices")};\n                  }\n                  ${d.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:u.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:6,data:w},...se(r,r)]}),getShaderSource:C}},wd=(e,r)=>{let t=e.inputs[0].dims,u=e.inputs[0].dataType,s=e.inputs[1];e.compute(Gg(u,t,s,r),{inputs:[0]})},_d=e=>{let r=e.exclusive===1,t=e.reverse===1;return Pe({exclusive:r,reverse:t})}});var io,gi,Cd,Hg,Lg,oo,ao,Sd,Fg,xd,Id,Ad=oe(()=>{"use strict";Ce();Oe();nt();Ee();io="[a-zA-Z]|\\\\.\\\\.\\\\.",gi="("+io+")+",Cd="^"+gi+"$",Hg="("+gi+",)*"+gi,Lg="^"+Hg+"$",oo=class{constructor(r=-1){this.symbolToIndices=new Map,this.inputIndex=r}addSymbol(r,t){let u=this.symbolToIndices.get(r);u===void 0?u=[t]:u.push(t),this.symbolToIndices.set(r,u)}},ao=class{constructor(r,t){this.equation=t;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[u,s]=t.includes("->")?t.split("->",2):[t,""];if(!u.match(RegExp(Lg)))throw new Error("Invalid LHS term");if(u.split(",").forEach((d,y)=>{let w=r[y].dims.slice();if(!d.match(RegExp(Cd)))throw new Error("Invalid LHS term");let C=this.processTerm(d,!0,w,y);this.lhs.push(C)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([d,y])=>y.count===1||d==="...").map(([d])=>d).join("");else if(!s.match(RegExp(gi)))throw new Error("Invalid RHS");s.match(RegExp(io,"g"))?.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let y=this.symbolToInfo.get(d);if(y===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(y.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(r,t,u){let s=this.symbolToInfo.get(r);if(s!==void 0){if(s.dimValue!==t&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(u)}else s={count:1,dimValue:t,inputIndices:[u]};this.symbolToInfo.set(r,s)}processTerm(r,t,u,s=-1){let f=u.length,m=!1,d=[],y=0;if(!r.match(RegExp(Cd))&&!t&&r!=="")throw new Error("Invalid LHS term");let w=r.match(RegExp(io,"g")),C=new oo(s);return w?.forEach(($,T)=>{if($==="..."){if(m)throw new Error("Only one ellipsis is allowed per input term");m=!0;let P=f-w.length+1;if(P<0)throw new Error("Ellipsis out of bounds");if(d=u.slice(y,y+P),this.hasEllipsis){if(this.ellipsisDims.length!==d.length||this.ellipsisDims.toString()!==d.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=d;else throw new Error("Ellipsis must be specified in the LHS");for(let A=0;A<d.length;A++){let O=String.fromCharCode("0".charCodeAt(0)+A);C.addSymbol(O,T+A),this.addSymbol(O,u[y++],s)}}else C.addSymbol($,T+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol($,u[y++],s)}),C}},Sd=e=>e+"_max",Fg=(e,r,t,u)=>{let f=e.map(C=>C.length).map((C,$)=>Q(`input${$}`,r,C)),m=X.size(u),d=ne("output",r,u.length),y=[...t.symbolToInfo.keys()].filter(C=>!t.rhs.symbolToIndices.has(C)),w=C=>{let $=[],T="var prod = 1.0;",P="var sum = 0.0;",A="sum += prod;",O=[],R=[],D=[],k=[],G=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((q,Y)=>{if(t.rhs.symbolToIndices.has(Y)){let J=t.rhs.symbolToIndices.get(Y)?.[0];J!==void 0&&t.lhs.forEach((ie,ge)=>{if(q.inputIndices.includes(ge)){let L=ie.symbolToIndices.get(Y);if(L===void 0)throw new Error("Invalid symbol error");L.forEach(ue=>{$.push(`${f[ge].indicesSet(`input${ge}Indices`,ue,d.indicesGet("outputIndices",J))}`)})}})}else t.lhs.forEach((J,ie)=>{if(q.inputIndices.includes(ie)){let ge=J.symbolToIndices.get(Y);if(ge===void 0)throw new Error("Invalid symbol error");ge.forEach(L=>{O.push(`${f[ie].indicesSet(`input${ie}Indices`,L,`${Y}`)}`)}),k.push(`prod *= ${f[ie].getByIndices(`input${ie}Indices`)};`)}}),R.push(`for(var ${Y}: u32 = 0; ${Y} < uniforms.${Sd(Y)}; ${Y}++) {`),D.push("}")});let V=G?[...$,`let sum = ${f.map((q,Y)=>q.getByIndices(`input${Y}Indices`)).join(" * ")};`]:[...$,P,...R,...O,T,...k,A,...D];return`\n            ${C.registerUniforms(y.map(q=>({name:`${Sd(q)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...f,d)}\n\n            ${C.mainStart()}\n            ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${d.offsetToIndices("global_idx")};\n            ${f.map((q,Y)=>`var input${Y}Indices: ${f[Y].type.indices};`).join(`\n`)}\n            ${V.join(`\n`)};\n            ${d.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let C=y.filter(T=>t.symbolToInfo.has(T)).map(T=>({type:12,data:t.symbolToInfo.get(T)?.dimValue||0}));C.push({type:12,data:m});let $=e.map((T,P)=>[...se(T)]).reduce((T,P)=>T.concat(P),C);return $.push(...se(u)),{outputs:[{dims:u,dataType:r}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:$}},getShaderSource:w}},xd=(e,r)=>{let t=new ao(e.inputs,r.equation),u=t.outputDims,s=e.inputs.map((f,m)=>f.dims);e.compute(Fg(s,e.inputs[0].dataType,t,u))},Id=e=>{let r=e.equation.replace(/\\s+/g,"");return Pe({equation:r})}});var qg,Td,Kg,Yg,Ed,Pd=oe(()=>{"use strict";Ce();Oe();Ee();qg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),u=t.length<r.length?0:t.length-r.length,s=r.length<t.length?0:r.length-t.length;for(;u<t.length&&s<r.length;++u,++s)if(t[u]!==r[s]&&t[u]!==1&&r[s]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Td=(e,r)=>{let t=e.length-r.length,u=[];for(let s=0;s<t;++s)u.push(e[s]);for(let s=0;s<r.length;++s)u.push(r[s]===1?e[s+t]:r[s]);return u},Kg=(e,r)=>e.length>r.length?Td(e,r):Td(r,e),Yg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),u=Kg(r,t),s=e[0].dataType,f=s===9?4:1,m=Math.ceil(X.size(u)/f),d=w=>{let C=Q("input",s,r.length,f),$=ne("output",s,u.length,f),T;if(s===9){let P=(A,O,R="")=>`\n          let outputIndices${O} = ${$.offsetToIndices(`outputOffset + ${O}u`)};\n          let offset${O} = ${C.broadcastedIndicesToOffset(`outputIndices${O}`,$)};\n          let index${O} = offset${O} / 4u;\n          let component${O} = offset${O} % 4u;\n          ${A}[${O}] = ${R}(${C.getByOffset(`index${O}`)}[component${O}]);\n        `;T=`\n        let outputOffset = global_idx * ${f};\n        var data = vec4<u32>(0);\n        ${P("data",0,"u32")}\n        ${P("data",1,"u32")}\n        ${P("data",2,"u32")}\n        ${P("data",3,"u32")}\n        ${$.setByOffset("global_idx","data")}\n      }`}else T=`\n        let outputIndices = ${$.offsetToIndices("global_idx")};\n        let inputOffset = ${C.broadcastedIndicesToOffset("outputIndices",$)};\n        ${$.setByOffset("global_idx",C.getByOffset("inputOffset"))}\n      }`;return`\n    ${w.registerUniform("vec_size","u32").declareVariables(C,$)}\n    ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${T}`},y=[{type:12,data:m},...se(r,u)];return{name:"Expand",shaderCache:{hint:`${u.length}`,inputDependencies:["rank"]},getShaderSource:d,getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:y})}},Ed=e=>{qg(e.inputs),e.compute(Yg(e.inputs),{inputs:[0]})}});var Zg,Od,kd=oe(()=>{"use strict";Ce();Oe();Ee();di();Zg=e=>{let r=e[0].dataType,t=X.size(e[0].dims),u=X.size(e[1].dims),s=u%4===0,f=m=>{let d=Q("x",r,[1],4),y=Q("bias",r,[1],4),w=ne("y",r,[1],4),C=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],$=P=>`\n      let bias${P}_offset: u32 = (global_idx * 4 + ${P}) % uniforms.bias_size;\n      let bias${P} = ${y.getByOffset(`bias${P}_offset / 4`)}[bias${P}_offset % 4];`,T=s?`\n      let bias = ${y.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${$(0)}${$(1)}${$(2)}${$(3)}\n      let bias = ${d.type.value}(bias0, bias1, bias2, bias3);`;return`${m.registerUniforms(C).declareVariables(d,y,w)}\n\n    ${qi(ct(r))}\n\n    ${m.mainStart(ni)}\n      ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${d.getByOffset("global_idx")};\n      ${T}\n      let x_in = x + bias;\n      ${w.setByOffset("global_idx",Ki("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:f,getRunData:m=>({outputs:[{dims:m[0].dims,dataType:m[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:u}],dispatchGroup:{x:Math.ceil(t/ni/4)}})}},Od=e=>{e.inputs.length<2||X.size(e.inputs[1].dims)===0?Vl(e):e.compute(Zg(e.inputs))}});var Qg,Xg,Rd,Dd,Bd=oe(()=>{"use strict";Ce();Oe();nt();Ee();Qg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Xg=(e,r)=>{let t=e[0].dims,u=e[1].dims,s=t.length,f=X.normalizeAxis(r.axis,s),m=t.slice(0);m.splice(f,1,...u);let d=t[f],y=e[0].dataType===9?4:1,w=Math.ceil(X.size(m)/y),C=[{type:12,data:w},{type:6,data:d},{type:12,data:f},...se(e[0].dims,e[1].dims,m)],$=T=>{let P=Q("data",e[0].dataType,e[0].dims.length,y),A=Q("inputIndices",e[1].dataType,e[1].dims.length),O=ne("output",e[0].dataType,m.length,y),R=k=>{let G=u.length,V=`var indicesIndices${k}  = ${A.type.indices}(0);`;for(let q=0;q<G;q++)V+=`${G>1?`indicesIndices${k}[${q}]`:`indicesIndices${k}`} = ${m.length>1?`outputIndices${k}[uniforms.axis + ${q}]`:`outputIndices${k}`};`;V+=`\n          var idx${k} = ${A.getByIndices(`indicesIndices${k}`)};\n          if (idx${k} < 0) {\n            idx${k} = idx${k} + uniforms.axisDimLimit;\n          }\n          var dataIndices${k} : ${P.type.indices};\n        `;for(let q=0,Y=0;q<s;q++)q===f?(V+=`${s>1?`dataIndices${k}[${q}]`:`dataIndices${k}`} = u32(idx${k});`,Y+=G):(V+=`${s>1?`dataIndices${k}[${q}]`:`dataIndices${k}`} = ${m.length>1?`outputIndices${k}[${Y}]`:`outputIndices${k}`};`,Y++);return V},D;if(e[0].dataType===9){let k=(G,V,q="")=>`\n          let outputIndices${V} = ${O.offsetToIndices(`outputOffset + ${V}u`)};\n          ${R(V)};\n          let offset${V} = ${P.indicesToOffset(`dataIndices${V}`)};\n          let index${V} = offset${V} / 4u;\n          let component${V} = offset${V} % 4u;\n          ${G}[${V}] = ${q}(${P.getByOffset(`index${V}`)}[component${V}]);\n        `;D=`\n        let outputOffset = global_idx * ${y};\n        var value = vec4<u32>(0);\n        ${k("value",0,"u32")}\n        ${k("value",1,"u32")}\n        ${k("value",2,"u32")}\n        ${k("value",3,"u32")}\n        ${O.setByOffset("global_idx","value")}\n      `}else D=`\n      let outputIndices = ${O.offsetToIndices("global_idx")};\n      ${R("")};\n      let value = ${P.getByIndices("dataIndices")};\n      ${O.setByOffset("global_idx","value")};\n      `;return`\n      ${T.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(P,A,O)}\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${D}\n      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:C}),getShaderSource:$}},Rd=e=>Pe({axis:e.axis}),Dd=(e,r)=>{let t=e.inputs;Qg(t),e.compute(Xg(e.inputs,r))}});var Jg,ey,Md,zd,Ud=oe(()=>{"use strict";Ce();Oe();nt();Ee();Jg=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},ey=(e,r)=>{let t=e[0].dims,u=e[0].dataType,s=t.length,f=e[1].dims,m=e[1].dataType,d=X.normalizeAxis(r.axis,s),y=t[d],w=f.slice(0),C=X.size(w),$=Q("input",u,s),T=Q("indicesInput",m,f.length),P=ne("output",u,w.length),A=[{type:12,data:C},{type:6,data:y},{type:12,data:d}];return A.push(...se(t,f,w)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:A}),getShaderSource:D=>`\n      ${D.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables($,T,P)}\n      ${D.mainStart()}\n      ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${P.offsetToIndices("global_idx")};\n\n      var idx = ${T.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${$.type.indices}(outputIndices);\n      ${$.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${$.getByIndices("inputIndices")};\n\n      ${P.setByOffset("global_idx","value")};\n  }`}},Md=e=>Pe({axis:e.axis}),zd=(e,r)=>{let t=e.inputs;Jg(t),e.compute(ey(e.inputs,r))}});var ty,ry,jd,Vd,Nd=oe(()=>{"use strict";Ce();Oe();Ee();ty=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},ry=(e,r)=>{let t=e[0].dims.slice(),u=e[1].dims.slice(),[s,f,m]=ei.getShapeOfGemmResult(t,r.transA,u,r.transB,e.length===3?e[2].dims:void 0),d=[s,f];if(!d)throw new Error("Can\'t use gemm on the given tensors");let y=X.size(d),w=[{type:12,data:y},{type:12,data:s},{type:12,data:f},{type:12,data:m},{type:1,data:r.alpha},{type:1,data:r.beta}],C=["type","type"];e.length===3&&(w.push(...se(e[2].dims)),C.push("rank")),w.push(...se(d));let $=T=>{let P="";r.transA&&r.transB?P="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?P="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?P="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(P="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let A=r.alpha===1?"":"value *= uniforms.alpha;",O=Q("a",e[0].dataType,e[0].dims),R=Q("b",e[1].dataType,e[1].dims),D=O.type.value,k=null,G=[O,R];e.length===3&&(k=Q("c",e[2].dataType,e[2].dims.length),G.push(k));let V=ne("output",e[0].dataType,d.length);G.push(V);let q=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${T.registerUniforms(q).declareVariables(...G)}\n\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${D}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${P}\n    }\n\n    ${A}\n    ${(()=>k!=null?`let cOffset = ${k.broadcastedIndicesToOffset("vec2(m, n)",V)}; value += ${D}(uniforms.beta) * ${k.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:$}},jd=e=>{let r=e.transA,t=e.transB,u=e.alpha,s=e.beta;return{transA:r,transB:t,alpha:u,beta:s,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Vd=(e,r)=>{ty(e.inputs),e.compute(ry(e.inputs,r))}});var ny,iy,oy,Wd,Gd=oe(()=>{"use strict";Ce();Oe();Ee();ny=(e,r)=>{let t=e[0].dims,u=t,s=2,f=X.sizeToDimension(t,s),m=X.sizeFromDimension(t,s),d=Je(m),y=m/d,w=[t[0],t[1],y],C=["rank","type","type"],$=[{type:12,data:m},{type:12,data:y}];$.push(...se(w,w));let T=P=>{let A=Q("x",e[0].dataType,w.length,d),O=Q("scale",e[1].dataType,e[1].dims),R=Q("bias",e[2].dataType,e[2].dims),D=ne("output",e[0].dataType,w.length,d),k=[A,O,R,D],G=A.type.value,V=d===1?"f32":`vec${d}<f32>`,q=64,Y=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${V}, ${q}>;\n  const workgroupSize = ${q}u;\n  ${P.registerUniforms(Y).declareVariables(...k)}\n  ${P.mainStart(q)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${V}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${V}(${A.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${ft("workgroupShared[0]",d)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${V}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${V}(${A.get("batch","channel","h")}) - ${V}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${ft("workgroupShared[0]",d)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${r.epsilon}));\n    let channelScale = invStdDev * f32(${O.getByOffset("channel")});\n    let channelShift = f32(${R.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${A.get("batch","channel","h")} * ${G}(${V}(channelScale)) + ${G}(${V}(channelShift));\n      ${D.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${r.epsilon};${d}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:f},programUniforms:$}),getShaderSource:T}},iy=(e,r,t,u,s,f,m,d)=>{let y=Je(m),w=64,C=y===1?"vec2f":`mat2x${y}f`,$=y===1?"f32":`vec${y}f`,T=(Y,J)=>`${C}(${Y}, ${J})`,P=s*m/y,A=Math.ceil(f/w),O=["type"],R=[{type:12,data:A},{type:12,data:f},{type:12,data:Math.floor(m/y)},{type:12,data:Math.floor(f*m/y)}],D=Y=>{let J=Q("input",r.dataType,r.dims,y);return`\n  ${Y.declareVariables(J)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${C}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${Y.mainStart(w)}\n    let currentImageNumber = global_idx / ${w} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${w}) % uniforms.C;\n    let wgId = global_idx % ${w};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${ot("f32",y)};\n    var squaredSum = ${ot("f32",y)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${$}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${T("sum","squaredSum")};\n  }`},k=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${y}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[s,m,w,2],dataType:1}],dispatchGroup:{x:s*m/y},programUniforms:R}),getShaderSource:D},{inputs:[r],outputs:[-1]})[0],G=[{type:12,data:P},{type:12,data:f},{type:12,data:Math.floor(m/y)},{type:12,data:Math.floor(w*m/y)}],V=["type","type","type"],q=Y=>{let J=Q("scale",t.dataType,t.dims,y),ie=Q("bias",u.dataType,u.dims,y);return`\n  @group(0) @binding(0) var<storage, read> input : array<${C}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${J.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${ie.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${C}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${Y.mainStart()}\n    ${Y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${ot("f32",y)};\n    var squaredSum = ${ot("f32",y)};\n    for (var i: u32 = 0; i < ${w}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${w}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${d}));\n    let channelScale = invStdDev * ${$}(scale[currentChannelNumber]);\n    let channelShift = ${$}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${T("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${y};${d}`,inputDependencies:V},getRunData:()=>({outputs:[{dims:[s,m,2],dataType:1}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:G}),getShaderSource:q},{inputs:[k,t,u],outputs:[-1]})[0]},oy=(e,r,t)=>{let u=r[0].dims,s=u,f=u[0],m=u[u.length-1],d=X.sizeFromDimension(u,1)/m,y=Je(m),w=X.size(s)/y,C=[{type:12,data:d},{type:12,data:Math.floor(m/y)}],$=["type","type"],T=iy(e,r[0],r[1],r[2],f,d,m,t.epsilon),P=A=>{let O=Ve(r[0].dataType),R=y===1?"vec2f":`mat2x${y}f`,D=y===1?O:`vec${y}<${O}>`,k=Q("input",r[0].dataType,r[0].dims,y),G=ne("output",r[0].dataType,s,y);return`\n  @group(0) @binding(0) var<storage, read> input : array<${k.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${R}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${G.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${A.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${D}(scale[0]), ${D}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${y}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:C}),getShaderSource:P},{inputs:[r[0],T]})},Wd=(e,r)=>{r.format==="NHWC"?oy(e,e.inputs,r):e.compute(ny(e.inputs,r))}});var ay,sy,Hd,Ld=oe(()=>{"use strict";Ce();Oe();Ee();ay=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},sy=(e,r,t)=>{let u=e[0].dims,s=e[1],f=e[2],m=u,d=X.normalizeAxis(r.axis,u.length),y=X.sizeToDimension(u,d),w=X.sizeFromDimension(u,d),C=X.size(s.dims),$=f?X.size(f.dims):0;if(C!==w||f&&$!==w)throw new Error(`Size of X.shape()[axis:] == ${w}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${C} and bias size of ${$}`);let T=[];for(let V=0;V<u.length;++V)V<d?T.push(u[V]):T.push(1);let P=Je(w),A=["type","type"],O=[{type:12,data:y},{type:1,data:w},{type:12,data:Math.floor(w/P)},{type:1,data:r.epsilon}];f&&A.push("type");let R=t>1,D=t>2,k=V=>{let q=Ve(e[0].dataType),Y=[Q("x",e[0].dataType,e[0].dims,P),Q("scale",s.dataType,s.dims,P)];f&&Y.push(Q("bias",f.dataType,f.dims,P)),Y.push(ne("output",e[0].dataType,m,P)),R&&Y.push(ne("mean_data_output",1,T)),D&&Y.push(ne("inv_std_output",1,T));let J=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${V.registerUniforms(J).declareVariables(...Y)}\n  ${V.mainStart()}\n    ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${ot("f32",P)};\n    var mean_square_vector = ${ot("f32",P)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${St(q,P,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${ft("mean_vector",P)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${ft("mean_square_vector",P)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${St(q,P,"x[j + offset]")};\n      let f32scale = ${St(q,P,"scale[j]")};\n      output[j + offset] = ${Y[0].type.value}((f32input - mean) * inv_std_dev * f32scale\n        ${f?`+ ${St(q,P,"bias[j]")}`:""}\n      );\n    }\n\n    ${R?"mean_data_output[global_idx] = mean":""};\n    ${D?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},G=[{dims:m,dataType:e[0].dataType}];return R&&G.push({dims:T,dataType:1}),D&&G.push({dims:T,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${P};${t}`,inputDependencies:A},getRunData:()=>({outputs:G,dispatchGroup:{x:Math.ceil(y/64)},programUniforms:O}),getShaderSource:k}},Hd=(e,r)=>{ay(e.inputs),e.compute(sy(e.inputs,r,e.outputCount))}});var uy,ly,Fd,qd,Kd=oe(()=>{"use strict";Ce();Oe();nt();Ee();uy=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],u=t.dims.length;if(t.dims[u-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((r.k+r.blockSize-1)/r.blockSize),f=r.blockSize/8*r.bits,m=e[1];if(!X.areEqual(m.dims,[r.n,s,f]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let y=e[2].dims;if(X.size(y)!==r.n*s)throw new Error("scales input size error.");if(e.length===4){let C=e[3].dims,$=r.bits>4?r.n*s:r.n*Math.floor((s+1)/2);if(X.size(C)!==$)throw new Error("zeroPoints input size error.")}},ly=(e,r)=>{let t=e[0],u=e[1],s=e[2],f=t.dims.length,m=t.dims.slice(0,f-1).concat(r.n),d=X.size(m),y=[{type:12,data:d},{type:12,data:r.k},{type:12,data:r.n},{type:12,data:r.accuracyLevel},{type:12,data:r.bits},{type:12,data:r.blockSize}];y.push(...se(t.dims)),y.push(...se(X.convertShape(u.dims))),y.push(...se(s.dims)),e.length===4&&y.push(...se(X.convertShape(e[3].dims))),y.push(...se(m));let w=C=>{let $=Q("a",e[0].dataType,e[0].dims.length),T=Q("b",12,e[1].dims.length),P=Q("scales",e[2].dataType,e[2].dims.length),A=[$,T,P],O=e.length===4?Q("zero_points",12,e[3].dims.length):void 0;O&&A.push(O);let R=ne("output",e[0].dataType,m.length),D=[{name:"output_size",type:"u32"},{name:"k",type:"u32"},{name:"n",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],k=Math.floor((r.k+r.blockSize-1)/r.blockSize),V=r.blockSize/8*r.bits/4,q=Ve(e[0].dataType);return`\n        fn ortUnpack8x4snorm(value: u32) -> array<${q}, 8>{\n          var result = array<${q}, 8>();\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            result[i] = ${q}(extractBits(value, offset, count));\n            offset += count;\n          }\n          return result;\n        }\n        ${C.registerUniforms(D).declareVariables(...A,R)}\n        ${C.mainStart()}\n          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var value: ${q} = 0.0;\n          let output_indices = ${R.offsetToIndices("global_idx")};\n          var a_indices: ${$.type.indices} = output_indices;\n          var n = ${R.indicesGet("output_indices",f-1)};\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${O?`\n            var zero_point_index: u32 = n * ((${k} + 1) / 2) / 4;\n            var zero_point_word: u32 = ${O.getByOffset("zero_point_index")};\n            var zero_point_offset: u32 = 0;`:""}\n          var scale_idex = n * ${k};\n          var b_indices: ${T.type.indices};\n          ${T.indicesSet("b_indices","0","n")};\n          var block_offset: u32 = 0;\n          for (var block: u32 = 0; block < ${k}; block++) {\n            // The scale and zero points are computed per block.\n            let scale = ${P.getByOffset("scale_idex")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point: ${q} = ${O?`${q}(extractBits(zero_point_word, zero_point_offset, 4))`:8};\n            ${T.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block_offset;\n            for (var word: u32 = 0; word < ${V}; word++) {\n              ${T.indicesSet("b_indices","2","word")};\n              let b_value = ${T.getByIndices("b_indices")};\n              let b_quantized_values: array<${q}, 8> = ortUnpack8x4snorm(b_value);\n              // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n              var offset: u32 = word_offset;\n              for (var i: u32 = 0; i < 8; i++) {\n                ${$.indicesSet("a_indices",f-1,"offset")};\n                let a_value = ${$.getByIndices("a_indices")};\n                let b_quantized_value = b_quantized_values[i];\n                let b_dequantized_value = (b_quantized_value - zero_point) * scale;\n                value += a_value * b_dequantized_value;\n                offset++;\n              }\n              word_offset += 8;\n            }\n            scale_idex++;\n            ${O?`\n            if (zero_point_offset == 28) {\n              zero_point_offset = 0;\n              zero_point_index++;\n              zero_point_word = ${O.getByOffset("zero_point_index")};\n            } else {\n              zero_point_offset += 4;\n            }`:""}\n            block_offset += uniforms.block_size;\n          }\n          ${R.setByOffset("global_idx","value")};\n        }\n        `};return{name:"MatMulNBits",shaderCache:{hint:`${r.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:w}},Fd=(e,r)=>{uy(e.inputs,r),e.compute(ly(e.inputs,r))},qd=e=>Pe(e)});var dy,Zd,Yd,cy,so,Qd,Xd=oe(()=>{"use strict";Ce();Oe();nt();Xn();Fi();Ee();Er();dy=(e,r)=>{let t=e[0],u=e[1],s=e[2],f=e[3],m=e[4],d=e[5],y=e[6],w=e[7];if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let C=!1,$=t.dims[0],T=t.dims[1],P=t.dims.length===3?C?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],A=T,O=0,R=0,D=Math.floor(P/r.numHeads);if(y&&w){if(y.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(w.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');O=y.dims[2],R=y.dims[2]}else if(y||w)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let k;if(u){if(t.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(u.dims.length<3||u.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(t.dims[0]!==u.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(u.dims.length===3){if(u.dims[2]!==t.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');k=2,A=u.dims[1]}else if(u.dims.length===5){if(u.dims[2]!==r.numHeads||u.dims[3]!==2||u.dims[4]!==D)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(s)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');k=5,A=u.dims[1]}else{if(u.dims[1]!==r.numHeads||u.dims[3]!==D)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');k=0,A=u.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');k=3}if(f){if(f.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(s&&t.dims.length===5&&t.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let G=0;if(m){G=8;let ie=m.dims;throw ie.length===1?ie[0]===$?G=1:ie[0]===3*$+2&&(G=3):ie.length===2&&ie[0]===$&&ie[1]===A&&(G=5),G===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let V=!1,q=P;if(s){if(s.dims.length!==3&&s.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(t.dims[0]!==s.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(s.dims.length===3){if(A!==s.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');q=s.dims[2]}else{if(A!==s.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');q=s.dims[1]*s.dims[3],V=!0}}let Y=O+A,J=!1;if(m)throw new Error("Key padding mask is not supported");if(d)throw new Error("extraAddQk is not supported");if(y)throw new Error("pastKey is not supported");if(w)throw new Error("pastValue is not supported");return{batchSize:$,sequenceLength:T,pastSequenceLength:O,kvSequenceLength:A,totalSequenceLength:Y,maxSequenceLength:R,inputHiddenSize:0,hiddenSize:P,vHiddenSize:q,headSize:D,vHeadSize:Math.floor(q/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:G,scale:r.scale,broadcastResPosBias:J,passPastInKv:V,qkvFormat:k}},Zd=e=>Pe({...e}),Yd=Pe({perm:[0,2,1,3]}),cy=(e,r,t,u,s,f,m)=>{let d=[u,s,f],y=X.size(d),w=[{type:12,data:y},{type:12,data:m},{type:12,data:f}],C=$=>{let T=ne("qkv_with_bias",r.dataType,d),P=Q("qkv",r.dataType,d),A=Q("bias",t.dataType,d),O=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${$.registerUniforms(O).declareVariables(P,A,T)}\n  ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:C},{inputs:[r,t],outputs:[-1]})[0]},so=(e,r,t,u,s,f,m,d)=>{let y=f;if(m){if(u===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return y=cy(e,f,m,r,u,t*s,d),y=y.reshape([r,u,t,s]),e.compute(xt(y,Yd.perm),{inputs:[y],outputs:[-1]})[0]}else return f.dims.length===3&&(y=f.reshape([r,u,t,s])),e.compute(xt(y,Yd.perm),{inputs:[y],outputs:[-1]})[0]},Qd=(e,r)=>{let t=dy(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let u=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,s=so(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,e.inputs[0],e.inputs[3],0);if(u)return si(e,s,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r);let f=so(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,e.inputs[1],e.inputs[3],t.hiddenSize),m=so(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,e.inputs[2],e.inputs[3],2*t.hiddenSize);si(e,s,f,m,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],t,r)}});var fy,py,my,hy,gy,yy,by,vy,Jd,ec=oe(()=>{"use strict";Ce();Oe();Ee();fy=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},py=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n            k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${ve("uniforms.x_shape",s,r)})) {\n              break;\n            }\n            offset += k * i32(${ve("uniforms.x_strides",s,r)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${u}\n            value = x[offset];\n          }\n      `},my=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${ve("uniforms.x_shape",s,r)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${ve("uniforms.x_shape",s,r)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${ve("uniforms.x_strides",s,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},hy=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${ve("uniforms.x_shape",s,r)})) {\n                  k = i32(${ve("uniforms.x_shape",s,r)}) - 1;\n                }\n                offset += k * i32(${ve("uniforms.x_strides",s,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},gy=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n                if (k < 0)  {\n                  k += i32(${ve("uniforms.x_shape",s,r)}]);\n                }\n                if (k >= i32(${ve("uniforms.x_shape",s,r)})) {\n                  k -= i32(${ve("uniforms.x_shape",s,r)});\n                }\n                offset += k * i32(${ve("uniforms.x_strides",s,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},yy=(e,r,t)=>{switch(t.mode){case 0:return py(e,r,t.pads.length);case 1:return my(e,r,t.pads.length);case 2:return hy(e,r,t.pads.length);case 3:return gy(e,r,t.pads.length);default:throw new Error("Invalid mode")}},by=(e,r)=>{let t=X.padShape(e[0].dims.slice(),r.pads),u=e[0].dims,s=X.size(t),f=[{type:12,data:s},{type:12,data:r.pads}];r.mode===0&&f.push({type:e[0].dataType,data:r.value}),f.push(...se(e[0].dims,t));let m=["rank"],d=y=>{let w=ne("output",e[0].dataType,t.length),C=Q("x",e[0].dataType,u.length),$=C.type.value,T=yy(w,u.length,r),P=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&P.push({name:"constant_value",type:$}),`\n            ${y.registerUniforms(P).declareVariables(C,w)}\n            ${y.mainStart()}\n            ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${w.offsetToIndices("global_idx")};\n\n            var value = ${$}(0);\n            ${T}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(X.size(t)/64)},programUniforms:f}),getShaderSource:d}},vy=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),u=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,s=e[0].dims.length,f=new Int32Array(2*s).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let y=0;y<d.length;y++)f[Number(d[y])]=Number(t[y]),f[Number(d[y])+s]=Number(t[y+d.length])}else t.forEach((d,y)=>f[Number(y)]=Number(d));let m=[];return f.forEach(d=>m.push(d)),{mode:r.mode,value:u,pads:m}}else return r},Jd=(e,r)=>{fy(e.inputs);let t=vy(e.inputs,r);e.compute(by(e.inputs,t),{inputs:[0]})}});var yi,tc,rc,nc,ic,wy,_y,oc,ac,sc,uc,lc,dc,cc,fc,pc,mc,hc,gc,yc=oe(()=>{"use strict";Ar();Ce();Oe();Ee();yi=e=>{if(Ir.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},tc=(e,r,t)=>{let u=r.format==="NHWC",s=e.dims.slice();u&&s.splice(1,0,s.pop());let f=Object.hasOwnProperty.call(r,"dilations"),m=r.kernelShape.slice(),d=r.strides.slice(),y=f?r.dilations.slice():[],w=r.pads.slice();sr.adjustPoolAttributes(t,s,m,d,y,w);let C=sr.computePoolOutputShape(t,s,d,y,m,w,r.autoPad),$=Object.assign({},r);f?Object.assign($,{kernelShape:m,strides:d,pads:w,dilations:y,cacheKey:r.cacheKey}):Object.assign($,{kernelShape:m,strides:d,pads:w,cacheKey:r.cacheKey});let T=C.slice();return T.push(T.splice(1,1)[0]),[$,u?T:C]},rc=(e,r)=>{let t=r.format==="NHWC",u=X.size(e),s=X.size(r.kernelShape),f=[{type:12,data:u},{type:12,data:s}],m=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let d=r.kernelShape[r.kernelShape.length-1],y=r.strides[r.strides.length-1],w=r.pads[r.pads.length/2-1],C=r.pads[r.pads.length-1],$=!!(w+C);f.push({type:12,data:d},{type:12,data:y},{type:12,data:w},{type:12,data:C}),m.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let T=!1;if(r.kernelShape.length===2){let P=r.kernelShape[r.kernelShape.length-2],A=r.strides[r.strides.length-2],O=r.pads[r.pads.length/2-2],R=r.pads[r.pads.length-2];T=!!(O+R),f.push({type:12,data:P},{type:12,data:A},{type:12,data:O},{type:12,data:R}),m.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[f,m,!0,$,T]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let d=X.computeStrides(r.kernelShape);f.push({type:12,data:d},{type:12,data:r.pads},{type:12,data:r.strides}),m.push({name:"kernelStrides",type:"u32",length:d.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let y=r.pads.reduce((w,C)=>w+C);return[f,m,!!y,!1,!1]}},nc=(e,r,t,u,s,f,m,d,y,w,C,$)=>{let T=s.format==="NHWC",P=r.type.value,A=ne("output",r.type.tensor,u);if(s.kernelShape.length<=2){let O="",R="",D="",k=t-(T?2:1);if(C?O=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${k}] = indices[${k}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${k}] < 0 || xIndices[${k}]\n                      >= uniforms.x_shape[${k}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`:O=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${k}] = indices[${k}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`,s.kernelShape.length===2){let V=t-(T?3:2);$?R=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${V}] = indices[${V}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${V}] < 0 || xIndices[${V}] >= uniforms.x_shape[${V}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:R=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${V}] = indices[${V}] * uniforms.sh - uniforms.phStart + j;\n                `,D=`\n              }\n            `}return`\n            ${e.registerUniforms(y).declareVariables(r,A)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${A.offsetToIndices("global_idx")};\n              var xIndices = ${A.offsetToIndices("global_idx")};\n\n              var value = ${P}(${d});\n              var pad = 0;\n              ${R}\n              ${O}\n              ${D}\n              ${m}\n\n              output[global_idx] = value;\n            }`}else{if(T)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let O=s.kernelShape.length,R=s.pads.length,D="";return w?D=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${r.indicesToOffset("xIndices")}];\n                ${f}\n              }`:D=`\n              }\n              let x_val = x[${r.indicesToOffset("xIndices")}];\n              ${f}\n            `,`\n            ${e.registerUniforms(y).declareVariables(r,A)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${A.offsetToIndices("global_idx")};\n              var xIndices = ${A.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${O}>;\n\n              var value = ${P}(${d});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${O-1}u; j++) {\n                  offsets[j] = offset / ${ve("uniforms.kernelStrides","j",O)};\n                  offset -= offsets[j] * ${ve("uniforms.kernelStrides","j",O)};\n                }\n                offsets[${O-1}] = offset;\n\n                isPad = false;\n                for (var j = ${t-O}u; j < ${t}u; j++) {\n                  xIndices[j] = indices[j] * ${ve("uniforms.strides",`j - ${t-O}u`,O)}\n                    + offsets[j - ${t-O}u] - ${ve("uniforms.pads","j - 2u",R)};\n                  ${D}\n              }\n              ${m}\n\n              output[global_idx] = value;\n            }`}},ic=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,wy=e=>`${ic(e)};${e.countIncludePad}`,_y=e=>`${ic(e)};${e.storageOrder};${e.dilations}`,oc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ac=(e,r,t,u)=>{let[s,f]=tc(r,u,t),m=Q("x",r.dataType,r.dims.length),d=m.type.value,y="value += x_val;",w="";s.countIncludePad?w+=`value /= ${d}(uniforms.kernelSize);`:w+=`value /= ${d}(i32(uniforms.kernelSize) - pad);`;let[C,$,T,P,A]=rc(f,s);C.push(...se(r.dims,f));let O=["rank"];return{name:e,shaderCache:{hint:`${u.cacheKey};${T};${P};${A}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(X.size(f)/64)},programUniforms:C}),getShaderSource:R=>nc(R,m,r.dims.length,f.length,s,y,w,0,$,T,P,A)}},sc=e=>{let r=e.count_include_pad!==0,t=oc(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let u={countIncludePad:r,...t,cacheKey:""};return{...u,cacheKey:wy(u)}},uc=(e,r)=>{yi(e.inputs),e.compute(ac("AveragePool",e.inputs[0],!1,r))},lc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},dc=e=>{let r=e.format;return{format:r,...lc,cacheKey:r}},cc=(e,r)=>{yi(e.inputs),e.compute(ac("GlobalAveragePool",e.inputs[0],!0,r))},fc=(e,r,t,u)=>{let[s,f]=tc(r,u,t),m=`\n      value = max(x_val, value);\n    `,d="",y=Q("x",r.dataType,r.dims.length),w=["rank"],[C,$,T,P,A]=rc(f,s);return C.push(...se(r.dims,f)),{name:e,shaderCache:{hint:`${u.cacheKey};${T};${P};${A}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(X.size(f)/64)},programUniforms:C}),getShaderSource:O=>nc(O,y,r.dims.length,f.length,s,m,d,-1e5,$,T,P,A)}},pc=(e,r)=>{yi(e.inputs),e.compute(fc("MaxPool",e.inputs[0],!1,r))},mc=e=>{let r=e.storage_order,t=e.dilations,u=oc(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(u.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:r,dilations:t,...u,cacheKey:""};return{...s,cacheKey:_y(s)}},hc=e=>{let r=e.format;return{format:r,...lc,cacheKey:r}},gc=(e,r)=>{yi(e.inputs),e.compute(fc("GlobalMaxPool",e.inputs[0],!0,r))}});var Cy,Sy,bc,vc=oe(()=>{"use strict";Ar();Ce();Ee();Cy=(e,r,t)=>{let u=e===r,s=e<r&&t<0,f=e>r&&t>0;if(u||s||f)throw new Error("Range these inputs\' contents are invalid.")},Sy=(e,r,t,u)=>{let s=Math.abs(Math.ceil((r-e)/t)),f=[s],m=s,d=[{type:12,data:m},{type:u,data:e},{type:u,data:t},...se(f)],y=w=>{let C=ne("output",u,f.length),$=C.type.value,T=[{name:"outputSize",type:"u32"},{name:"start",type:$},{name:"delta",type:$}];return`\n        ${w.registerUniforms(T).declareVariables(C)}\n        ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${$}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${u}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:f,dataType:u}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:d})}},bc=e=>{let r=0,t=0,u=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],u=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],u=e.inputs[2].getFloat32Array()[0]),Ir.webgpu.validateInputContent&&Cy(r,t,u),e.compute(Sy(r,t,u,e.inputs[0].dataType),{inputs:[]})}});var xy,Iy,Ay,Ty,Ey,Py,Oy,ky,Ry,Dy,By,wc,My,zy,Uy,jy,Vy,_c,$c,Cc=oe(()=>{"use strict";Ce();Oe();nt();Ee();xy=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Iy=(e,r,t)=>{r.every(s=>s>=0&&s<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let u=new Array(t).fill(1);return r.forEach((s,f)=>u[s]=e[f]),u},Ay=(e,r,t,u,s,f)=>{let[m,d,y]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],w=e[0].dims.length;if(m>0&&e.length>m&&e[m].dims.length>0)e[m].getFloat32Array().forEach(C=>f.push(C));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length>0){if(e[d].getFloat32Array().forEach(C=>u.push(C)),u.length!==0&&u.length!==w&&t>=18&&u.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");xy(u,r),r.axes.length>0&&Iy(u,r.axes,w).forEach((C,$)=>u[$]=C)}if(y>0&&e.length>y&&(e[y].getBigInt64Array().forEach(C=>s.push(Number(C))),s.length!==w||t>=18&&s.length===r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(u.length!==r.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(s.length!==r.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof u<"u"&&typeof s<"u"&&u.length>0&&s.length>w)throw new Error("Resize requires only of scales or sizes to be specified")},Ty=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`return ${r}(xResized) / ${r}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${r}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${r}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${r}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +\n                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /\n                        ${r}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);\n                  const adjustment = ${r}(lengthResized) / outputWidth;\n                  const center = ${r}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Ey=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Py=(e,r,t)=>{let u=new Array(t).fill(0).concat(new Array(t).fill(1)),s=e.length===0?u:e.slice();return r.length>0?(r.forEach((f,m)=>{u[f]=s[m],u[m+t]=s[r.length+m]}),u):s},Oy=(e,r,t,u)=>{let s=[];if(t.length>0)if(u.length>0){if(e.forEach(f=>s.push(f)),Math.max(...u)>e.length)throw new Error("axes is out of bound");u.forEach((f,m)=>s[f]=t[m])}else t.forEach(f=>s.push(f));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");s=e.map((f,m)=>Math.round(f*r[m]))}return s},ky=(e,r,t)=>{let u=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(f=>r[f]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(f=>r[f]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let s=e.slice();return t.axes.length>0?(t.axes.forEach(f=>r[f]=u),t.axes.forEach(f=>s[f]=Math.round(e[f]*r[f]))):(r.fill(u,0,r.length),s.forEach((f,m)=>s[m]=Math.round(f*r[m]))),s},Ry=(e,r,t,u,s)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {\n      var original_indices: array<${e.type.value}, ${t.length}>;\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${ve("uniforms.scales","i",u)};\n        var roi_low = ${ve("uniforms.roi","i",s)};\n        var roi_hi = ${ve("uniforms.roi",`i + ${r.length}`,s)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${ve("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${ve("uniforms.output_shape","i",t.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Dy=(e,r,t,u,s,f,m)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${u.length}; i++) {\n        var output_index = ${r.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${ve("uniforms.scales","i",s)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${ve("uniforms.roi","i",f)};\n          var roi_hi = ${ve("uniforms.roi",`i + ${t.length}`,f)};\n          var input_shape_i = ${ve("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${ve("uniforms.output_shape","i",u.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${m} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,By=(e,r)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${ve("uniforms.input_shape","i",r.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,wc=(e,r,t,u)=>e.rank>u?`\n    ${e.indicesSet("input_indices",r,"channel")};\n    ${e.indicesSet("input_indices",t,"batch")};\n`:"",My=(e,r,t,u,s)=>{let[m,d,y,w]=t.length===2?[-1,0,1,-1]:[0,2,3,1],C=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${C} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",d,`max(0, min(row, ${t[d]} - 1))`)};\n      ${e.indicesSet("input_indices",y,`max(0, min(col, ${t[y]} - 1))`)};\n      ${wc(e,w,m,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${C} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${C} = originalIndices[${d}];\n      var col:${C} = originalIndices[${y}];\n      ${u?`if (row < 0 || row > (${t[d]} - 1) || col < 0 || col > (${t[y]} - 1)) {\n        return ${s};\n      }`:""};\n      row = max(0, min(row, ${t[d]} - 1));\n      col = max(0, min(col, ${t[y]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${t.length>2?`u32(originalIndices[${w}])`:"0"};\n      var batch: u32 =  ${t.length>2?`u32(originalIndices[${m}])`:"0"};\n      var x11: ${C} = getInputValue(batch, channel, row1, col1);\n      var x12: ${C} = getInputValue(batch, channel, row1, col2);\n      var x21: ${C} = getInputValue(batch, channel, row2, col1);\n      var x22: ${C} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${C} = abs(row - ${C}(row1));\n      var dx2: ${C} = abs(${C}(row2) - row);\n      var dy1: ${C} = abs(col - ${C}(col1));\n      var dy2: ${C} = abs(${C}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},zy=(e,r,t,u,s,f,m,d,y,w)=>{let C=t.length===2,$=!0,[T,P]=C?[0,1]:$?[2,3]:[1,2],A=e.type.value,O=R=>{let D=R===T?"row":"col";return`\n      fn ${D}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${A} {\n        var output_index = ${r.indicesGet("output_indices",R)};\n        var originalIdx: ${A} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[R]},\n        ${u[R]}, ${t[R]}, ${f[R]}, ${f[R]} + ${t.length});\n        var fractOriginalIdx: ${A} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${d} && (originalIdx < 0 || originalIdx > (${t[R]} - 1))) {\n          return ${y};\n        }\n        var data: array<${A}, 4> = array<${A}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${D}: ${A} = originalIdx + ${A}(i);\n          if (${D} < 0 || ${D} >= ${t[R]}) {\n            ${(()=>w?`coefs[i + 1] = 0.0;\n                        continue;`:d?`return ${y};`:`${D} = max(0, min(${D}, ${t[R]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",R,`u32(${D})`)};\n          data[i + 1] = ${R===T?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${O(T)};\n    ${O(P)};\n  fn getCubicInterpolationCoefs(s: ${A}) -> array<${A}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${A}, 4> = array<${A}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${A} = 1.0 - absS;\n    var twoMinusAbsS: ${A} = 2.0 - absS;\n    var onePlusAbsS: ${A} = 1.0 + absS;\n    coeffs[0] = ((${m} * onePlusAbsS - 5 * ${m}) * onePlusAbsS + 8 * ${m}) * onePlusAbsS - 4 * ${m};\n    coeffs[1] = ((${m} + 2) * absS - (${m} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${m} + 2) * oneMinusAbsS - (${m} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${m} * twoMinusAbsS - 5 * ${m}) * twoMinusAbsS + 8 * ${m}) * twoMinusAbsS - 4 * ${m};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${A}, 4>, coefs: array<${A}, 4>) -> ${A} {\n    var coefsSum: ${A} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${A} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Uy=(e,r,t,u,s)=>{let[m,d,y,w,C]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],$=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${$} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",d,`max(0, min(depth, ${t[d]} - 1))`)};\n      ${e.indicesSet("input_indices",y,`max(0, min(height, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",w,`max(0, min(width, ${t[w]} - 1))`)};\n      ${wc(e,C,m,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${$} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${$} = originalIndices[${d}];\n      var height:${$} = originalIndices[${y}];\n      var width:${$} = originalIndices[${w}];\n      ${u?`if (depth < 0 || depth > (${t[d]} - 1) || height < 0 || height > (${t[y]} - 1) || width < 0 || (width > ${t[w]} - 1)) {\n      return ${s};\n        }`:""};\n\n    depth = max(0, min(depth, ${t[d]} - 1));\n      height = max(0, min(height, ${t[y]} - 1));\n      width = max(0, min(width, ${t[w]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${t.length>3?`u32(originalIndices[${C}])`:"0"};\n      var batch: u32 =  ${t.length>3?`u32(originalIndices[${m}])`:"0"};\n\n      var x111: ${$} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${$} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${$} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${$} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${$} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${$} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${$} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${$} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${$} = abs(depth - ${$}(depth1));\n      var dx2: ${$} = abs(${$}(depth2) - depth);\n      var dy1: ${$} = abs(height - ${$}(height1));\n      var dy2: ${$} = abs(${$}(height2) - height);\n      var dz1: ${$} = abs(width - ${$}(width1));\n      var dz2: ${$} = abs(${$}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},jy=(e,r,t,u,s,f)=>{let m=e.dims,d=Py(f,r.axes,m.length),y=Oy(m,u,s,r.axes),w=u.slice();u.length===0&&(w=m.map((k,G)=>k===0?1:y[G]/k),r.keepAspectRatioPolicy!=="stretch"&&(y=ky(m,w,r)));let C=ne("output",e.dataType,y.length),$=Q("input",e.dataType,m.length),T=X.size(y),P=m.length===y.length&&m.every((k,G)=>k===y[G]),A=r.coordinateTransformMode==="tf_crop_and_resize",O=r.extrapolationValue,R=$.type.value,D=k=>`\n      ${P?"":`\n      ${Ty(r.coordinateTransformMode,R)};\n      ${(()=>{switch(r.mode){case"nearest":return`\n              ${By($,m)};\n              ${Ey(r.nearestMode,t,R)};\n              ${Dy($,C,m,y,w.length,d.length,A)};\n              `;case"linear":return`\n              ${Ry(C,m,y,w.length,d.length)};\n              ${(()=>{if(m.length===2||m.length===4)return`${My($,C,m,A,O)}`;if(m.length===3||m.length===5)return`${Uy($,C,m,A,O)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(m.length===2||m.length===4)return`${zy($,C,m,y,w,d,r.cubicCoeffA,A,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${k.registerUniform("output_size","u32").registerUniform("scales","f32",w.length).registerUniform("roi","f32",d.length).declareVariables($,C)}\n      ${k.mainStart()}\n        ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${P?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${C.offsetToIndices("global_idx")};\n        var input_indices: ${$.type.indices};\n        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${$.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${r.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${m.length===2||m.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${w.length>0?w:""}|${s.length>0?s:""}|${d.length>0?d:""}|${P}|${m}`,inputDependencies:["rank"]},getShaderSource:D,getRunData:()=>({outputs:[{dims:y,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(T/64)},programUniforms:[{type:12,data:T},{type:1,data:w},{type:1,data:d},...se(m,y)]})}},Vy=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},_c=(e,r)=>{let t=[],u=[],s=[],f=Vy(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Ay(e.inputs,r,f,t,u,s),e.compute(jy(e.inputs[0],r,f,t,u,s),{inputs:[0]})},$c=e=>{let r=e.antialias,t=e.axes,u=e.coordinateTransformMode,s=e.cubicCoeffA,f=e.excludeOutside!==0,m=e.extrapolationValue,d=e.keepAspectRatioPolicy,y=e.mode,w=e.nearestMode===""?"simple":e.nearestMode;return Pe({antialias:r,axes:t,coordinateTransformMode:u,cubicCoeffA:s,excludeOutside:f,extrapolationValue:m,keepAspectRatioPolicy:d,mode:y,nearestMode:w})}});var Ny,Wy,Sc,xc=oe(()=>{"use strict";Ce();Oe();Ee();Ny=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],u=e[2];if(r.dataType!==t.dataType||r.dataType!==u.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let s=r.dims[r.dims.length-1],f=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==f)throw new Error("Skip must have the same sequence length as input");if(u.dims.length!==1)throw new Error("Gamma must be 1D");if(u.dims[u.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let m=e[3];if(m.dims.length!==1)throw new Error("Beta must be 1D");if(m.dims[m.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let m=e[4];if(m.dims.length!==1)throw new Error("Bias must be 1D");if(m.dims[m.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},Wy=(e,r,t,u)=>{let s=e[0].dims,f=X.size(s),m=s,d=f,y=s.slice(-1)[0],w=u?s.slice(0,-1).concat(1):[],C=e.length>3,$=e.length>4,T=u&&t>1,P=u&&t>2,A=t>3,O=Je(y),R=[{type:12,data:d},{type:12,data:O},{type:12,data:y},{type:1,data:r.epsilon}],D=G=>{let V=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],q=[Q("x",e[0].dataType,e[0].dims,O),Q("skip",e[1].dataType,e[1].dims,O),Q("gamma",e[2].dataType,e[2].dims,O)];C&&q.push(Q("beta",e[3].dataType,e[3].dims,O)),$&&q.push(Q("bias",e[4].dataType,e[4].dims,O)),q.push(ne("output",e[0].dataType,m,O)),T&&q.push(ne("mean_output",1,w)),P&&q.push(ne("inv_std_output",1,w)),A&&q.push(ne("input_skip_bias_sum",e[0].dataType,m,O));let Y=Ve(e[0].dataType);return`\n\n      ${G.registerUniforms(V).declareVariables(...q)}\n\n      ${G.mainStart()}\n        ${G.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${ot("f32",O)};\n        var squareSum = ${ot("f32",O)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${$?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${A?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${St(Y,O,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${ft("sum",O)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${ft("squareSum",O)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${T?"mean_output[global_idx] = mean;":""}\n        ${P?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${Y}(mean)) * ${Y}(inv_std_dev) * gamma[i] + ${C?"beta[i]":"0.0"};\n        }\n      }`},k=[{dims:m,dataType:e[0].dataType}];return t>1&&k.push({dims:w,dataType:1}),t>2&&k.push({dims:w,dataType:1}),t>3&&k.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${O};${T};${P};${A}`,inputDependencies:e.map((G,V)=>"type")},getShaderSource:D,getRunData:()=>({outputs:k,dispatchGroup:{x:Math.ceil(d/y/64)},programUniforms:R})}},Sc=(e,r)=>{Ny(e.inputs);let u=[0];e.outputCount>1&&u.push(-3),e.outputCount>2&&u.push(-3),e.outputCount>3&&u.push(3),e.compute(Wy(e.inputs,r,e.outputCount,!1),{outputs:u})}});var Gy,bi,Hy,Ic,Ly,Fy,Ac,Tc,Ec=oe(()=>{"use strict";Ce();Oe();nt();Ee();Gy=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,u)=>{if(e[u+1].dataType!==6&&e[u+1].dataType!==7)throw new Error(`Input ${u} must be an array of int32 or int64`)})},bi=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(u=>t.push(Number(u)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(u=>t.push(Number(u)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},Hy=(e,r)=>{if(e.length>1){let t=bi(e,1),u=bi(e,2),s=bi(e,3);return s.length===0&&(s=[...Array(e[0].dims.length).keys()]),Pe({starts:t,ends:u,axes:s})}else return r},Ic=(e,r,t,u,s)=>{let f=e;return e<0&&(f+=t[u[r]]),s[r]<0?Math.max(0,Math.min(f,t[u[r]]-1)):Math.max(0,Math.min(f,t[u[r]]))},Ly=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${t.length}; i >= 0; i--) {\n            let input_shape_i = ${ve("uniforms.input_shape","i",t.length)};\n            let steps_i = ${ve("uniforms.steps","i",t.length)};\n            let signs_i = ${ve("uniforms.signs","i",t.length)};\n            let starts_i = ${ve("uniforms.starts","i",t.length)};\n            var output_index = ${r.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Fy=(e,r)=>{let t=e[0].dims,u=X.size(t),s=r.axes.length>0?X.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],f=bi(e,4);f.forEach(D=>D!==0||(()=>{throw new Error("step cannot be 0")})),f.length===0&&(f=Array(s.length).fill(1));let m=r.starts.map((D,k)=>Ic(D,k,t,s,f)),d=r.ends.map((D,k)=>Ic(D,k,t,s,f));if(s.length!==m.length||s.length!==d.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==t.length)for(let D=0;D<t.length;++D)s.includes(D)||(m.splice(D,0,0),d.splice(D,0,t[D]),f.splice(D,0,1));let y=f.map(D=>Math.sign(D));f.forEach((D,k,G)=>{if(D<0){let V=(d[k]-m[k])/D,q=m[k],Y=q+V*f[k];m[k]=Y,d[k]=q,G[k]=-D}});let w=t.slice(0);s.forEach((D,k)=>{w[D]=Math.ceil((d[D]-m[D])/f[D])});let C={dims:w,dataType:e[0].dataType},$=ne("output",e[0].dataType,w.length),T=Q("input",e[0].dataType,e[0].dims.length),P=X.size(w),A=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:m.length},{name:"signs",type:"i32",length:y.length},{name:"steps",type:"u32",length:f.length}],O=[{type:12,data:P},{type:12,data:m},{type:6,data:y},{type:12,data:f},...se(e[0].dims,w)],R=D=>`\n      ${D.registerUniforms(A).declareVariables(T,$)}\n        ${Ly(T,$,t)}\n        ${D.mainStart()}\n          ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${$.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${$.setByOffset("global_idx",T.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${y.length}_${m.length}_${f.length}`,inputDependencies:["rank"]},getShaderSource:R,getRunData:()=>({outputs:[C],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:O})}},Ac=(e,r)=>{Gy(e.inputs,r);let t=Hy(e.inputs,r);e.compute(Fy(e.inputs,t),{inputs:[0]})},Tc=e=>{let r=e.starts,t=e.ends,u=e.axes;return Pe({starts:r,ends:t,axes:u})}});var qy,Ky,Pc,Oc,kc=oe(()=>{"use strict";Ce();Oe();nt();Ee();qy=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Ky=(e,r)=>{let t=e.dims,u=X.size(t),s=64,f=r.axis;if(f<0&&(f=t.length+f),f<t.length-1)throw new Error("softmax only supports last axis for now.");let m=t[f],d=u/m,y=Je(m),w=m/y,C=(R,D)=>D===4?`max(max(${R}.x, ${R}.y), max(${R}.z, ${R}.w))`:D===2?`max(${R}.x, ${R}.y)`:D===3?`max(max(${R}.x, ${R}.y), ${R}.z)`:R,$=Q("x",e.dataType,e.dims,y),T=ne("result",e.dataType,e.dims,y),P=$.type.value,A=Ve(e.dataType)==="f32"?`var threadMax = ${P}(-3.402823e+38f);`:`var threadMax = ${P}(-65504.0h);`,O=R=>`\n      var<workgroup> rowMaxShared : ${P};\n      var<workgroup> rowSumShared : ${P};\n      var<workgroup> threadShared : array<${P}, ${s}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${P} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${P}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${R.registerUniform("packedCols","i32").declareVariables($,T)}\n      ${R.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${s};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${A}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${P}(${C("threadShared[0]",y)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${P}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${P}(${ft("threadShared[0]",y)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${y}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.dataType}],dispatchGroup:{x:d},programUniforms:[{type:12,data:w}]}),getShaderSource:O}},Pc=(e,r)=>{qy(e.inputs),e.compute(Ky(e.inputs[0],r))},Oc=e=>Pe({axis:e.axis})});var Yy,Zy,Qy,Xy,Jy,Rc,Dc,Bc=oe(()=>{"use strict";Ce();Oe();nt();Ee();Yy=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Zy=(e,r)=>{let t=[],u=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),u=t.length),Pe({numOutputs:u,axis:r.axis,splitSizes:t})},Qy=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${ve("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Xy=e=>{let r=e.length,t=[];for(let u=0;u<r;++u){let s=e[u].setByIndices("indices","input[global_idx]");r===1?t.push(s):u===0?t.push(`if (output_number == ${u}u) { ${s} }`):u===r-1?t.push(`else { ${s} }`):t.push(`else if (output_number == ${u}) { ${s} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${t.join(`\n`)}\n      }`},Jy=(e,r)=>{let t=e[0].dims,u=X.size(t),s=e[0].dataType,f=X.normalizeAxis(r.axis,t.length),m=new Array(r.numOutputs),d=Q("input",s,t.length),y=new Array(r.numOutputs),w=[],C=[],$=0,T=[{type:12,data:u}];for(let A=0;A<r.numOutputs;A++){$+=r.splitSizes[A],y[A]=$;let O=t.slice();O[r.axis]=r.splitSizes[A],C.push(O),m[A]=ne(`output${A}`,s,O.length),w.push({dims:C[A],dataType:e[0].dataType})}T.push({type:12,data:y},...se(t,...C));let P=A=>`\n  ${A.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",y.length).declareVariables(d,...m)}\n  ${Qy(y.length)}\n  ${Xy(m)}\n\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${d.offsetToIndices("global_idx")};\n    var index = ${d.indicesGet("indices",f)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${ve("uniforms.size_in_split_axis","output_number - 1u",y.length)};\n      ${d.indicesSet("indices",f,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:P,getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:T})}},Rc=(e,r)=>{Yy(e.inputs);let t=e.inputs.length===1?r:Zy(e.inputs,r);e.compute(Jy(e.inputs,t),{inputs:[0]})},Dc=e=>{let r=e.axis,t=e.splitSizes,u=e.numOutputs<0?t.length:e.numOutputs;if(u!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Pe({axis:r,numOutputs:u,splitSizes:t})}});var Mc,e0,t0,r0,zc,Uc=oe(()=>{"use strict";Ce();Oe();Ee();Mc=e=>Array.from(e.getBigInt64Array(),Number),e0=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Mc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},t0=(e,r)=>{let t=[];for(let u=0;u<e.length;++u)t.push(e[u]*r[u]);return t},r0=e=>{let r=e[0].dims,t=Mc(e[1]),u=t0(r,t),s=X.size(u),f=e[0].dataType,m=Q("input",f,r.length),d=ne("output",f,u.length),y=w=>`\n      const inputShape = ${m.indices(...r)};\n      ${w.registerUniform("output_size","u32").declareVariables(m,d)}\n      ${w.mainStart()}\n      ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${d.offsetToIndices("global_idx")};\n      var input_indices: ${m.type.indices};\n      for (var i = 0; i < ${r.length}; i++) {\n        let input_dim_i = ${m.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${d.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${m.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${d.setByOffset("global_idx",m.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...se(e[0].dims,u)]}),getShaderSource:y}},zc=e=>{e0(e.inputs),e.compute(r0(e.inputs),{inputs:[0]})}});var n0,i0,jc,Vc=oe(()=>{"use strict";Ce();Oe();Ee();n0=(e,r,t,u,s)=>{let f=ne("output_data",s,t.length,4),m=Q("a_data",r[1].dataType,r[1].dims.length,4),d=Q("b_data",r[2].dataType,r[2].dims.length,4),y=Q("c_data",r[0].dataType,r[0].dims.length,4),w,C=($,T,P)=>`select(${T}, ${$}, ${P})`;if(!u)w=f.setByOffset("global_idx",C(m.getByOffset("global_idx"),d.getByOffset("global_idx"),y.getByOffset("global_idx")));else{let $=(T,P,A="")=>{let O=`a_data[index_a${P}][component_a${P}]`,R=`b_data[index_b${P}][component_b${P}]`,D=`bool(c_data[index_c${P}] & (0xffu << (component_c${P} * 8)))`;return`\n            let output_indices${P} = ${f.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offset_a${P} = ${m.broadcastedIndicesToOffset(`output_indices${P}`,f)};\n            let offset_b${P} = ${d.broadcastedIndicesToOffset(`output_indices${P}`,f)};\n            let offset_c${P} = ${y.broadcastedIndicesToOffset(`output_indices${P}`,f)};\n            let index_a${P} = offset_a${P} / 4u;\n            let index_b${P} = offset_b${P} / 4u;\n            let index_c${P} = offset_c${P} / 4u;\n            let component_a${P} = offset_a${P} % 4u;\n            let component_b${P} = offset_b${P} % 4u;\n            let component_c${P} = offset_c${P} % 4u;\n            ${T}[${P}] = ${A}(${C(O,R,D)});\n          `};s===9?w=`\n            var data = vec4<u32>(0);\n            ${$("data",0,"u32")}\n            ${$("data",1,"u32")}\n            ${$("data",2,"u32")}\n            ${$("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`\n            ${$("output_data[global_idx]",0)}\n            ${$("output_data[global_idx]",1)}\n            ${$("output_data[global_idx]",2)}\n            ${$("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(y,m,d,f)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${w}\n      }`},i0=e=>{let r=e[1].dims,t=e[2].dims,u=e[0].dims,s=e[1].dataType,f=!(X.areEqual(r,t)&&X.areEqual(t,u)),m=r,d=X.size(r);if(f){let w=Ot.calcShape(Ot.calcShape(r,t,!1),u,!1);if(!w)throw new Error("Can\'t perform where op on the given tensors");m=w,d=X.size(m)}let y=Math.ceil(d/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:w=>n0(w,e,m,f,s),getRunData:()=>({outputs:[{dims:m,dataType:s}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:y},...se(u,r,t,m)]})}},jc=e=>{e.compute(i0(e.inputs))}});var Nc,Wc=oe(()=>{"use strict";rl();Fi();ol();sl();Ll();rd();od();Xi();vd();$d();Ad();Pd();kd();Bd();Ud();Nd();Gd();Ld();eo();Kd();Xd();ec();yc();vc();oi();Cc();xc();Ec();kc();Bc();Uc();Er();di();Vc();Nc=new Map([["Abs",[ul]],["Acos",[ll]],["Acosh",[dl]],["Add",[Fl]],["ArgMax",[tl,Li]],["ArgMin",[el,Li]],["Asin",[cl]],["Asinh",[fl]],["Atan",[pl]],["Atanh",[ml]],["Attention",[nl]],["AveragePool",[uc,sc]],["BatchNormalization",[il]],["BiasAdd",[al]],["BiasSplitGelu",[Hl]],["Cast",[gl,hl]],["Ceil",[bl]],["Clip",[yl]],["Concat",[nd,id]],["Conv",[ro,to]],["ConvTranspose",[bd,yd]],["Cos",[vl]],["Cosh",[wl]],["CumSum",[wd,_d]],["Div",[ql]],["Einsum",[xd,Id]],["Elu",[_l,ui]],["Equal",[Kl]],["Erf",[$l]],["Exp",[Cl]],["Expand",[Ed]],["FastGelu",[Od]],["Floor",[Sl]],["FusedConv",[ro,to]],["Gather",[Dd,Rd]],["GatherElements",[zd,Md]],["Gelu",[xl]],["Gemm",[Vd,jd]],["GlobalAveragePool",[cc,dc]],["GlobalMaxPool",[gc,hc]],["Greater",[Xl]],["GreaterOrEqual",[ed]],["HardSigmoid",[Rl,kl]],["InstanceNormalization",[Wd]],["LayerNormalization",[Hd]],["LeakyRelu",[Il,ui]],["Less",[Jl]],["LessOrEqual",[td]],["Log",[Wl]],["MatMul",[dd]],["MatMulNBits",[Fd,qd]],["MaxPool",[pc,mc]],["Mul",[Yl]],["MultiHeadAttention",[Qd,Zd]],["Neg",[Tl]],["Not",[Al]],["Pad",[Jd]],["Pow",[Zl]],["Range",[bc]],["Reciprocal",[El]],["ReduceMin",[Ku]],["ReduceMean",[Gu]],["ReduceMax",[qu]],["ReduceSum",[Zu]],["ReduceProd",[Yu]],["ReduceL1",[Hu]],["ReduceL2",[Lu]],["ReduceLogSum",[Xu]],["ReduceLogSumExp",[Fu]],["ReduceSumSquare",[Qu]],["Relu",[Pl]],["Resize",[_c,$c]],["Sigmoid",[Ol]],["Sin",[Dl]],["Sinh",[Bl]],["Slice",[Ac,Tc]],["SkipLayerNormalization",[Sc]],["Split",[Rc,Dc]],["Sqrt",[Ml]],["Softmax",[Pc,Oc]],["Sub",[Ql]],["Tan",[zl]],["Tanh",[jl]],["ThresholdedRelu",[Nl,ui]],["Tile",[zc]],["Transpose",[Pu,Ou]],["Where",[jc]]])});var vi,Gc=oe(()=>{"use strict";Ar();Ft();Ee();vi=class{constructor(r){this.backend=r;this.repo=new Map,this.attributesBound=!1}getArtifact(r){return this.repo.get(r)}setArtifact(r,t){this.repo.set(r,t)}run(r,t,u,s,f){ar(r.programInfo.name);let m=this.backend.device,d=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let y=[];for(let C of t)y.push({binding:y.length,resource:{buffer:C.buffer}});for(let C of u)y.push({binding:y.length,resource:{buffer:C.buffer}});f&&y.push({binding:y.length,resource:f});let w=m.createBindGroup({layout:r.computePipeline.getBindGroupLayout(0),entries:y,label:r.programInfo.name});if(this.backend.sessionStatus==="capturing"){let C={kernelId:this.backend.currentKernelId,computePipeline:r.computePipeline,bindGroup:w,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(C)}d.setPipeline(r.computePipeline),d.setBindGroup(0,w),d.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Lt(r.programInfo.name)}dispose(){}build(r,t){ar(r.name);let u=this.backend.device,s=[];u.features.has("shader-f16")&&s.push("enable f16;");let f=Tu(t),m=r.getShaderSource(f),d=`${s.join(`\n`)}\n${f.additionalImplementations}\n${m}`,y=u.createShaderModule({code:d,label:r.name});He("verbose",()=>`[WebGPU] ${r.name} shader code: ${d}`);let w=u.createComputePipeline({compute:{module:y,entryPoint:"main"},layout:"auto",label:r.name});return Lt(r.name),{programInfo:r,computePipeline:w}}normalizeDispatchGroupSize(r){let t=typeof r=="number"?r:r.x,u=typeof r=="number"?1:r.y||1,s=typeof r=="number"?1:r.z||1,f=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=f&&u<=f&&s<=f)return[t,u,s];let m=t*u*s,d=Math.ceil(Math.sqrt(m));if(d>f){if(d=Math.ceil(Math.cbrt(m)),d>f)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[d,d,d]}else return[d,d,1]}}});var o0,a0,wi,Hc=oe(()=>{"use strict";Ar();Ce();Ft();Cu();Au();Wc();Gc();o0=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let u=0;u<e.length;++u){let s=e[u].dataType;switch(r[u]){case"none":{t.push("");break}case"type":{t.push(`${s}`);break}case"rank":{let f=e[u].dims.length;t.push(`${s};${f}`);break}case"dims":{let f=e[u].dims.join(",");t.push(`${s};${f}`);break}default:throw new Error(`unsupported input dependency: ${r[u]}`)}}return t.join("|")},a0=(e,r,t)=>{let u=e.name;return e.shaderCache?.hint&&(u+="["+e.shaderCache.hint+"]"),u+=":"+t+`:${o0(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,u},wi=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let r=this.kernelCustomData.get(this.currentKernelId);return r||(r={},this.kernelCustomData.set(this.currentKernelId,r)),r}async initialize(r,t){this.env=r;let u=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:u};t.features.has("chromium-experimental-timestamp-query-inside-passes")?u.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&u.push("timestamp-query"),t.features.has("shader-f16")&&u.push("shader-f16"),this.device=await t.requestDevice(s),this.gpuDataManager=Iu(this),this.programManager=new vi(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,_u(r.logLevel,!!r.debug),this.device.onuncapturederror=f=>{f.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${f.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let r=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=r.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;ar(),this.endComputePass();let r;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),r=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(r,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,r,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&r.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(r.getMappedRange()),u=this.pendingQueries.get(r);for(let s=0;s<t.length/2;s++){let f=u[s],m=f.kernelId,d=this.kernels.get(m),y=d.kernelType,w=d.kernelName,C=f.programName,$=f.inputTensorViews,T=f.outputTensorViews,P=t[s*2],A=t[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=P);let O=Number(P-this.queryTimeBase),R=Number(A-this.queryTimeBase);if(!Number.isSafeInteger(O)||!Number.isSafeInteger(R))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:$.map(D=>({dims:D.dims,dataType:Ht(D.dataType)})),outputsMetadata:T.map(D=>({dims:D.dims,dataType:Ht(D.dataType)})),kernelId:m,kernelType:y,kernelName:w,programName:C,startTime:O,endTime:R});else{let D="";$.forEach((G,V)=>{D+=`input[${V}]: [${G.dims}] | ${Ht(G.dataType)}, `});let k="";T.forEach((G,V)=>{k+=`output[${V}]: [${G.dims}] | ${Ht(G.dataType)}, `}),console.log(`[profiling] kernel "${m}|${y}|${w}|${C}" ${D}${k}execution time: ${R-O} ns`)}Bi("GPU",`${C}::${P}::${A}`)}r.unmap(),this.pendingQueries.delete(r)}),Lt()}run(r,t,u,s,f){ar(r.name);let m=[];for(let k=0;k<t.length;++k){let G=t[k].data;if(G===0)continue;let V=this.gpuDataManager.get(G);if(!V)throw new Error(`no GPU data for input: ${G}`);m.push(V)}let{outputs:d,dispatchGroup:y,programUniforms:w}=r.getRunData(t),C=u.length===0?d.map((k,G)=>G):u;if(C.length!==d.length)throw new Error(`Output size ${C.length} must be equal to ${d.length}.`);let $=[],T=[];for(let k=0;k<d.length;++k){if(!Number.isInteger(C[k])||C[k]<-3||C[k]>=d.length)throw new Error(`Invalid output index: ${C[k]}`);if(C[k]===-3)continue;let G=C[k]===-1,V=C[k]===-2,q=G||V?f(d[k].dataType,d[k].dims):s(C[k],d[k].dataType,d[k].dims);if($.push(q),q.data===0)continue;let Y=this.gpuDataManager.get(q.data);if(!Y)throw new Error(`no GPU data for output: ${q.data}`);if(G&&this.temporaryData.push(Y),V){let J=this.kernelPersistentData.get(this.currentKernelId);J||(J=[],this.kernelPersistentData.set(this.currentKernelId,J)),J.push(Y)}T.push(Y)}if(m.length!==t.length||T.length!==$.length){if(T.length===0)return Lt(r.name),$;throw new Error(`Program ${r.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let P;if(w){let k=0,G=[];w.forEach(J=>{let ie=typeof J.data=="number"?[J.data]:J.data;if(ie.length===0)return;let ge=J.type===10?2:4,L,ue;J.type===10?(ue=ie.length>4?16:ie.length>2?8:ie.length*ge,L=ie.length>4?16:ge*ie.length):(ue=ie.length<=2?ie.length*ge:16,L=16),k=Math.ceil(k/ue)*ue,G.push(k);let je=J.type===10?8:4;k+=ie.length>4?Math.ceil(ie.length/je)*L:ie.length*ge});let V=16;k=Math.ceil(k/V)*V;let q=new ArrayBuffer(k);w.forEach((J,ie)=>{let ge=G[ie],L=typeof J.data=="number"?[J.data]:J.data;if(J.type===6)new Int32Array(q,ge,L.length).set(L);else if(J.type===12)new Uint32Array(q,ge,L.length).set(L);else if(J.type===10)new Uint16Array(q,ge,L.length).set(L);else if(J.type===1)new Float32Array(q,ge,L.length).set(L);else throw new Error(`Unsupported uniform type: ${Ht(J.type)}`)});let Y=this.gpuDataManager.create(k,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Y.buffer,0,q,0,k),this.gpuDataManager.release(Y.id),P={offset:0,size:k,buffer:Y.buffer}}let A=this.programManager.normalizeDispatchGroupSize(y),O=A[1]===1&&A[2]===1,R=a0(r,t,O),D=this.programManager.getArtifact(R);if(D||(D=this.programManager.build(r,A),this.programManager.setArtifact(R,D),He("info",()=>`[artifact] key: ${R}, programName: ${r.name}`)),He("info",()=>`[ProgramManager] run "${r.name}" (key=${R}) with ${A[0]}x${A[1]}x${A[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let k={kernelId:this.currentKernelId,programName:D.programInfo.name,inputTensorViews:t,outputTensorViews:$};this.pendingKernels.push(k),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(k)}return this.programManager.run(D,m,T,A,P),Lt(r.name),$}upload(r,t){this.gpuDataManager.upload(r,t)}memcpy(r,t){this.gpuDataManager.memcpy(r,t)}async download(r,t){await this.gpuDataManager.download(r,t)}alloc(r){return this.gpuDataManager.create(r).id}free(r){return this.gpuDataManager.release(r)}createKernel(r,t,u,s){let f=Nc.get(r);if(!f)throw new Error(`kernel not implemented: ${r}`);let m={kernelType:r,kernelName:s,kernelEntry:f[0],attributes:[f[1],u]};this.kernels.set(t,m)}releaseKernel(r){let t=this.kernelPersistentData.get(r);if(t){for(let u of t)this.gpuDataManager.release(u.id);this.kernelPersistentData.delete(r)}this.kernelCustomData.delete(r),this.kernels.delete(r)}computeKernel(r,t,u){let s=this.kernels.get(r);if(!s)throw new Error(`kernel not created: ${r}`);let f=s.kernelType,m=s.kernelName,d=s.kernelEntry,y=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${f}] ${m}" is not allowed to be called recursively`);this.currentKernelId=r,y[0]&&(y[1]=y[0](y[1]),y[0]=void 0),He("info",()=>`[WebGPU] Start to run kernel "[${f}] ${m}"...`);let w=this.env.debug;this.temporaryData=[];try{return w&&this.device.pushErrorScope("validation"),d(t,y[1]),0}catch(C){return u.push(Promise.resolve(`[WebGPU] Kernel "[${f}] ${m}" failed. ${C}`)),1}finally{w&&u.push(this.device.popErrorScope().then(C=>C?`GPU validation error for kernel "[${f}] ${m}": ${C.message}`:null));for(let C of this.temporaryData)this.gpuDataManager.release(C.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(r,t,u,s){let f=this.sessionExternalDataMapping.get(r);f||(f=new Map,this.sessionExternalDataMapping.set(r,f));let m=f.get(t),d=this.gpuDataManager.registerExternalBuffer(u,s,m?.[1]);return f.set(t,[d,u]),d}unregisterBuffers(r){let t=this.sessionExternalDataMapping.get(r);t&&(t.forEach(u=>this.gpuDataManager.unregisterExternalBuffer(u[1])),this.sessionExternalDataMapping.delete(r))}getBuffer(r){let t=this.gpuDataManager.get(r);if(!t)throw new Error(`no GPU data for buffer: ${r}`);return t.buffer}createDownloader(r,t,u){return async()=>{let s=await Ui(this,r,t);return $u(s.buffer,u)}}writeTimestamp(r){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,r)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){He("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){He("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){He("info","replay"),this.sessionStatus="replaying";let r=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),u=r.length;this.pendingKernels=[];for(let s=0;s<u;s++){let f=this.getComputePassEncoder(),m=r[s];this.writeTimestamp(this.pendingDispatchNumber*2),f.setPipeline(m.computePipeline),f.setBindGroup(0,m.bindGroup),f.dispatchWorkgroups(...m.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(r){this.unregisterBuffers(r),this.capturedCommandList.has(r)&&this.capturedCommandList.delete(r),this.capturedPendingKernels.has(r)&&this.capturedPendingKernels.delete(r),this.gpuDataManager.onReleaseSession(r)}onRunStart(r){this.currentSessionId=r,this.setQueryType()}}});var Lc={};Hn(Lc,{init:()=>s0});var mn,uo,s0,Fc=oe(()=>{"use strict";Ce();Hc();Ft();Oe();mn=class e{constructor(r,t,u,s){this.module=r;this.dataType=t;this.data=u;this.dims=s}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(X.size(r)!==X.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,r)}},uo=class{constructor(r,t,u){this.module=r;this.backend=t;this.customDataOffset=0;this.customDataSize=0;let s=r.HEAPU32,f=u>>>2;this.opKernelContext=s[f++];let m=s[f++];this.outputCount=s[f++],this.customDataOffset=s[f++],this.customDataSize=s[f++];let d=[];for(let y=0;y<m;y++){let w=s[f++],C=s[f++],$=s[f++],T=[];for(let P=0;P<$;P++)T.push(s[f++]);d.push(new mn(r,w,C,T))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(r,t){let u=t?.inputs?.map(d=>typeof d=="number"?this.inputs[d]:d)??this.inputs,s=t?.outputs??[],f=(d,y,w)=>new mn(this.module,y,this.output(d,w),w),m=(d,y)=>{let w=ln(d);if(!w)throw new Error(`Unsupported data type: ${d}`);let C=w*X.size(y),$=C>0?this.backend.gpuDataManager.create(C).id:0;return new mn(this.module,d,$,y)};return this.backend.run(r,u,s,f,m)}output(r,t){let u=this.module.stackSave();try{let s=this.module.stackAlloc((1+t.length)*4),f=s>>2;this.module.HEAPU32[f++]=t.length;for(let m=0;m<t.length;m++)this.module.HEAPU32[f++]=t[m];return this.module._JsepOutput(this.opKernelContext,r,s)}catch(s){throw new Error(`Failed to generate kernel\'s output[${r}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(u)}}},s0=async(e,r,t)=>{let u=e.jsepInit;if(!u)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let s=new wi;await s.initialize(r,t),u(s,f=>s.alloc(f),f=>s.free(f),(f,m,d,y=!1)=>{if(y)He("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${f}, dst=${m}, size=${d}`),s.memcpy(f,m);else{He("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${f}, gpuDataId=${m}, size=${d}`);let w=e.HEAPU8.subarray(f>>>0,(f>>>0)+d);s.upload(m,w)}},async(f,m,d)=>{He("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${f}, dataOffset=${m}, size=${d}`),await s.download(f,()=>e.HEAPU8.subarray(m>>>0,(m>>>0)+d))},(f,m,d)=>s.createKernel(f,m,d,e.UTF8ToString(e._JsepGetNodeName(m))),f=>s.releaseKernel(f),(f,m,d,y)=>{He("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${f}, contextDataOffset=${m}`);let w=new uo(e,s,m);return s.computeKernel(f,w,y)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay())}});var Qs;Qs=Ns();var wh=Ks(),Pi,Oi=!1,qn=!1,Zs=!1,_h=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},$h=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ch=(e,r)=>e?r?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":r?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Xs=async e=>{if(Oi)return Promise.resolve();if(qn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Zs)throw new Error("previous call to \'initializeWebAssembly()\' failed.");qn=!0;let r=e.initTimeout,t=e.numThreads,u=e.simd,s=_h(t),f=u&&$h(),m=e.wasmPaths,d=typeof m=="string"?m:void 0,y=Ch(f,s),w=typeof m=="object"?m[y]:void 0,C=!1,$=[];if(r>0&&$.push(new Promise(T=>{setTimeout(()=>{C=!0,T()},r)})),$.push(new Promise((T,P)=>{let A=s?wh:Qs,O={locateFile:(R,D)=>{if(s&&R.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ys()],{type:"text/javascript"}));if(R.endsWith(".wasm")){if(w)return w;let k=d??D;return y==="ort-wasm-simd.wasm"?k+"ort-wasm-simd.jsep.wasm":y==="ort-wasm-simd-threaded.wasm"?k+"ort-wasm-simd-threaded.jsep.wasm":k+y}return D+R}};if(s)if(O.numThreads=t,typeof Blob>"u")O.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let R=`var ortWasmThreaded=${A.toString()};`;O.mainScriptUrlOrBlob=new Blob([R],{type:"text/javascript"})}A(O).then(R=>{qn=!1,Oi=!0,Pi=R,T()},R=>{qn=!1,Zs=!0,P(R)})})),await Promise.race($),C)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Ze=()=>{if(Oi&&Pi)return Pi;throw new Error("WebAssembly is not initialized yet.")};var Ke=(e,r)=>{let t=Ze(),u=t.lengthBytesUTF8(e)+1,s=t._malloc(u);return t.stringToUTF8(e,s,u),r.push(s),s},un=(e,r,t,u)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([s,f])=>{let m=r?r+s:s;if(typeof f=="object")un(f,m+".",t,u);else if(typeof f=="string"||typeof f=="number")u(m,f.toString());else if(typeof f=="boolean")u(m,f?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof f}`)})},Ge=e=>{let r=Ze(),t=r.stackSave();try{let u=r.stackAlloc(8);r._OrtGetLastError(u,u+4);let s=r.HEAP32[u/4],f=r.HEAPU32[u/4+1],m=f?r.UTF8ToString(f):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${m}`)}finally{r.stackRestore(t)}};var Js=e=>{let r=Ze(),t=0,u=[],s=e||{};try{if(e?.logSeverityLevel===void 0)s.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)s.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(s.terminate=!1);let f=0;return e?.tag!==void 0&&(f=Ke(e.tag,u)),t=r._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,f),t===0&&Ge("Can\'t create run options."),e?.extra!==void 0&&un(e.extra,"",new WeakSet,(m,d)=>{let y=Ke(m,u),w=Ke(d,u);r._OrtAddRunConfigEntry(t,y,w)!==0&&Ge(`Can\'t set a run config entry: ${m} - ${d}.`)}),[t,u]}catch(f){throw t!==0&&r._OrtReleaseRunOptions(t),u.forEach(m=>r._free(m)),f}};var Sh=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},xh=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ih=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Ah=(e,r,t)=>{for(let u of r){let s=typeof u=="string"?u:u.name;switch(s){case"webnn":if(s="WEBNN",typeof u!="string"){let m=u;if(m?.deviceType){let d=Ke("deviceType",t),y=Ke(m.deviceType,t);Ze()._OrtAddSessionConfigEntry(e,d,y)!==0&&Ge(`Can\'t set a session config entry: \'deviceType\' - ${m.deviceType}.`)}if(m?.numThreads){let d=m.numThreads;(typeof d!="number"||!Number.isInteger(d)||d<0)&&(d=0);let y=Ke("numThreads",t),w=Ke(d.toString(),t);Ze()._OrtAddSessionConfigEntry(e,y,w)!==0&&Ge(`Can\'t set a session config entry: \'numThreads\' - ${m.numThreads}.`)}if(m?.powerPreference){let d=Ke("powerPreference",t),y=Ke(m.powerPreference,t);Ze()._OrtAddSessionConfigEntry(e,d,y)!==0&&Ge(`Can\'t set a session config entry: \'powerPreference\' - ${m.powerPreference}.`)}}break;case"webgpu":if(s="JS",typeof u!="string"){let m=u;if(m?.preferredLayout){if(m.preferredLayout!=="NCHW"&&m.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${m.preferredLayout}`);let d=Ke("preferredLayout",t),y=Ke(m.preferredLayout,t);Ze()._OrtAddSessionConfigEntry(e,d,y)!==0&&Ge(`Can\'t set a session config entry: \'preferredLayout\' - ${m.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${s}`)}let f=Ke(s,t);Ze()._OrtAppendExecutionProvider(e,f)!==0&&Ge(`Can\'t append execution provider: ${s}.`)}},eu=e=>{let r=Ze(),t=0,u=[],s=e||{};Ih(s);try{let f=Sh(s.graphOptimizationLevel??"all"),m=xh(s.executionMode??"sequential"),d=typeof s.logId=="string"?Ke(s.logId,u):0,y=s.logSeverityLevel??2;if(!Number.isInteger(y)||y<0||y>4)throw new Error(`log serverity level is not valid: ${y}`);let w=s.logVerbosityLevel??0;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log verbosity level is not valid: ${w}`);let C=typeof s.optimizedModelFilePath=="string"?Ke(s.optimizedModelFilePath,u):0;if(t=r._OrtCreateSessionOptions(f,!!s.enableCpuMemArena,!!s.enableMemPattern,m,!!s.enableProfiling,0,d,y,w,C),t===0&&Ge("Can\'t create session options."),s.executionProviders&&Ah(t,s.executionProviders,u),s.enableGraphCapture!==void 0){if(typeof s.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let $=Ke("enableGraphCapture",u),T=Ke(s.enableGraphCapture.toString(),u);r._OrtAddSessionConfigEntry(t,$,T)!==0&&Ge(`Can\'t set a session config entry: \'enableGraphCapture\' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[$,T]of Object.entries(s.freeDimensionOverrides)){if(typeof $!="string")throw new Error(`free dimension override name must be a string: ${$}`);if(typeof T!="number"||!Number.isInteger(T)||T<0)throw new Error(`free dimension override value must be a non-negative integer: ${T}`);let P=Ke($,u);r._OrtAddFreeDimensionOverride(t,P,T)!==0&&Ge(`Can\'t set a free dimension override: ${$} - ${T}.`)}return s.extra!==void 0&&un(s.extra,"",new WeakSet,($,T)=>{let P=Ke($,u),A=Ke(T,u);r._OrtAddSessionConfigEntry(t,P,A)!==0&&Ge(`Can\'t set a session config entry: ${$} - ${T}.`)}),[t,u]}catch(f){throw t!==0&&r._OrtReleaseSessionOptions(t),u.forEach(m=>r._free(m)),f}};Ce();var ru=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(r){if(r.code==="ERR_FS_FILE_TOO_LARGE"){let t=(void 0)(e),u=[];for await(let s of t)u.push(s);return new Uint8Array(Buffer.concat(u))}throw r}else{let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),u=t?parseInt(t,10):0;if(u<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let s=r.body.getReader(),f;try{f=new ArrayBuffer(u)}catch(d){if(d instanceof RangeError){let y=Math.ceil(u/65536);f=new WebAssembly.Memory({initial:y,maximum:y}).buffer}else throw d}let m=0;for(;;){let{done:d,value:y}=await s.read();if(d)break;let w=y.byteLength;new Uint8Array(f,m,w).set(y),m+=w}return new Uint8Array(f,0,u)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var u0=(e,r)=>{Ze()._OrtInit(e,r)!==0&&Ge("Can\'t initialize onnxruntime.")},Kc=async e=>{u0(e.wasm.numThreads,dn(e.logLevel))},Yc=async(e,r)=>{if(r==="webgpu"||r==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=await navigator.gpu.requestAdapter();if(!t)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let u=(Fc(),ir(Lc)).init;await u(Ze(),e,t)}},ur=new Map,l0=e=>{let r=Ze(),t=r.stackSave();try{let u=r.stackAlloc(8);return r._OrtGetInputOutputCount(e,u,u+4)!==0&&Ge("Can\'t get session input/output count."),[r.HEAP32[u/4],r.HEAP32[u/4+1]]}finally{r.stackRestore(t)}},lo=e=>{let r=Ze(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Zc=async(e,r)=>{let t,u,s=Ze();Array.isArray(e)?[t,u]=e:e.buffer===s.HEAPU8.buffer?[t,u]=[e.byteOffset,e.byteLength]:[t,u]=lo(e);let f=0,m=0,d=0,y=[],w=[],C=[];try{if([m,y]=eu(r),r?.externalData&&s.mountExternalData){let k=[];for(let G of r.externalData){let V=typeof G=="string"?G:G.path;k.push(ru(typeof G=="string"?G:G.data).then(q=>{s.mountExternalData(V,q)}))}await Promise.all(k)}f=await s._OrtCreateSession(t,u,m),f===0&&Ge("Can\'t create a session.");let[$,T]=l0(f),P=!!r?.enableGraphCapture,A=[],O=[],R=[];for(let k=0;k<$;k++){let G=s._OrtGetInputName(f,k);G===0&&Ge("Can\'t get an input name."),w.push(G),A.push(s.UTF8ToString(G))}for(let k=0;k<T;k++){let G=s._OrtGetOutputName(f,k);G===0&&Ge("Can\'t get an output name."),C.push(G);let V=s.UTF8ToString(G);O.push(V);{if(P&&r?.preferredOutputLocation===void 0){R.push("gpu-buffer");continue}let q=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[V]??"cpu";if(q!=="cpu"&&q!=="cpu-pinned"&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}.`);if(P&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);R.push(q)}}let D=null;return R.some(k=>k==="gpu-buffer")&&(d=s._OrtCreateBinding(f),d===0&&Ge("Can\'t create IO binding."),D={handle:d,outputPreferredLocations:R,outputPreferredLocationsEncoded:R.map(k=>Ri(k))}),ur.set(f,[f,w,C,D,P,!1]),[f,A,O]}catch($){throw w.forEach(T=>s._OrtFree(T)),C.forEach(T=>s._OrtFree(T)),d!==0&&s._OrtReleaseBinding(d),f!==0&&s._OrtReleaseSession(f),$}finally{s._free(t),m!==0&&s._OrtReleaseSessionOptions(m),y.forEach($=>s._free($)),s.unmountExternalData?.()}},Qc=e=>{let r=Ze(),t=ur.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[u,s,f,m,d]=t;m&&(d&&r._OrtClearBoundOutputs(m.handle),r._OrtReleaseBinding(m.handle)),r.jsepOnReleaseSession?.(e),s.forEach(y=>r._OrtFree(y)),f.forEach(y=>r._OrtFree(y)),r._OrtReleaseSession(u),ur.delete(e)},qc=(e,r,t,u,s,f=!1)=>{if(!e){r.push(0);return}let m=Ze(),d=e[0],y=e[1],w=e[3],C,$;if(d==="string"&&w==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(f&&w!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if(w==="gpu-buffer"){let A=e[2].gpuBuffer,O=ln(ki(d));$=y.reduce((R,D)=>R*D,1)*O,C=m.jsepRegisterBuffer(u,s,A,$)}else{let A=e[2];if(Array.isArray(A)){$=4*A.length,C=m._malloc($),t.push(C);let O=C/4;for(let R=0;R<A.length;R++){if(typeof A[R]!="string")throw new TypeError(`tensor data at index ${R} is not a string`);m.HEAPU32[O++]=Ke(A[R],t)}}else $=A.byteLength,C=m._malloc($),t.push(C),m.HEAPU8.set(new Uint8Array(A.buffer,A.byteOffset,$),C)}let T=m.stackSave(),P=m.stackAlloc(4*y.length);try{let A=P/4;y.forEach(R=>m.HEAP32[A++]=R);let O=m._OrtCreateTensor(ki(d),C,$,P,y.length,Ri(w));O===0&&Ge(`Can\'t create tensor for input/output. session=${u}, index=${s}.`),r.push(O)}finally{m.stackRestore(T)}},Xc=async(e,r,t,u,s,f)=>{let m=Ze(),d=ur.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let y=d[0],w=d[1],C=d[2],$=d[3],T=d[4],P=d[5],A=r.length,O=u.length,R=0,D=[],k=[],G=[],V=[],q=m.stackSave(),Y=m.stackAlloc(A*4),J=m.stackAlloc(A*4),ie=m.stackAlloc(O*4),ge=m.stackAlloc(O*4);try{[R,D]=Js(f);for(let ye=0;ye<A;ye++)qc(t[ye],k,V,e,r[ye],T);for(let ye=0;ye<O;ye++)qc(s[ye],G,V,e,A+u[ye],T);let L=Y/4,ue=J/4,je=ie/4,Ne=ge/4;for(let ye=0;ye<A;ye++)m.HEAPU32[L++]=k[ye],m.HEAPU32[ue++]=w[r[ye]];for(let ye=0;ye<O;ye++)m.HEAPU32[je++]=G[ye],m.HEAPU32[Ne++]=C[u[ye]];if($&&!P){let{handle:ye,outputPreferredLocations:Me,outputPreferredLocationsEncoded:Ae}=$;if(w.length!==A)throw new Error(`input count from feeds (${A}) is expected to be always equal to model\'s input count (${w.length}).`);for(let $e=0;$e<A;$e++){let Se=r[$e];await m._OrtBindInput(ye,w[Se],k[$e])!==0&&Ge(`Can\'t bind input[${$e}] for session=${e}.`)}for(let $e=0;$e<O;$e++){let Se=u[$e];s[$e]?.[3]?m._OrtBindOutput(ye,C[Se],G[$e],0)!==0&&Ge(`Can\'t bind pre-allocated output[${$e}] for session=${e}.`):m._OrtBindOutput(ye,C[Se],0,Ae[Se])!==0&&Ge(`Can\'t bind output[${$e}] to ${Me[$e]} for session=${e}.`)}ur.set(e,[y,w,C,$,T,!0])}m.jsepOnRunStart?.(y);let _e;$?_e=await m._OrtRunWithBinding(y,$.handle,O,ie,R):_e=await m._OrtRun(y,J,Y,A,ge,O,ie,R),_e!==0&&Ge("failed to call OrtRun().");let ae=[];for(let ye=0;ye<O;ye++){let Me=m.HEAPU32[ie/4+ye];if(Me===G[ye]){ae.push(s[ye]);continue}let Ae=m.stackSave(),$e=m.stackAlloc(4*4),Se=!1,xe,De=0;try{m._OrtGetTensorData(Me,$e,$e+4,$e+8,$e+12)!==0&&Ge(`Can\'t access output tensor data on index ${ye}.`);let te=$e/4,fe=m.HEAPU32[te++];De=m.HEAPU32[te++];let Ie=m.HEAPU32[te++],st=m.HEAPU32[te++],et=[];for(let Fe=0;Fe<st;Fe++)et.push(m.HEAPU32[Ie/4+Fe]);m._OrtFree(Ie);let lt=et.reduce((Fe,Qe)=>Fe*Qe,1);xe=Ht(fe);let It=$?.outputPreferredLocations[u[ye]];if(xe==="string"){if(It==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Fe=[],Qe=De/4;for(let pt=0;pt<lt;pt++){let At=m.HEAPU32[Qe++],Vt=pt===lt-1?void 0:m.HEAPU32[Qe]-At;Fe.push(m.UTF8ToString(At,Vt))}ae.push([xe,et,Fe,"cpu"])}else if(It==="gpu-buffer"&&lt>0){let Fe=m.jsepGetBuffer(De),Qe=ln(fe);if(Qe===void 0||!tu(xe))throw new Error(`Unsupported data type: ${xe}`);Se=!0,ae.push([xe,et,{gpuBuffer:Fe,download:m.jsepCreateDownloader(Fe,lt*Qe,xe),dispose:()=>{m._OrtReleaseTensor(Me)}},"gpu-buffer"])}else{let Fe=Kn(xe),Qe=new Fe(lt);new Uint8Array(Qe.buffer,Qe.byteOffset,Qe.byteLength).set(m.HEAPU8.subarray(De,De+Qe.byteLength)),ae.push([xe,et,Qe,"cpu"])}}finally{m.stackRestore(Ae),xe==="string"&&De&&m._free(De),Se||m._OrtReleaseTensor(Me)}}return $&&!T&&(m._OrtClearBoundOutputs($.handle),ur.set(e,[y,w,C,$,T,!1])),ae}finally{m.stackRestore(q),k.forEach(L=>m._OrtReleaseTensor(L)),G.forEach(L=>m._OrtReleaseTensor(L)),V.forEach(L=>m._free(L)),R!==0&&m._OrtReleaseRunOptions(R),D.forEach(L=>m._free(L))}},Jc=e=>{let r=Ze(),t=ur.get(e);if(!t)throw new Error("invalid session id");let u=t[0],s=r._OrtEndProfiling(u);s===0&&Ge("Can\'t get an profile file name."),r._OrtFree(s)},ef=e=>{let r=[];for(let t of e){let u=t[2];!Array.isArray(u)&&"buffer"in u&&r.push(u.buffer)}return r};self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":Xs(t.wasm).then(()=>{Kc(t).then(()=>{postMessage({type:r})},u=>{postMessage({type:r,err:u})})},u=>{postMessage({type:r,err:u})});break;case"init-ep":{let{epName:u,env:s}=t;Yc(s,u).then(()=>{postMessage({type:r})},f=>{postMessage({type:r,err:f})});break}case"copy-from":{let{buffer:u}=t,s=lo(u);postMessage({type:r,out:s});break}case"create":{let{model:u,options:s}=t;Zc(u,s).then(f=>{postMessage({type:r,out:f})},f=>{postMessage({type:r,err:f})});break}case"release":Qc(t),postMessage({type:r});break;case"run":{let{sessionId:u,inputIndices:s,inputs:f,outputIndices:m,options:d}=t;Xc(u,s,f,m,new Array(m.length).fill(null),d).then(y=>{y.some(w=>w[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:y},ef(y))},y=>{postMessage({type:r,err:y})});break}case"end-profiling":Jc(t),postMessage({type:r});break;default:}}catch(u){postMessage({type:r,err:u})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'})),$l=D((()=>{oe(),wl(),ks(),Yu=()=>!!d.wasm.proxy&&typeof document<"u",Qu=!1,Ju=!1,Xu=!1,tl=new Map,nl=(e,t)=>{let n=tl.get(e);n?n.push(t):tl.set(e,[t])},il=()=>{if(Qu||!Ju||Xu||!Zu)throw new Error("worker not ready")},rl=e=>{switch(e.data.type){case"init-wasm":Qu=!1,e.data.err?(Xu=!0,el[1](e.data.err)):(Ju=!0,el[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=tl.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},al=typeof document<"u"?document?.currentScript?.src:void 0,ol=async()=>{if(!Ju){if(Qu)throw new Error("multiple calls to 'initWasm()' detected.");if(Xu)throw new Error("previous call to 'initWasm()' failed.");if(Qu=!0,Yu())return void 0===d.wasm.wasmPaths&&al&&0!==al.indexOf("blob:")&&(d.wasm.wasmPaths=al.substr(0,+al.lastIndexOf("/")+1)),new Promise(((e,t)=>{Zu?.terminate();let n=URL.createObjectURL(new Blob([_l()],{type:"text/javascript"}));(Zu=new Worker(n,{name:"ort-wasm-proxy-worker"})).onerror=e=>t(e),Zu.onmessage=rl,URL.revokeObjectURL(n),el=[e,t];let i={type:"init-wasm",in:d};Zu.postMessage(i)}));try{await Te(d.wasm),await Du(d),Ju=!0}catch(e){throw Xu=!0,e}finally{Qu=!1}}},sl=async e=>{if(Yu())return il(),new Promise(((t,n)=>{nl("init-ep",[t,n]);let i={type:"init-ep",in:{epName:e,env:d}};Zu.postMessage(i)}));await Nu(d,e)},ul=async e=>Yu()?(il(),new Promise(((t,n)=>{nl("copy-from",[t,n]);let i={type:"copy-from",in:{buffer:e}};Zu.postMessage(i,[e.buffer])}))):Lu(e),ll=async(e,t)=>{if(Yu()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return il(),new Promise(((n,i)=>{nl("create",[n,i]);let r={type:"create",in:{model:e,options:t}},a=[];e instanceof Uint8Array&&a.push(e.buffer),Zu.postMessage(r,a)}))}return Hu(e,t)},dl=async e=>{if(Yu())return il(),new Promise(((t,n)=>{nl("release",[t,n]);let i={type:"release",in:e};Zu.postMessage(i)}));Gu(e)},cl=async(e,t,n,i,r,a)=>{if(Yu()){if(n.some((e=>"cpu"!==e[3])))throw new Error("input tensor on GPU is not supported for proxy.");if(r.some((e=>e)))throw new Error("pre-allocated output tensor is not supported for proxy.");return il(),new Promise(((r,o)=>{nl("run",[r,o]);let s=n,u={type:"run",in:{sessionId:e,inputIndices:t,inputs:s,outputIndices:i,options:a}};Zu.postMessage(u,Ku(s))}))}return Fu(e,t,n,i,r,a)},pl=async e=>{if(Yu())return il(),new Promise(((t,n)=>{nl("end-profiling",[t,n]);let i={type:"end-profiling",in:e};Zu.postMessage(i)}));qu(e)}})),bl=D((()=>{oe(),$l(),zs(),Rs(),fl=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},hl=e=>{switch(e[3]){case"cpu":return new S(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Ve(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:i,dispose:r}=e[2];return S.fromGpuBuffer(n,{dataType:t,dims:e[1],download:i,dispose:r})}default:throw new Error(`invalid data location: ${e[3]}`)}},ml=class{async fetchModelAndCopyToWasmMemory(e){return ul(await qe(e))}async loadModel(e,t){let n;k(),n="string"==typeof e?typeof process<"u"&&process.versions&&process.versions.node?await qe(e):await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await ll(n,t),T()}async dispose(){return dl(this.sessionId)}async run(e,t,n){k();let i=[],r=[];Object.entries(e).forEach((e=>{let t=e[0],n=e[1],a=this.inputNames.indexOf(t);if(-1===a)throw new Error(`invalid input '${t}'`);i.push(n),r.push(a)}));let a=[],o=[];Object.entries(t).forEach((e=>{let t=e[0],n=e[1],i=this.outputNames.indexOf(t);if(-1===i)throw new Error(`invalid output '${t}'`);a.push(n),o.push(i)}));let s=i.map(((e,t)=>fl(e,(()=>`input "${this.inputNames[r[t]]}"`)))),u=a.map(((e,t)=>e?fl(e,(()=>`output "${this.outputNames[o[t]]}"`)):null)),l=await cl(this.sessionId,r,s,o,u,n),d={};for(let e=0;e<l.length;e++)d[this.outputNames[o[e]]]=a[e]??hl(l[e]);return T(),d}startProfiling(){}endProfiling(){pl(this.sessionId)}}})),xl=D((()=>{oe(),$l(),bl(),gl=()=>{if(("number"!=typeof d.wasm.initTimeout||d.wasm.initTimeout<0)&&(d.wasm.initTimeout=0),"boolean"!=typeof d.wasm.simd&&(d.wasm.simd=!0),"boolean"!=typeof d.wasm.proxy&&(d.wasm.proxy=!1),"boolean"!=typeof d.wasm.trace&&(d.wasm.trace=!1),"number"!=typeof d.wasm.numThreads||!Number.isInteger(d.wasm.numThreads)||d.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(d.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;d.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},yl=class{async init(e){gl(),await ol(),await sl(e)}async createInferenceSessionHandler(e,t){let n=new ml;return await n.loadModel(e,t),Promise.resolve(n)}}})),Cl={};U(Cl,{wasmBackend:()=>Sl});var Sl,El=D((()=>{xl(),Sl=new yl}));oe(),oe(),oe();var Il=ae;{let e=(El(),W(Cl)).wasmBackend;a("webgpu",e,5),a("webnn",e,5),a("cpu",e,10),a("wasm",e,10)}Object.defineProperty(d.versions,"web",{value:"1.18.0",enumerable:!0})}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};(()=>{
/*!******************!*\
  !*** ./index.js ***!
  \******************/
n.r(i);var e=n(/*! onnxruntime-web/webgpu */"../../../onnxruntime/js/web/dist/esm/ort.webgpu.min.js");const t=500,r=500,a=1024,o=1024,s={sam_b:[{name:"sam-b-encoder",url:"https://huggingface.co/schmuell/sam-b-fp16/resolve/main/sam_vit_b_01ec64.encoder-fp16.onnx",size:180},{name:"sam-b-decoder",url:"https://huggingface.co/schmuell/sam-b-fp16/resolve/main/sam_vit_b_01ec64.decoder.onnx",size:17}],sam_b_int8:[{name:"sam-b-encoder-int8",url:"https://huggingface.co/schmuell/sam-b-fp16/resolve/main/sam_vit_b-encoder-int8.onnx",size:108},{name:"sam-b-decoder-int8",url:"https://huggingface.co/schmuell/sam-b-fp16/resolve/main/sam_vit_b-decoder-int8.onnx",size:5}]},u=function(){const e=window.location.search.substring(1);var t={model:"sam_b",provider:"webgpu",device:"gpu",threads:"1"};let n=e.split("&");for(var i=0;i<n.length;i++){let e=n[i].split("=");if(e[0]in t)t[e[0]]=decodeURIComponent(e[1]);else if(e[0].length>0)throw new Error("unknown argument: "+e[0])}return t.threads=parseInt(t.threads),t.local=parseInt(t.local),t}();let l,d,c;var p;e.default.env.wasm.wasmPaths="dist/",e.default.env.wasm.numThreads=u.threads;var f,h,m=[],g=[],y=!1;function v(e){document.getElementById("status").innerText+=`\n${e}`}async function w(e){if(0==m.length)return;const[t,n]=[l.width,l.height],i=new OffscreenCanvas(t,n),r=i.getContext("2d"),a=r.getImageData(0,0,t,n),o=new OffscreenCanvas(t,n).getContext("2d");o.drawImage(await createImageBitmap(h),0,0);const s=o.getImageData(0,0,t,n);for(let e=0;e<s.data.length;e+=4)if(s.data[e]>0)for(let t=0;t<4;++t){const n=e+t;a.data[n]=f.data[n]}r.putImageData(a,0,0);const u=document.createElement("a");u.download="image.png",u.href=URL.createObjectURL(await i.convertToBlob()),u.click(),u.remove()}async function _(t,n){let i=l.getContext("2d");if(i.clearRect(0,0,l.width,l.height),l.width=f.width,l.height=f.height,i.putImageData(f,0,0),t.length>0){void 0===p&&await s[u.model][0].sess;const r=await p,l=s[u.model][1].sess,d=function(t,n,i){const r=new e.default.Tensor(new Float32Array(65536),[1,1,256,256]),s=new e.default.Tensor(new Float32Array([0]),[1]),u=new e.default.Tensor(new Float32Array([o,a]),[2]),l=new e.default.Tensor(new Float32Array(n),[1,n.length/2,2]),d=new e.default.Tensor(new Float32Array(i),[1,i.length]);return{image_embeddings:(c=t.image_embeddings,new e.default.Tensor(c.type,Float32Array.from(c.data),c.dims)),point_coords:l,point_labels:d,mask_input:r,has_mask_input:s,orig_im_size:u};var c}(r,t,n),f=performance.now(),m=await l.run(d);c.innerText=`${(performance.now()-f).toFixed(1)}ms`;for(let e=0;e<t.length;e+=2)i.fillStyle="blue",i.fillRect(t[e],t[e+1],10,10);const g=m.masks;h=g.toImageData(),i.globalAlpha=.3,i.drawImage(await createImageBitmap(h),0,0)}}function $(e){const t=l.getBoundingClientRect();return[Math.trunc(e.clientX-t.left),Math.trunc(e.clientY-t.top)]}async function b(e){if(!y)try{y=!0,l.style.cursor="wait";const t=$(e);await _([...m,t[0],t[1]],[...g,1])}finally{l.style.cursor="default",y=!1}}async function x(e){if(!y)try{y=!0,l.style.cursor="wait";const t=$(e),n=1;m.push(t[0]),m.push(t[1]),g.push(n),await _(m,g)}finally{l.style.cursor="default",y=!1}}async function C(n){const i=document.getElementById("encoder_latency");i.innerText="",m=[],g=[],d.disabled=!0,c.innerText="",l.style.cursor="wait",p=void 0;let h=n.width,y=n.height;h>y?h>t&&(y*=t/h,h=t):y>r&&(h*=r/y,y=r),h=Math.round(h),y=Math.round(y),l.width=h,l.height=y;var v=l.getContext("2d");v.drawImage(n,0,0,h,y),f=v.getImageData(0,0,h,y);const w=await e.default.Tensor.fromImage(f,{resizedWidth:a,resizedHeight:o}),_=u.isSlimSam?{pixel_values:w}:{input_image:w},$=await s[u.model][0].sess,b=performance.now();(p=$.run(_)).then((()=>{i.innerText=`${(performance.now()-b).toFixed(1)}ms`,l.style.cursor="default"})),d.disabled=!1}async function S(e,t){try{const n=await caches.open("onnx");let i=await n.match(e);null==i?(await n.add(e),i=await n.match(e),v(`${t} (network)`)):v(`${t} (cached)`);return await i.arrayBuffer()}catch(n){return v(`${t} (network)`),await fetch(e).then((e=>e.arrayBuffer()))}}async function E(){s[u.model];l=document.getElementById("img_canvas"),l.style.cursor="wait",d=document.getElementById("file-in"),c=document.getElementById("decoder_latency"),document.getElementById("clear-button").addEventListener("click",(()=>{_(m=[],g=[])}));let t=document.getElementById("original-image");await async function(t){const n=await caches.open("onnx");let i=0;for(const[e,r]of Object.entries(t))void 0===await n.match(r.url)&&(i+=r.size);v(i>0?`downloading ${i} MB from network ... it might take a while`:"loading...");const r=performance.now();for(const[n,i]of Object.entries(t))try{const t={executionProviders:[u.provider],enableMemPattern:!1,enableCpuMemArena:!1,extra:{session:{disable_prepacking:"1",use_device_allocator_for_initializers:"1",use_ort_model_bytes_directly:"1",use_ort_model_bytes_for_initializers:"1"}}},n=await S(i.url,i.name),r=i.opt||{},a={...t,...r};i.sess=await e.default.InferenceSession.create(n,a)}catch(e){v(`${i.url} failed, ${e}`)}v(`ready, ${(performance.now()-r).toFixed(1)}ms`)}(s[u.model]).then((()=>{l.addEventListener("click",x),l.addEventListener("mousemove",b),document.getElementById("cut-button").addEventListener("click",w),d.onchange=function(e){let n=(e.target||window.event.src).files;if(FileReader&&n&&n.length){let e=new FileReader;e.onload=()=>{t.onload=()=>C(t),t.src=e.result},e.readAsDataURL(n[0])}},C(t)}),(e=>{v(e)}))}document.addEventListener("DOMContentLoaded",(()=>{(async function(){try{return(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch(e){return!1}})().then((e=>{e?E():v("Your GPU or Browser doesn't support webgpu/f16")}))}))})();
//# sourceMappingURL=index.min.js.map